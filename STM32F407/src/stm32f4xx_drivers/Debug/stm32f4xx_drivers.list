
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000730  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008d8  080008e0  000108e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008d8  080008d8  000108e0  2**0
                  CONTENTS
  4 .ARM          00000000  080008d8  080008d8  000108e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008d8  080008e0  000108e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008d8  080008d8  000108d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008dc  080008dc  000108dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000108e0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000108e0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000072d  00000000  00000000  00010910  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000196  00000000  00000000  0001103d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  000111d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  00011280  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001403  00000000  00000000  00011310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000098e  00000000  00000000  00012713  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000057ed  00000000  00000000  000130a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001888e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000230  00000000  00000000  000188e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080008c0 	.word	0x080008c0

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080008c0 	.word	0x080008c0

080001e8 <GPIO_PCLK_Control>:

// API prototypes

//GPIO peripheral clock setup

void GPIO_PCLK_Control(GPIO_RegDef_t *pGPIOx, uint8_t En_Or_Di){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]

	if(En_Or_Di == ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d162      	bne.n	80002c0 <GPIO_PCLK_Control+0xd8>
		if(pGPIOx==GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a64      	ldr	r2, [pc, #400]	; (8000390 <GPIO_PCLK_Control+0x1a8>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PCLK_Control+0x28>
		{
			GPIOA_PCLK_EN();
 8000202:	4b64      	ldr	r3, [pc, #400]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a63      	ldr	r2, [pc, #396]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
		}else if(pGPIOx==GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 800020e:	e0b9      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a61      	ldr	r2, [pc, #388]	; (8000398 <GPIO_PCLK_Control+0x1b0>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PCLK_Control+0x3e>
			GPIOB_PCLK_EN();
 8000218:	4b5e      	ldr	r3, [pc, #376]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a5d      	ldr	r2, [pc, #372]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0ae      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a5c      	ldr	r2, [pc, #368]	; (800039c <GPIO_PCLK_Control+0x1b4>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PCLK_Control+0x54>
			GPIOC_PCLK_EN();
 800022e:	4b59      	ldr	r3, [pc, #356]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a58      	ldr	r2, [pc, #352]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0a3      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a58      	ldr	r2, [pc, #352]	; (80003a0 <GPIO_PCLK_Control+0x1b8>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PCLK_Control+0x6a>
			GPIOD_PCLK_EN();
 8000244:	4b53      	ldr	r3, [pc, #332]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a52      	ldr	r2, [pc, #328]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e098      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a53      	ldr	r2, [pc, #332]	; (80003a4 <GPIO_PCLK_Control+0x1bc>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PCLK_Control+0x80>
			GPIOE_PCLK_EN();
 800025a:	4b4e      	ldr	r3, [pc, #312]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a4d      	ldr	r2, [pc, #308]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e08d      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4f      	ldr	r2, [pc, #316]	; (80003a8 <GPIO_PCLK_Control+0x1c0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PCLK_Control+0x96>
			GPIOF_PCLK_EN();
 8000270:	4b48      	ldr	r3, [pc, #288]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a47      	ldr	r2, [pc, #284]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e082      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a4a      	ldr	r2, [pc, #296]	; (80003ac <GPIO_PCLK_Control+0x1c4>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PCLK_Control+0xac>
			GPIOG_PCLK_EN();
 8000286:	4b43      	ldr	r3, [pc, #268]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a42      	ldr	r2, [pc, #264]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e077      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a46      	ldr	r2, [pc, #280]	; (80003b0 <GPIO_PCLK_Control+0x1c8>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PCLK_Control+0xc2>
			GPIOH_PCLK_EN();
 800029c:	4b3d      	ldr	r3, [pc, #244]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a3c      	ldr	r2, [pc, #240]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e06c      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a41      	ldr	r2, [pc, #260]	; (80003b4 <GPIO_PCLK_Control+0x1cc>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d168      	bne.n	8000384 <GPIO_PCLK_Control+0x19c>
			GPIOI_PCLK_EN();
 80002b2:	4b38      	ldr	r3, [pc, #224]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a37      	ldr	r2, [pc, #220]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e061      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		if(pGPIOx==GPIOA)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a33      	ldr	r2, [pc, #204]	; (8000390 <GPIO_PCLK_Control+0x1a8>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PCLK_Control+0xee>
			GPIOA_PCLK_DI();
 80002c8:	4b32      	ldr	r3, [pc, #200]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a31      	ldr	r2, [pc, #196]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002ce:	f023 0301 	bic.w	r3, r3, #1
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e056      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOB)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a2f      	ldr	r2, [pc, #188]	; (8000398 <GPIO_PCLK_Control+0x1b0>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PCLK_Control+0x104>
			GPIOB_PCLK_DI();
 80002de:	4b2d      	ldr	r3, [pc, #180]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a2c      	ldr	r2, [pc, #176]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002e4:	f023 0302 	bic.w	r3, r3, #2
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e04b      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOC)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a2b      	ldr	r2, [pc, #172]	; (800039c <GPIO_PCLK_Control+0x1b4>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PCLK_Control+0x11a>
			GPIOC_PCLK_DI();
 80002f4:	4b27      	ldr	r3, [pc, #156]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a26      	ldr	r2, [pc, #152]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 80002fa:	f023 0304 	bic.w	r3, r3, #4
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e040      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOD)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a26      	ldr	r2, [pc, #152]	; (80003a0 <GPIO_PCLK_Control+0x1b8>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PCLK_Control+0x130>
			GPIOD_PCLK_DI();
 800030a:	4b22      	ldr	r3, [pc, #136]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a21      	ldr	r2, [pc, #132]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000310:	f023 0308 	bic.w	r3, r3, #8
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e035      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOE)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a22      	ldr	r2, [pc, #136]	; (80003a4 <GPIO_PCLK_Control+0x1bc>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PCLK_Control+0x146>
			GPIOE_PCLK_DI();
 8000320:	4b1c      	ldr	r3, [pc, #112]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a1b      	ldr	r2, [pc, #108]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000326:	f023 0310 	bic.w	r3, r3, #16
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e02a      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOF)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a1d      	ldr	r2, [pc, #116]	; (80003a8 <GPIO_PCLK_Control+0x1c0>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PCLK_Control+0x15c>
			GPIOF_PCLK_DI();
 8000336:	4b17      	ldr	r3, [pc, #92]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a16      	ldr	r2, [pc, #88]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800033c:	f023 0320 	bic.w	r3, r3, #32
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e01f      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOG)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a19      	ldr	r2, [pc, #100]	; (80003ac <GPIO_PCLK_Control+0x1c4>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PCLK_Control+0x172>
			GPIOG_PCLK_DI();
 800034c:	4b11      	ldr	r3, [pc, #68]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000352:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e014      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOH)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <GPIO_PCLK_Control+0x1c8>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PCLK_Control+0x188>
			GPIOH_PCLK_DI();
 8000362:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 8000368:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e009      	b.n	8000384 <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOI)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a10      	ldr	r2, [pc, #64]	; (80003b4 <GPIO_PCLK_Control+0x1cc>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d105      	bne.n	8000384 <GPIO_PCLK_Control+0x19c>
			GPIOI_PCLK_DI();
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <GPIO_PCLK_Control+0x1ac>)
 800037e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr
 8000390:	40020000 	.word	0x40020000
 8000394:	40023800 	.word	0x40023800
 8000398:	40020400 	.word	0x40020400
 800039c:	40020800 	.word	0x40020800
 80003a0:	40020c00 	.word	0x40020c00
 80003a4:	40021000 	.word	0x40021000
 80003a8:	40021400 	.word	0x40021400
 80003ac:	40021800 	.word	0x40021800
 80003b0:	40021c00 	.word	0x40021c00
 80003b4:	40022000 	.word	0x40022000

080003b8 <GPIO_Init>:


//GPOI Init DeInit

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b8:	b480      	push	{r7}
 80003ba:	b085      	sub	sp, #20
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80003c0:	2300      	movs	r3, #0
 80003c2:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	795b      	ldrb	r3, [r3, #5]
 80003c8:	2b03      	cmp	r3, #3
 80003ca:	d822      	bhi.n	8000412 <GPIO_Init+0x5a>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	795b      	ldrb	r3, [r3, #5]
 80003d0:	461a      	mov	r2, r3
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	791b      	ldrb	r3, [r3, #4]
 80003d6:	005b      	lsls	r3, r3, #1
 80003d8:	fa02 f303 	lsl.w	r3, r2, r3
 80003dc:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	681a      	ldr	r2, [r3, #0]
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	791b      	ldrb	r3, [r3, #4]
 80003e8:	005b      	lsls	r3, r3, #1
 80003ea:	2103      	movs	r1, #3
 80003ec:	fa01 f303 	lsl.w	r3, r1, r3
 80003f0:	43db      	mvns	r3, r3
 80003f2:	4619      	mov	r1, r3
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	400a      	ands	r2, r1
 80003fa:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	6819      	ldr	r1, [r3, #0]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	68fa      	ldr	r2, [r7, #12]
 8000408:	430a      	orrs	r2, r1
 800040a:	601a      	str	r2, [r3, #0]
		temp = 0;
 800040c:	2300      	movs	r3, #0
 800040e:	60fb      	str	r3, [r7, #12]
 8000410:	e062      	b.n	80004d8 <GPIO_Init+0x120>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	795b      	ldrb	r3, [r3, #5]
 8000416:	2b04      	cmp	r3, #4
 8000418:	d117      	bne.n	800044a <GPIO_Init+0x92>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800041a:	4b80      	ldr	r3, [pc, #512]	; (800061c <GPIO_Init+0x264>)
 800041c:	68db      	ldr	r3, [r3, #12]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	7912      	ldrb	r2, [r2, #4]
 8000422:	4611      	mov	r1, r2
 8000424:	2201      	movs	r2, #1
 8000426:	408a      	lsls	r2, r1
 8000428:	4611      	mov	r1, r2
 800042a:	4a7c      	ldr	r2, [pc, #496]	; (800061c <GPIO_Init+0x264>)
 800042c:	430b      	orrs	r3, r1
 800042e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000430:	4b7a      	ldr	r3, [pc, #488]	; (800061c <GPIO_Init+0x264>)
 8000432:	689b      	ldr	r3, [r3, #8]
 8000434:	687a      	ldr	r2, [r7, #4]
 8000436:	7912      	ldrb	r2, [r2, #4]
 8000438:	4611      	mov	r1, r2
 800043a:	2201      	movs	r2, #1
 800043c:	408a      	lsls	r2, r1
 800043e:	43d2      	mvns	r2, r2
 8000440:	4611      	mov	r1, r2
 8000442:	4a76      	ldr	r2, [pc, #472]	; (800061c <GPIO_Init+0x264>)
 8000444:	400b      	ands	r3, r1
 8000446:	6093      	str	r3, [r2, #8]
 8000448:	e035      	b.n	80004b6 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	795b      	ldrb	r3, [r3, #5]
 800044e:	2b05      	cmp	r3, #5
 8000450:	d117      	bne.n	8000482 <GPIO_Init+0xca>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000452:	4b72      	ldr	r3, [pc, #456]	; (800061c <GPIO_Init+0x264>)
 8000454:	689b      	ldr	r3, [r3, #8]
 8000456:	687a      	ldr	r2, [r7, #4]
 8000458:	7912      	ldrb	r2, [r2, #4]
 800045a:	4611      	mov	r1, r2
 800045c:	2201      	movs	r2, #1
 800045e:	408a      	lsls	r2, r1
 8000460:	4611      	mov	r1, r2
 8000462:	4a6e      	ldr	r2, [pc, #440]	; (800061c <GPIO_Init+0x264>)
 8000464:	430b      	orrs	r3, r1
 8000466:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000468:	4b6c      	ldr	r3, [pc, #432]	; (800061c <GPIO_Init+0x264>)
 800046a:	68db      	ldr	r3, [r3, #12]
 800046c:	687a      	ldr	r2, [r7, #4]
 800046e:	7912      	ldrb	r2, [r2, #4]
 8000470:	4611      	mov	r1, r2
 8000472:	2201      	movs	r2, #1
 8000474:	408a      	lsls	r2, r1
 8000476:	43d2      	mvns	r2, r2
 8000478:	4611      	mov	r1, r2
 800047a:	4a68      	ldr	r2, [pc, #416]	; (800061c <GPIO_Init+0x264>)
 800047c:	400b      	ands	r3, r1
 800047e:	60d3      	str	r3, [r2, #12]
 8000480:	e019      	b.n	80004b6 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	795b      	ldrb	r3, [r3, #5]
 8000486:	2b06      	cmp	r3, #6
 8000488:	d115      	bne.n	80004b6 <GPIO_Init+0xfe>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048a:	4b64      	ldr	r3, [pc, #400]	; (800061c <GPIO_Init+0x264>)
 800048c:	68db      	ldr	r3, [r3, #12]
 800048e:	687a      	ldr	r2, [r7, #4]
 8000490:	7912      	ldrb	r2, [r2, #4]
 8000492:	4611      	mov	r1, r2
 8000494:	2201      	movs	r2, #1
 8000496:	408a      	lsls	r2, r1
 8000498:	4611      	mov	r1, r2
 800049a:	4a60      	ldr	r2, [pc, #384]	; (800061c <GPIO_Init+0x264>)
 800049c:	430b      	orrs	r3, r1
 800049e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a0:	4b5e      	ldr	r3, [pc, #376]	; (800061c <GPIO_Init+0x264>)
 80004a2:	689b      	ldr	r3, [r3, #8]
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	7912      	ldrb	r2, [r2, #4]
 80004a8:	4611      	mov	r1, r2
 80004aa:	2201      	movs	r2, #1
 80004ac:	408a      	lsls	r2, r1
 80004ae:	4611      	mov	r1, r2
 80004b0:	4a5a      	ldr	r2, [pc, #360]	; (800061c <GPIO_Init+0x264>)
 80004b2:	430b      	orrs	r3, r1
 80004b4:	6093      	str	r3, [r2, #8]
		}
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	4b59      	ldr	r3, [pc, #356]	; (800061c <GPIO_Init+0x264>)
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	687a      	ldr	r2, [r7, #4]
 80004bc:	7912      	ldrb	r2, [r2, #4]
 80004be:	4611      	mov	r1, r2
 80004c0:	2201      	movs	r2, #1
 80004c2:	408a      	lsls	r2, r1
 80004c4:	4611      	mov	r1, r2
 80004c6:	4a55      	ldr	r2, [pc, #340]	; (800061c <GPIO_Init+0x264>)
 80004c8:	430b      	orrs	r3, r1
 80004ca:	6013      	str	r3, [r2, #0]
		SYSCFG_PCLK_EN();
 80004cc:	4b54      	ldr	r3, [pc, #336]	; (8000620 <GPIO_Init+0x268>)
 80004ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004d0:	4a53      	ldr	r2, [pc, #332]	; (8000620 <GPIO_Init+0x268>)
 80004d2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004d6:	6453      	str	r3, [r2, #68]	; 0x44

	}
	temp = 0;
 80004d8:	2300      	movs	r3, #0
 80004da:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	799b      	ldrb	r3, [r3, #6]
 80004e0:	461a      	mov	r2, r3
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	791b      	ldrb	r3, [r3, #4]
 80004e6:	005b      	lsls	r3, r3, #1
 80004e8:	fa02 f303 	lsl.w	r3, r2, r3
 80004ec:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	689a      	ldr	r2, [r3, #8]
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	791b      	ldrb	r3, [r3, #4]
 80004f8:	005b      	lsls	r3, r3, #1
 80004fa:	2103      	movs	r1, #3
 80004fc:	fa01 f303 	lsl.w	r3, r1, r3
 8000500:	43db      	mvns	r3, r3
 8000502:	4619      	mov	r1, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	400a      	ands	r2, r1
 800050a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	6899      	ldr	r1, [r3, #8]
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	68fa      	ldr	r2, [r7, #12]
 8000518:	430a      	orrs	r2, r1
 800051a:	609a      	str	r2, [r3, #8]

	temp = 0;
 800051c:	2300      	movs	r3, #0
 800051e:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	79db      	ldrb	r3, [r3, #7]
 8000524:	461a      	mov	r2, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	791b      	ldrb	r3, [r3, #4]
 800052a:	005b      	lsls	r3, r3, #1
 800052c:	fa02 f303 	lsl.w	r3, r2, r3
 8000530:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	68da      	ldr	r2, [r3, #12]
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	791b      	ldrb	r3, [r3, #4]
 800053c:	005b      	lsls	r3, r3, #1
 800053e:	2103      	movs	r1, #3
 8000540:	fa01 f303 	lsl.w	r3, r1, r3
 8000544:	43db      	mvns	r3, r3
 8000546:	4619      	mov	r1, r3
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	400a      	ands	r2, r1
 800054e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	68d9      	ldr	r1, [r3, #12]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	68fa      	ldr	r2, [r7, #12]
 800055c:	430a      	orrs	r2, r1
 800055e:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000560:	2300      	movs	r3, #0
 8000562:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOptType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	7a1b      	ldrb	r3, [r3, #8]
 8000568:	461a      	mov	r2, r3
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	791b      	ldrb	r3, [r3, #4]
 800056e:	fa02 f303 	lsl.w	r3, r2, r3
 8000572:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	685a      	ldr	r2, [r3, #4]
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	791b      	ldrb	r3, [r3, #4]
 800057e:	4619      	mov	r1, r3
 8000580:	2301      	movs	r3, #1
 8000582:	408b      	lsls	r3, r1
 8000584:	43db      	mvns	r3, r3
 8000586:	4619      	mov	r1, r3
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	400a      	ands	r2, r1
 800058e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	6859      	ldr	r1, [r3, #4]
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	68fa      	ldr	r2, [r7, #12]
 800059c:	430a      	orrs	r2, r1
 800059e:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN){
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	7a5b      	ldrb	r3, [r3, #9]
 80005a4:	2b02      	cmp	r3, #2
 80005a6:	d132      	bne.n	800060e <GPIO_Init+0x256>
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	08db      	lsrs	r3, r3, #3
 80005ae:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	791b      	ldrb	r3, [r3, #4]
 80005b4:	f003 0307 	and.w	r3, r3, #7
 80005b8:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	7afa      	ldrb	r2, [r7, #11]
 80005c0:	3208      	adds	r2, #8
 80005c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	009b      	lsls	r3, r3, #2
 80005cc:	220f      	movs	r2, #15
 80005ce:	fa02 f303 	lsl.w	r3, r2, r3
 80005d2:	43db      	mvns	r3, r3
 80005d4:	4618      	mov	r0, r3
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	7afa      	ldrb	r2, [r7, #11]
 80005dc:	4001      	ands	r1, r0
 80005de:	3208      	adds	r2, #8
 80005e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	7afa      	ldrb	r2, [r7, #11]
 80005ea:	3208      	adds	r2, #8
 80005ec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	7a5b      	ldrb	r3, [r3, #9]
 80005f4:	461a      	mov	r2, r3
 80005f6:	7abb      	ldrb	r3, [r7, #10]
 80005f8:	009b      	lsls	r3, r3, #2
 80005fa:	fa02 f303 	lsl.w	r3, r2, r3
 80005fe:	4618      	mov	r0, r3
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	7afa      	ldrb	r2, [r7, #11]
 8000606:	4301      	orrs	r1, r0
 8000608:	3208      	adds	r2, #8
 800060a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}



}
 800060e:	bf00      	nop
 8000610:	3714      	adds	r7, #20
 8000612:	46bd      	mov	sp, r7
 8000614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000618:	4770      	bx	lr
 800061a:	bf00      	nop
 800061c:	40013c00 	.word	0x40013c00
 8000620:	40023800 	.word	0x40023800

08000624 <GPIO_ToggleOutputPin>:
void GPIO_WriteOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){

	pGPIOx->ODR |= Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000624:	b480      	push	{r7}
 8000626:	b083      	sub	sp, #12
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
 800062c:	460b      	mov	r3, r1
 800062e:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	695b      	ldr	r3, [r3, #20]
 8000634:	78fa      	ldrb	r2, [r7, #3]
 8000636:	2101      	movs	r1, #1
 8000638:	fa01 f202 	lsl.w	r2, r1, r2
 800063c:	405a      	eors	r2, r3
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	615a      	str	r2, [r3, #20]
}
 8000642:	bf00      	nop
 8000644:	370c      	adds	r7, #12
 8000646:	46bd      	mov	sp, r7
 8000648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800064c:	4770      	bx	lr
	...

08000650 <GPIO_IRQInterruptConfig>:

//GPIO IRQ handling

void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t En_Or_Di)
{
 8000650:	b480      	push	{r7}
 8000652:	b083      	sub	sp, #12
 8000654:	af00      	add	r7, sp, #0
 8000656:	4603      	mov	r3, r0
 8000658:	460a      	mov	r2, r1
 800065a:	71fb      	strb	r3, [r7, #7]
 800065c:	4613      	mov	r3, r2
 800065e:	71bb      	strb	r3, [r7, #6]
	if(En_Or_Di == ENABLE)
 8000660:	79bb      	ldrb	r3, [r7, #6]
 8000662:	2b01      	cmp	r3, #1
 8000664:	d139      	bne.n	80006da <GPIO_IRQInterruptConfig+0x8a>
	{
		if(IRQNumber<=31)
 8000666:	79fb      	ldrb	r3, [r7, #7]
 8000668:	2b1f      	cmp	r3, #31
 800066a:	d810      	bhi.n	800068e <GPIO_IRQInterruptConfig+0x3e>
		{
			*NVIC_ISER0 |= (1<< IRQNumber);
 800066c:	4b38      	ldr	r3, [pc, #224]	; (8000750 <GPIO_IRQInterruptConfig+0x100>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	79fa      	ldrb	r2, [r7, #7]
 8000672:	2101      	movs	r1, #1
 8000674:	fa01 f202 	lsl.w	r2, r1, r2
 8000678:	4611      	mov	r1, r2
 800067a:	4a35      	ldr	r2, [pc, #212]	; (8000750 <GPIO_IRQInterruptConfig+0x100>)
 800067c:	430b      	orrs	r3, r1
 800067e:	6013      	str	r3, [r2, #0]
			*NVIC_ISER0 |= (1<< 0);
 8000680:	4b33      	ldr	r3, [pc, #204]	; (8000750 <GPIO_IRQInterruptConfig+0x100>)
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	4a32      	ldr	r2, [pc, #200]	; (8000750 <GPIO_IRQInterruptConfig+0x100>)
 8000686:	f043 0301 	orr.w	r3, r3, #1
 800068a:	6013      	str	r3, [r2, #0]
		}else if(IRQNumber >=64 && IRQNumber <96)
		{
			*NVIC_ISER2 |= (1<< IRQNumber%64);
		}
	}
}
 800068c:	e059      	b.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
		}else if(IRQNumber >31 && IRQNumber <64)
 800068e:	79fb      	ldrb	r3, [r7, #7]
 8000690:	2b1f      	cmp	r3, #31
 8000692:	d90f      	bls.n	80006b4 <GPIO_IRQInterruptConfig+0x64>
 8000694:	79fb      	ldrb	r3, [r7, #7]
 8000696:	2b3f      	cmp	r3, #63	; 0x3f
 8000698:	d80c      	bhi.n	80006b4 <GPIO_IRQInterruptConfig+0x64>
			*NVIC_ISER1 |= (1<< (IRQNumber%32));
 800069a:	4b2e      	ldr	r3, [pc, #184]	; (8000754 <GPIO_IRQInterruptConfig+0x104>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	79fa      	ldrb	r2, [r7, #7]
 80006a0:	f002 021f 	and.w	r2, r2, #31
 80006a4:	2101      	movs	r1, #1
 80006a6:	fa01 f202 	lsl.w	r2, r1, r2
 80006aa:	4611      	mov	r1, r2
 80006ac:	4a29      	ldr	r2, [pc, #164]	; (8000754 <GPIO_IRQInterruptConfig+0x104>)
 80006ae:	430b      	orrs	r3, r1
 80006b0:	6013      	str	r3, [r2, #0]
 80006b2:	e046      	b.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
		}else if(IRQNumber >=64 && IRQNumber <96)
 80006b4:	79fb      	ldrb	r3, [r7, #7]
 80006b6:	2b3f      	cmp	r3, #63	; 0x3f
 80006b8:	d943      	bls.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
 80006ba:	79fb      	ldrb	r3, [r7, #7]
 80006bc:	2b5f      	cmp	r3, #95	; 0x5f
 80006be:	d840      	bhi.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
			*NVIC_ISER2 |= (1<< IRQNumber%64);
 80006c0:	4b25      	ldr	r3, [pc, #148]	; (8000758 <GPIO_IRQInterruptConfig+0x108>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	79fa      	ldrb	r2, [r7, #7]
 80006c6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80006ca:	2101      	movs	r1, #1
 80006cc:	fa01 f202 	lsl.w	r2, r1, r2
 80006d0:	4611      	mov	r1, r2
 80006d2:	4a21      	ldr	r2, [pc, #132]	; (8000758 <GPIO_IRQInterruptConfig+0x108>)
 80006d4:	430b      	orrs	r3, r1
 80006d6:	6013      	str	r3, [r2, #0]
}
 80006d8:	e033      	b.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
		if(IRQNumber<=31)
 80006da:	79fb      	ldrb	r3, [r7, #7]
 80006dc:	2b1f      	cmp	r3, #31
 80006de:	d80a      	bhi.n	80006f6 <GPIO_IRQInterruptConfig+0xa6>
			*NVIC_ICER0 |= (1<< IRQNumber);
 80006e0:	4b1e      	ldr	r3, [pc, #120]	; (800075c <GPIO_IRQInterruptConfig+0x10c>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	79fa      	ldrb	r2, [r7, #7]
 80006e6:	2101      	movs	r1, #1
 80006e8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ec:	4611      	mov	r1, r2
 80006ee:	4a1b      	ldr	r2, [pc, #108]	; (800075c <GPIO_IRQInterruptConfig+0x10c>)
 80006f0:	430b      	orrs	r3, r1
 80006f2:	6013      	str	r3, [r2, #0]
}
 80006f4:	e025      	b.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
		}else if(IRQNumber >31 && IRQNumber <64)
 80006f6:	79fb      	ldrb	r3, [r7, #7]
 80006f8:	2b1f      	cmp	r3, #31
 80006fa:	d90f      	bls.n	800071c <GPIO_IRQInterruptConfig+0xcc>
 80006fc:	79fb      	ldrb	r3, [r7, #7]
 80006fe:	2b3f      	cmp	r3, #63	; 0x3f
 8000700:	d80c      	bhi.n	800071c <GPIO_IRQInterruptConfig+0xcc>
			*NVIC_ISER1 |= (1<< (IRQNumber%32));
 8000702:	4b14      	ldr	r3, [pc, #80]	; (8000754 <GPIO_IRQInterruptConfig+0x104>)
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	79fa      	ldrb	r2, [r7, #7]
 8000708:	f002 021f 	and.w	r2, r2, #31
 800070c:	2101      	movs	r1, #1
 800070e:	fa01 f202 	lsl.w	r2, r1, r2
 8000712:	4611      	mov	r1, r2
 8000714:	4a0f      	ldr	r2, [pc, #60]	; (8000754 <GPIO_IRQInterruptConfig+0x104>)
 8000716:	430b      	orrs	r3, r1
 8000718:	6013      	str	r3, [r2, #0]
 800071a:	e012      	b.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
		}else if(IRQNumber >=64 && IRQNumber <96)
 800071c:	79fb      	ldrb	r3, [r7, #7]
 800071e:	2b3f      	cmp	r3, #63	; 0x3f
 8000720:	d90f      	bls.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
 8000722:	79fb      	ldrb	r3, [r7, #7]
 8000724:	2b5f      	cmp	r3, #95	; 0x5f
 8000726:	d80c      	bhi.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
			*NVIC_ISER2 |= (1<< IRQNumber%64);
 8000728:	4b0b      	ldr	r3, [pc, #44]	; (8000758 <GPIO_IRQInterruptConfig+0x108>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	79fa      	ldrb	r2, [r7, #7]
 800072e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000732:	2101      	movs	r1, #1
 8000734:	fa01 f202 	lsl.w	r2, r1, r2
 8000738:	4611      	mov	r1, r2
 800073a:	4a07      	ldr	r2, [pc, #28]	; (8000758 <GPIO_IRQInterruptConfig+0x108>)
 800073c:	430b      	orrs	r3, r1
 800073e:	6013      	str	r3, [r2, #0]
}
 8000740:	e7ff      	b.n	8000742 <GPIO_IRQInterruptConfig+0xf2>
 8000742:	bf00      	nop
 8000744:	370c      	adds	r7, #12
 8000746:	46bd      	mov	sp, r7
 8000748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800074c:	4770      	bx	lr
 800074e:	bf00      	nop
 8000750:	e000e100 	.word	0xe000e100
 8000754:	e000e104 	.word	0xe000e104
 8000758:	e000e108 	.word	0xe000e108
 800075c:	e000e180 	.word	0xe000e180

08000760 <GPIO_IRQHandling>:
	*(NVIC_PR_BASE_ADDR + (iprx*4)) |= (IRQPriority << shift_amount);
}


void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000760:	b480      	push	{r7}
 8000762:	b083      	sub	sp, #12
 8000764:	af00      	add	r7, sp, #0
 8000766:	4603      	mov	r3, r0
 8000768:	71fb      	strb	r3, [r7, #7]
	if(EXTI->PR & (1<< PinNumber))
 800076a:	4b0c      	ldr	r3, [pc, #48]	; (800079c <GPIO_IRQHandling+0x3c>)
 800076c:	695b      	ldr	r3, [r3, #20]
 800076e:	79fa      	ldrb	r2, [r7, #7]
 8000770:	2101      	movs	r1, #1
 8000772:	fa01 f202 	lsl.w	r2, r1, r2
 8000776:	4013      	ands	r3, r2
 8000778:	2b00      	cmp	r3, #0
 800077a:	d009      	beq.n	8000790 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1<<PinNumber);
 800077c:	4b07      	ldr	r3, [pc, #28]	; (800079c <GPIO_IRQHandling+0x3c>)
 800077e:	695b      	ldr	r3, [r3, #20]
 8000780:	79fa      	ldrb	r2, [r7, #7]
 8000782:	2101      	movs	r1, #1
 8000784:	fa01 f202 	lsl.w	r2, r1, r2
 8000788:	4611      	mov	r1, r2
 800078a:	4a04      	ldr	r2, [pc, #16]	; (800079c <GPIO_IRQHandling+0x3c>)
 800078c:	430b      	orrs	r3, r1
 800078e:	6153      	str	r3, [r2, #20]
	}
}
 8000790:	bf00      	nop
 8000792:	370c      	adds	r7, #12
 8000794:	46bd      	mov	sp, r7
 8000796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800079a:	4770      	bx	lr
 800079c:	40013c00 	.word	0x40013c00

080007a0 <main>:

#define HIGH 1
#define LOW 1
#define BUTTON_PRESSED LOW

int main(void){
 80007a0:	b580      	push	{r7, lr}
 80007a2:	b086      	sub	sp, #24
 80007a4:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLedGreen, GpioBtn;

	GpioBtn.pGPIOx = GPIOA;
 80007a6:	4b16      	ldr	r3, [pc, #88]	; (8000800 <main+0x60>)
 80007a8:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_0;
 80007aa:	2300      	movs	r3, #0
 80007ac:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80007ae:	2304      	movs	r3, #4
 80007b0:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80007b2:	2302      	movs	r3, #2
 80007b4:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80007b6:	2301      	movs	r3, #1
 80007b8:	71fb      	strb	r3, [r7, #7]

	GpioLedGreen.pGPIOx = GPIOD;
 80007ba:	4b12      	ldr	r3, [pc, #72]	; (8000804 <main+0x64>)
 80007bc:	60fb      	str	r3, [r7, #12]
	GpioLedGreen.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_12;
 80007be:	230c      	movs	r3, #12
 80007c0:	743b      	strb	r3, [r7, #16]
	GpioLedGreen.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80007c2:	2301      	movs	r3, #1
 80007c4:	747b      	strb	r3, [r7, #17]
	GpioLedGreen.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80007c6:	2300      	movs	r3, #0
 80007c8:	74bb      	strb	r3, [r7, #18]
	GpioLedGreen.GPIO_PinConfig.GPIO_PinOptType = GPIO_OP_MODE_PP;
 80007ca:	2300      	movs	r3, #0
 80007cc:	753b      	strb	r3, [r7, #20]
	GpioLedGreen.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80007ce:	2300      	movs	r3, #0
 80007d0:	74fb      	strb	r3, [r7, #19]


	GPIO_PCLK_Control(GPIOA, ENABLE);
 80007d2:	2101      	movs	r1, #1
 80007d4:	480a      	ldr	r0, [pc, #40]	; (8000800 <main+0x60>)
 80007d6:	f7ff fd07 	bl	80001e8 <GPIO_PCLK_Control>
	GPIO_PCLK_Control(GPIOD, ENABLE);
 80007da:	2101      	movs	r1, #1
 80007dc:	4809      	ldr	r0, [pc, #36]	; (8000804 <main+0x64>)
 80007de:	f7ff fd03 	bl	80001e8 <GPIO_PCLK_Control>
	GPIO_Init(&GpioBtn);
 80007e2:	463b      	mov	r3, r7
 80007e4:	4618      	mov	r0, r3
 80007e6:	f7ff fde7 	bl	80003b8 <GPIO_Init>
	GPIO_Init(&GpioLedGreen);
 80007ea:	f107 030c 	add.w	r3, r7, #12
 80007ee:	4618      	mov	r0, r3
 80007f0:	f7ff fde2 	bl	80003b8 <GPIO_Init>

//IRQ enable
	//GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRIO15);
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 80007f4:	2101      	movs	r1, #1
 80007f6:	2006      	movs	r0, #6
 80007f8:	f7ff ff2a 	bl	8000650 <GPIO_IRQInterruptConfig>




	while(1);
 80007fc:	e7fe      	b.n	80007fc <main+0x5c>
 80007fe:	bf00      	nop
 8000800:	40020000 	.word	0x40020000
 8000804:	40020c00 	.word	0x40020c00

08000808 <EXTI0_IRQHandler>:
}

void EXTI0_IRQHandler(void)
{
 8000808:	b580      	push	{r7, lr}
 800080a:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPOIO_PIN_NO_0);
 800080c:	2000      	movs	r0, #0
 800080e:	f7ff ffa7 	bl	8000760 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPOIO_PIN_NO_12);
 8000812:	210c      	movs	r1, #12
 8000814:	4802      	ldr	r0, [pc, #8]	; (8000820 <EXTI0_IRQHandler+0x18>)
 8000816:	f7ff ff05 	bl	8000624 <GPIO_ToggleOutputPin>
}
 800081a:	bf00      	nop
 800081c:	bd80      	pop	{r7, pc}
 800081e:	bf00      	nop
 8000820:	40020c00 	.word	0x40020c00

08000824 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000824:	480d      	ldr	r0, [pc, #52]	; (800085c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000826:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000828:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800082c:	480c      	ldr	r0, [pc, #48]	; (8000860 <LoopForever+0x6>)
  ldr r1, =_edata
 800082e:	490d      	ldr	r1, [pc, #52]	; (8000864 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000830:	4a0d      	ldr	r2, [pc, #52]	; (8000868 <LoopForever+0xe>)
  movs r3, #0
 8000832:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000834:	e002      	b.n	800083c <LoopCopyDataInit>

08000836 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000836:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000838:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800083a:	3304      	adds	r3, #4

0800083c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800083c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800083e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000840:	d3f9      	bcc.n	8000836 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000842:	4a0a      	ldr	r2, [pc, #40]	; (800086c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000844:	4c0a      	ldr	r4, [pc, #40]	; (8000870 <LoopForever+0x16>)
  movs r3, #0
 8000846:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000848:	e001      	b.n	800084e <LoopFillZerobss>

0800084a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800084a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800084c:	3204      	adds	r2, #4

0800084e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800084e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000850:	d3fb      	bcc.n	800084a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000852:	f000 f811 	bl	8000878 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000856:	f7ff ffa3 	bl	80007a0 <main>

0800085a <LoopForever>:

LoopForever:
    b LoopForever
 800085a:	e7fe      	b.n	800085a <LoopForever>
  ldr   r0, =_estack
 800085c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000860:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000864:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000868:	080008e0 	.word	0x080008e0
  ldr r2, =_sbss
 800086c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000870:	2000001c 	.word	0x2000001c

08000874 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000874:	e7fe      	b.n	8000874 <ADC_IRQHandler>
	...

08000878 <__libc_init_array>:
 8000878:	b570      	push	{r4, r5, r6, lr}
 800087a:	4d0d      	ldr	r5, [pc, #52]	; (80008b0 <__libc_init_array+0x38>)
 800087c:	4c0d      	ldr	r4, [pc, #52]	; (80008b4 <__libc_init_array+0x3c>)
 800087e:	1b64      	subs	r4, r4, r5
 8000880:	10a4      	asrs	r4, r4, #2
 8000882:	2600      	movs	r6, #0
 8000884:	42a6      	cmp	r6, r4
 8000886:	d109      	bne.n	800089c <__libc_init_array+0x24>
 8000888:	4d0b      	ldr	r5, [pc, #44]	; (80008b8 <__libc_init_array+0x40>)
 800088a:	4c0c      	ldr	r4, [pc, #48]	; (80008bc <__libc_init_array+0x44>)
 800088c:	f000 f818 	bl	80008c0 <_init>
 8000890:	1b64      	subs	r4, r4, r5
 8000892:	10a4      	asrs	r4, r4, #2
 8000894:	2600      	movs	r6, #0
 8000896:	42a6      	cmp	r6, r4
 8000898:	d105      	bne.n	80008a6 <__libc_init_array+0x2e>
 800089a:	bd70      	pop	{r4, r5, r6, pc}
 800089c:	f855 3b04 	ldr.w	r3, [r5], #4
 80008a0:	4798      	blx	r3
 80008a2:	3601      	adds	r6, #1
 80008a4:	e7ee      	b.n	8000884 <__libc_init_array+0xc>
 80008a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80008aa:	4798      	blx	r3
 80008ac:	3601      	adds	r6, #1
 80008ae:	e7f2      	b.n	8000896 <__libc_init_array+0x1e>
 80008b0:	080008d8 	.word	0x080008d8
 80008b4:	080008d8 	.word	0x080008d8
 80008b8:	080008d8 	.word	0x080008d8
 80008bc:	080008dc 	.word	0x080008dc

080008c0 <_init>:
 80008c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008c2:	bf00      	nop
 80008c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008c6:	bc08      	pop	{r3}
 80008c8:	469e      	mov	lr, r3
 80008ca:	4770      	bx	lr

080008cc <_fini>:
 80008cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ce:	bf00      	nop
 80008d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008d2:	bc08      	pop	{r3}
 80008d4:	469e      	mov	lr, r3
 80008d6:	4770      	bx	lr
