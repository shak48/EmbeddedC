
007LED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000210  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003b8  080003c0  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003b8  080003b8  000103c0  2**0
                  CONTENTS
  4 .ARM          00000000  080003b8  080003b8  000103c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003b8  080003c0  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003b8  080003b8  000103b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003bc  080003bc  000103bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103c0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000103c0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009da  00000000  00000000  000103f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001ed  00000000  00000000  00010dca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000050  00000000  00000000  00010fb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000038  00000000  00000000  00011008  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000019c8  00000000  00000000  00011040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000639  00000000  00000000  00012a08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000075fd  00000000  00000000  00013041  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001a63e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000084  00000000  00000000  0001a694  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080003a0 	.word	0x080003a0

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080003a0 	.word	0x080003a0

080001e8 <delay>:


void delay(unsigned long int);

void delay(unsigned long int number_of_cycles)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b085      	sub	sp, #20
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
	for(int i=0;i<=number_of_cycles;i++);
 80001f0:	2300      	movs	r3, #0
 80001f2:	60fb      	str	r3, [r7, #12]
 80001f4:	e002      	b.n	80001fc <delay+0x14>
 80001f6:	68fb      	ldr	r3, [r7, #12]
 80001f8:	3301      	adds	r3, #1
 80001fa:	60fb      	str	r3, [r7, #12]
 80001fc:	68fb      	ldr	r3, [r7, #12]
 80001fe:	687a      	ldr	r2, [r7, #4]
 8000200:	429a      	cmp	r2, r3
 8000202:	d2f8      	bcs.n	80001f6 <delay+0xe>
}
 8000204:	bf00      	nop
 8000206:	bf00      	nop
 8000208:	3714      	adds	r7, #20
 800020a:	46bd      	mov	sp, r7
 800020c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000210:	4770      	bx	lr
	...

08000214 <main>:
// Driver code to test above function



int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0
	uint32_t *pRCC = (uint32_t*)RCCADDR, *pGPIODMODE = (uint32_t*)GPIODADDR, *pGPIODOUT = (uint32_t*)GPIOOUT;
 800021a:	4b36      	ldr	r3, [pc, #216]	; (80002f4 <main+0xe0>)
 800021c:	60fb      	str	r3, [r7, #12]
 800021e:	4b36      	ldr	r3, [pc, #216]	; (80002f8 <main+0xe4>)
 8000220:	60bb      	str	r3, [r7, #8]
 8000222:	4b36      	ldr	r3, [pc, #216]	; (80002fc <main+0xe8>)
 8000224:	607b      	str	r3, [r7, #4]

	*pRCC 		|= (1 << 3); //Enable clock
 8000226:	68fb      	ldr	r3, [r7, #12]
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f043 0208 	orr.w	r2, r3, #8
 800022e:	68fb      	ldr	r3, [r7, #12]
 8000230:	601a      	str	r2, [r3, #0]

	*pGPIODMODE	&= ~(3 << 24); // Clear mode
 8000232:	68bb      	ldr	r3, [r7, #8]
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 800023a:	68bb      	ldr	r3, [r7, #8]
 800023c:	601a      	str	r2, [r3, #0]
	*pGPIODMODE	|= (1 << 24); // set mode
 800023e:	68bb      	ldr	r3, [r7, #8]
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 8000246:	68bb      	ldr	r3, [r7, #8]
 8000248:	601a      	str	r2, [r3, #0]
	*pGPIODMODE	&= ~(3 << 26); // Clear mode
 800024a:	68bb      	ldr	r3, [r7, #8]
 800024c:	681b      	ldr	r3, [r3, #0]
 800024e:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8000252:	68bb      	ldr	r3, [r7, #8]
 8000254:	601a      	str	r2, [r3, #0]
	*pGPIODMODE	|= (1 << 26); // set mode
 8000256:	68bb      	ldr	r3, [r7, #8]
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	f043 6280 	orr.w	r2, r3, #67108864	; 0x4000000
 800025e:	68bb      	ldr	r3, [r7, #8]
 8000260:	601a      	str	r2, [r3, #0]

	*pGPIODMODE	&= ~(0b01010101 << 24);
 8000262:	68bb      	ldr	r3, [r7, #8]
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	f023 42aa 	bic.w	r2, r3, #1426063360	; 0x55000000
 800026a:	68bb      	ldr	r3, [r7, #8]
 800026c:	601a      	str	r2, [r3, #0]
	*pGPIODMODE	|= (0b01010101 << 24);
 800026e:	68bb      	ldr	r3, [r7, #8]
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f043 42aa 	orr.w	r2, r3, #1426063360	; 0x55000000
 8000276:	68bb      	ldr	r3, [r7, #8]
 8000278:	601a      	str	r2, [r3, #0]


    /* Loop forever */
	for(;;){
		*pGPIODOUT	&= ~(0b1001<<12);
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f423 4210 	bic.w	r2, r3, #36864	; 0x9000
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	601a      	str	r2, [r3, #0]
		*pGPIODOUT	|= (0b1100<<12);
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f443 4240 	orr.w	r2, r3, #49152	; 0xc000
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	601a      	str	r2, [r3, #0]
		delay(400000);
 8000292:	481b      	ldr	r0, [pc, #108]	; (8000300 <main+0xec>)
 8000294:	f7ff ffa8 	bl	80001e8 <delay>
		*pGPIODOUT	&= ~(0b1100<<12);
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	601a      	str	r2, [r3, #0]
	    *pGPIODOUT	|= (0b0110 <<12);
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	f443 42c0 	orr.w	r2, r3, #24576	; 0x6000
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	601a      	str	r2, [r3, #0]
		delay(400000);
 80002b0:	4813      	ldr	r0, [pc, #76]	; (8000300 <main+0xec>)
 80002b2:	f7ff ff99 	bl	80001e8 <delay>
		*pGPIODOUT	&= ~(0b0110<<12);
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	601a      	str	r2, [r3, #0]
	    *pGPIODOUT	|= (0b0011 <<12);
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	f443 5240 	orr.w	r2, r3, #12288	; 0x3000
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	601a      	str	r2, [r3, #0]
		delay(400000);
 80002ce:	480c      	ldr	r0, [pc, #48]	; (8000300 <main+0xec>)
 80002d0:	f7ff ff8a 	bl	80001e8 <delay>
		*pGPIODOUT	&= ~(0b0011<<12);
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	601a      	str	r2, [r3, #0]
	    *pGPIODOUT	|= (0b1001 <<12);
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	f443 4210 	orr.w	r2, r3, #36864	; 0x9000
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	601a      	str	r2, [r3, #0]
		delay(400000);
 80002ec:	4804      	ldr	r0, [pc, #16]	; (8000300 <main+0xec>)
 80002ee:	f7ff ff7b 	bl	80001e8 <delay>
		*pGPIODOUT	&= ~(0b1001<<12);
 80002f2:	e7c2      	b.n	800027a <main+0x66>
 80002f4:	40023830 	.word	0x40023830
 80002f8:	40020c00 	.word	0x40020c00
 80002fc:	40020c14 	.word	0x40020c14
 8000300:	00061a80 	.word	0x00061a80

08000304 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000304:	480d      	ldr	r0, [pc, #52]	; (800033c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000306:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000308:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800030c:	480c      	ldr	r0, [pc, #48]	; (8000340 <LoopForever+0x6>)
  ldr r1, =_edata
 800030e:	490d      	ldr	r1, [pc, #52]	; (8000344 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000310:	4a0d      	ldr	r2, [pc, #52]	; (8000348 <LoopForever+0xe>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000314:	e002      	b.n	800031c <LoopCopyDataInit>

08000316 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000316:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000318:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031a:	3304      	adds	r3, #4

0800031c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800031c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800031e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000320:	d3f9      	bcc.n	8000316 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000322:	4a0a      	ldr	r2, [pc, #40]	; (800034c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000324:	4c0a      	ldr	r4, [pc, #40]	; (8000350 <LoopForever+0x16>)
  movs r3, #0
 8000326:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000328:	e001      	b.n	800032e <LoopFillZerobss>

0800032a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800032c:	3204      	adds	r2, #4

0800032e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800032e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000330:	d3fb      	bcc.n	800032a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000332:	f000 f811 	bl	8000358 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000336:	f7ff ff6d 	bl	8000214 <main>

0800033a <LoopForever>:

LoopForever:
    b LoopForever
 800033a:	e7fe      	b.n	800033a <LoopForever>
  ldr   r0, =_estack
 800033c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000340:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000344:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000348:	080003c0 	.word	0x080003c0
  ldr r2, =_sbss
 800034c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000350:	2000001c 	.word	0x2000001c

08000354 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000354:	e7fe      	b.n	8000354 <ADC_IRQHandler>
	...

08000358 <__libc_init_array>:
 8000358:	b570      	push	{r4, r5, r6, lr}
 800035a:	4d0d      	ldr	r5, [pc, #52]	; (8000390 <__libc_init_array+0x38>)
 800035c:	4c0d      	ldr	r4, [pc, #52]	; (8000394 <__libc_init_array+0x3c>)
 800035e:	1b64      	subs	r4, r4, r5
 8000360:	10a4      	asrs	r4, r4, #2
 8000362:	2600      	movs	r6, #0
 8000364:	42a6      	cmp	r6, r4
 8000366:	d109      	bne.n	800037c <__libc_init_array+0x24>
 8000368:	4d0b      	ldr	r5, [pc, #44]	; (8000398 <__libc_init_array+0x40>)
 800036a:	4c0c      	ldr	r4, [pc, #48]	; (800039c <__libc_init_array+0x44>)
 800036c:	f000 f818 	bl	80003a0 <_init>
 8000370:	1b64      	subs	r4, r4, r5
 8000372:	10a4      	asrs	r4, r4, #2
 8000374:	2600      	movs	r6, #0
 8000376:	42a6      	cmp	r6, r4
 8000378:	d105      	bne.n	8000386 <__libc_init_array+0x2e>
 800037a:	bd70      	pop	{r4, r5, r6, pc}
 800037c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000380:	4798      	blx	r3
 8000382:	3601      	adds	r6, #1
 8000384:	e7ee      	b.n	8000364 <__libc_init_array+0xc>
 8000386:	f855 3b04 	ldr.w	r3, [r5], #4
 800038a:	4798      	blx	r3
 800038c:	3601      	adds	r6, #1
 800038e:	e7f2      	b.n	8000376 <__libc_init_array+0x1e>
 8000390:	080003b8 	.word	0x080003b8
 8000394:	080003b8 	.word	0x080003b8
 8000398:	080003b8 	.word	0x080003b8
 800039c:	080003bc 	.word	0x080003bc

080003a0 <_init>:
 80003a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003a2:	bf00      	nop
 80003a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a6:	bc08      	pop	{r3}
 80003a8:	469e      	mov	lr, r3
 80003aa:	4770      	bx	lr

080003ac <_fini>:
 80003ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ae:	bf00      	nop
 80003b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b2:	bc08      	pop	{r3}
 80003b4:	469e      	mov	lr, r3
 80003b6:	4770      	bx	lr
