
009LED_Toggle_Bitfield.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000024c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003f4  080003fc  000103fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003f4  080003f4  000103fc  2**0
                  CONTENTS
  4 .ARM          00000000  080003f4  080003f4  000103fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003f4  080003fc  000103fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003f4  080003f4  000103f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003f8  080003f8  000103f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103fc  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000103fc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000fca  00000000  00000000  0001042c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000243  00000000  00000000  000113f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000060  00000000  00000000  00011640  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000048  00000000  00000000  000116a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001cd2  00000000  00000000  000116e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000077c  00000000  00000000  000133ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008112  00000000  00000000  00013b36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001bc48  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000c4  00000000  00000000  0001bc9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080003dc 	.word	0x080003dc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080003dc 	.word	0x080003dc

080001e8 <main>:

uint8_t pinStatus = 0;


int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0

	ioInitialize();
 80001ec:	f000 f820 	bl	8000230 <ioInitialize>


	while(1){
		if(pinStatus==1){
 80001f0:	4b0b      	ldr	r3, [pc, #44]	; (8000220 <main+0x38>)
 80001f2:	781b      	ldrb	r3, [r3, #0]
 80001f4:	2b01      	cmp	r3, #1
 80001f6:	d102      	bne.n	80001fe <main+0x16>
			flash4Leds(900000);
 80001f8:	480a      	ldr	r0, [pc, #40]	; (8000224 <main+0x3c>)
 80001fa:	f000 f863 	bl	80002c4 <flash4Leds>
		}
		if(pinStatus==0){
 80001fe:	4b08      	ldr	r3, [pc, #32]	; (8000220 <main+0x38>)
 8000200:	781b      	ldrb	r3, [r3, #0]
 8000202:	2b00      	cmp	r3, #0
 8000204:	d102      	bne.n	800020c <main+0x24>
			flash4Leds(100000);
 8000206:	4808      	ldr	r0, [pc, #32]	; (8000228 <main+0x40>)
 8000208:	f000 f85c 	bl	80002c4 <flash4Leds>
		}
	pinStatus = (uint8_t)(pGpioAIdr->pin0);
 800020c:	4b07      	ldr	r3, [pc, #28]	; (800022c <main+0x44>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8000214:	b2db      	uxtb	r3, r3
 8000216:	461a      	mov	r2, r3
 8000218:	4b01      	ldr	r3, [pc, #4]	; (8000220 <main+0x38>)
 800021a:	701a      	strb	r2, [r3, #0]
		if(pinStatus==1){
 800021c:	e7e8      	b.n	80001f0 <main+0x8>
 800021e:	bf00      	nop
 8000220:	2000001c 	.word	0x2000001c
 8000224:	000dbba0 	.word	0x000dbba0
 8000228:	000186a0 	.word	0x000186a0
 800022c:	40020010 	.word	0x40020010

08000230 <ioInitialize>:
	}
}

void ioInitialize(void){
 8000230:	b480      	push	{r7}
 8000232:	af00      	add	r7, sp, #0
	pClkCtrlReg->gpioa_en	= 1;
 8000234:	4a15      	ldr	r2, [pc, #84]	; (800028c <ioInitialize+0x5c>)
 8000236:	6813      	ldr	r3, [r2, #0]
 8000238:	f043 0301 	orr.w	r3, r3, #1
 800023c:	6013      	str	r3, [r2, #0]
	pClkCtrlReg->gpiod_en	= 1;
 800023e:	4a13      	ldr	r2, [pc, #76]	; (800028c <ioInitialize+0x5c>)
 8000240:	6813      	ldr	r3, [r2, #0]
 8000242:	f043 0308 	orr.w	r3, r3, #8
 8000246:	6013      	str	r3, [r2, #0]
	pGpioAMode->pin0		= 0;
 8000248:	4a11      	ldr	r2, [pc, #68]	; (8000290 <ioInitialize+0x60>)
 800024a:	6813      	ldr	r3, [r2, #0]
 800024c:	f36f 0301 	bfc	r3, #0, #2
 8000250:	6013      	str	r3, [r2, #0]
	pGpioDMode->pin12		= 1;
 8000252:	4a10      	ldr	r2, [pc, #64]	; (8000294 <ioInitialize+0x64>)
 8000254:	6813      	ldr	r3, [r2, #0]
 8000256:	2101      	movs	r1, #1
 8000258:	f361 6319 	bfi	r3, r1, #24, #2
 800025c:	6013      	str	r3, [r2, #0]
	pGpioDMode->pin13		= 1;
 800025e:	4a0d      	ldr	r2, [pc, #52]	; (8000294 <ioInitialize+0x64>)
 8000260:	6813      	ldr	r3, [r2, #0]
 8000262:	2101      	movs	r1, #1
 8000264:	f361 639b 	bfi	r3, r1, #26, #2
 8000268:	6013      	str	r3, [r2, #0]
	pGpioDMode->pin14		= 1;
 800026a:	4a0a      	ldr	r2, [pc, #40]	; (8000294 <ioInitialize+0x64>)
 800026c:	6813      	ldr	r3, [r2, #0]
 800026e:	2101      	movs	r1, #1
 8000270:	f361 731d 	bfi	r3, r1, #28, #2
 8000274:	6013      	str	r3, [r2, #0]
	pGpioDMode->pin15		= 1;
 8000276:	4a07      	ldr	r2, [pc, #28]	; (8000294 <ioInitialize+0x64>)
 8000278:	6813      	ldr	r3, [r2, #0]
 800027a:	2101      	movs	r1, #1
 800027c:	f361 739f 	bfi	r3, r1, #30, #2
 8000280:	6013      	str	r3, [r2, #0]
}
 8000282:	bf00      	nop
 8000284:	46bd      	mov	sp, r7
 8000286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800028a:	4770      	bx	lr
 800028c:	40023830 	.word	0x40023830
 8000290:	40020000 	.word	0x40020000
 8000294:	40020c00 	.word	0x40020c00

08000298 <delay>:

void delay(unsigned long int number_of_cycles)
{
 8000298:	b480      	push	{r7}
 800029a:	b085      	sub	sp, #20
 800029c:	af00      	add	r7, sp, #0
 800029e:	6078      	str	r0, [r7, #4]
	for(int i=0;i<=number_of_cycles;i++);
 80002a0:	2300      	movs	r3, #0
 80002a2:	60fb      	str	r3, [r7, #12]
 80002a4:	e002      	b.n	80002ac <delay+0x14>
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	3301      	adds	r3, #1
 80002aa:	60fb      	str	r3, [r7, #12]
 80002ac:	68fb      	ldr	r3, [r7, #12]
 80002ae:	687a      	ldr	r2, [r7, #4]
 80002b0:	429a      	cmp	r2, r3
 80002b2:	d2f8      	bcs.n	80002a6 <delay+0xe>
}
 80002b4:	bf00      	nop
 80002b6:	bf00      	nop
 80002b8:	3714      	adds	r7, #20
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr
	...

080002c4 <flash4Leds>:

void flash4Leds(unsigned long int cycles){
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b082      	sub	sp, #8
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	6078      	str	r0, [r7, #4]
	pGpioDOdr->pin15	= 0;
 80002cc:	4a1b      	ldr	r2, [pc, #108]	; (800033c <flash4Leds+0x78>)
 80002ce:	6813      	ldr	r3, [r2, #0]
 80002d0:	f36f 33cf 	bfc	r3, #15, #1
 80002d4:	6013      	str	r3, [r2, #0]
	pGpioDOdr->pin12	= 1;
 80002d6:	4a19      	ldr	r2, [pc, #100]	; (800033c <flash4Leds+0x78>)
 80002d8:	6813      	ldr	r3, [r2, #0]
 80002da:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002de:	6013      	str	r3, [r2, #0]
	delay(cycles);
 80002e0:	6878      	ldr	r0, [r7, #4]
 80002e2:	f7ff ffd9 	bl	8000298 <delay>
	pGpioDOdr->pin12	= 0;
 80002e6:	4a15      	ldr	r2, [pc, #84]	; (800033c <flash4Leds+0x78>)
 80002e8:	6813      	ldr	r3, [r2, #0]
 80002ea:	f36f 330c 	bfc	r3, #12, #1
 80002ee:	6013      	str	r3, [r2, #0]
	pGpioDOdr->pin13	= 1;
 80002f0:	4a12      	ldr	r2, [pc, #72]	; (800033c <flash4Leds+0x78>)
 80002f2:	6813      	ldr	r3, [r2, #0]
 80002f4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002f8:	6013      	str	r3, [r2, #0]
	delay(cycles);
 80002fa:	6878      	ldr	r0, [r7, #4]
 80002fc:	f7ff ffcc 	bl	8000298 <delay>
	pGpioDOdr->pin13	= 0;
 8000300:	4a0e      	ldr	r2, [pc, #56]	; (800033c <flash4Leds+0x78>)
 8000302:	6813      	ldr	r3, [r2, #0]
 8000304:	f36f 334d 	bfc	r3, #13, #1
 8000308:	6013      	str	r3, [r2, #0]
	pGpioDOdr->pin14	= 1;
 800030a:	4a0c      	ldr	r2, [pc, #48]	; (800033c <flash4Leds+0x78>)
 800030c:	6813      	ldr	r3, [r2, #0]
 800030e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000312:	6013      	str	r3, [r2, #0]
	delay(cycles);
 8000314:	6878      	ldr	r0, [r7, #4]
 8000316:	f7ff ffbf 	bl	8000298 <delay>
	pGpioDOdr->pin14	= 0;
 800031a:	4a08      	ldr	r2, [pc, #32]	; (800033c <flash4Leds+0x78>)
 800031c:	6813      	ldr	r3, [r2, #0]
 800031e:	f36f 338e 	bfc	r3, #14, #1
 8000322:	6013      	str	r3, [r2, #0]
	pGpioDOdr->pin15	= 1;
 8000324:	4a05      	ldr	r2, [pc, #20]	; (800033c <flash4Leds+0x78>)
 8000326:	6813      	ldr	r3, [r2, #0]
 8000328:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800032c:	6013      	str	r3, [r2, #0]
	delay(cycles);
 800032e:	6878      	ldr	r0, [r7, #4]
 8000330:	f7ff ffb2 	bl	8000298 <delay>
}
 8000334:	bf00      	nop
 8000336:	3708      	adds	r7, #8
 8000338:	46bd      	mov	sp, r7
 800033a:	bd80      	pop	{r7, pc}
 800033c:	40020c14 	.word	0x40020c14

08000340 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000340:	480d      	ldr	r0, [pc, #52]	; (8000378 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000342:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000344:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000348:	480c      	ldr	r0, [pc, #48]	; (800037c <LoopForever+0x6>)
  ldr r1, =_edata
 800034a:	490d      	ldr	r1, [pc, #52]	; (8000380 <LoopForever+0xa>)
  ldr r2, =_sidata
 800034c:	4a0d      	ldr	r2, [pc, #52]	; (8000384 <LoopForever+0xe>)
  movs r3, #0
 800034e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000350:	e002      	b.n	8000358 <LoopCopyDataInit>

08000352 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000352:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000354:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000356:	3304      	adds	r3, #4

08000358 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000358:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800035a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800035c:	d3f9      	bcc.n	8000352 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800035e:	4a0a      	ldr	r2, [pc, #40]	; (8000388 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000360:	4c0a      	ldr	r4, [pc, #40]	; (800038c <LoopForever+0x16>)
  movs r3, #0
 8000362:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000364:	e001      	b.n	800036a <LoopFillZerobss>

08000366 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000366:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000368:	3204      	adds	r2, #4

0800036a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800036a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800036c:	d3fb      	bcc.n	8000366 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800036e:	f000 f811 	bl	8000394 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000372:	f7ff ff39 	bl	80001e8 <main>

08000376 <LoopForever>:

LoopForever:
    b LoopForever
 8000376:	e7fe      	b.n	8000376 <LoopForever>
  ldr   r0, =_estack
 8000378:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800037c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000380:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000384:	080003fc 	.word	0x080003fc
  ldr r2, =_sbss
 8000388:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800038c:	20000020 	.word	0x20000020

08000390 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000390:	e7fe      	b.n	8000390 <ADC_IRQHandler>
	...

08000394 <__libc_init_array>:
 8000394:	b570      	push	{r4, r5, r6, lr}
 8000396:	4d0d      	ldr	r5, [pc, #52]	; (80003cc <__libc_init_array+0x38>)
 8000398:	4c0d      	ldr	r4, [pc, #52]	; (80003d0 <__libc_init_array+0x3c>)
 800039a:	1b64      	subs	r4, r4, r5
 800039c:	10a4      	asrs	r4, r4, #2
 800039e:	2600      	movs	r6, #0
 80003a0:	42a6      	cmp	r6, r4
 80003a2:	d109      	bne.n	80003b8 <__libc_init_array+0x24>
 80003a4:	4d0b      	ldr	r5, [pc, #44]	; (80003d4 <__libc_init_array+0x40>)
 80003a6:	4c0c      	ldr	r4, [pc, #48]	; (80003d8 <__libc_init_array+0x44>)
 80003a8:	f000 f818 	bl	80003dc <_init>
 80003ac:	1b64      	subs	r4, r4, r5
 80003ae:	10a4      	asrs	r4, r4, #2
 80003b0:	2600      	movs	r6, #0
 80003b2:	42a6      	cmp	r6, r4
 80003b4:	d105      	bne.n	80003c2 <__libc_init_array+0x2e>
 80003b6:	bd70      	pop	{r4, r5, r6, pc}
 80003b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003bc:	4798      	blx	r3
 80003be:	3601      	adds	r6, #1
 80003c0:	e7ee      	b.n	80003a0 <__libc_init_array+0xc>
 80003c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c6:	4798      	blx	r3
 80003c8:	3601      	adds	r6, #1
 80003ca:	e7f2      	b.n	80003b2 <__libc_init_array+0x1e>
 80003cc:	080003f4 	.word	0x080003f4
 80003d0:	080003f4 	.word	0x080003f4
 80003d4:	080003f4 	.word	0x080003f4
 80003d8:	080003f8 	.word	0x080003f8

080003dc <_init>:
 80003dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003de:	bf00      	nop
 80003e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003e2:	bc08      	pop	{r3}
 80003e4:	469e      	mov	lr, r3
 80003e6:	4770      	bx	lr

080003e8 <_fini>:
 80003e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ea:	bf00      	nop
 80003ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ee:	bc08      	pop	{r3}
 80003f0:	469e      	mov	lr, r3
 80003f2:	4770      	bx	lr
