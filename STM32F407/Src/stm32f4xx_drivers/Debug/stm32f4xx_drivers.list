
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002024  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d8  080021d4  080021d4  000121d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080022ac  080022ac  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  080022ac  080022ac  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  080022ac  080022ac  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080022ac  080022ac  000122ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080022b0  080022b0  000122b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080022b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020070  2**0
                  CONTENTS
 10 .bss          000000e4  20000070  20000070  00020070  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000154  20000154  00020070  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 13 .debug_info   000018b1  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000438  00000000  00000000  00021951  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00021d90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000f8  00000000  00000000  00021ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001023  00000000  00000000  00021fb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00000a97  00000000  00000000  00022fdb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00023a72  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000fc8  00000000  00000000  00023ac8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000070 	.word	0x20000070
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080021bc 	.word	0x080021bc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000074 	.word	0x20000074
 80001ec:	080021bc 	.word	0x080021bc

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <GPIO_PCLK_Control>:

#include "stm32f407xx_gpio_driver.h"


void GPIO_PCLK_Control(GPIO_RegDef_t *pGPIOx, uint8_t En_Or_Di)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	460b      	mov	r3, r1
 80002aa:	70fb      	strb	r3, [r7, #3]
	if(En_Or_Di == ENABLE){
 80002ac:	78fb      	ldrb	r3, [r7, #3]
 80002ae:	2b01      	cmp	r3, #1
 80002b0:	d162      	bne.n	8000378 <GPIO_PCLK_Control+0xd8>
		if(pGPIOx==GPIOA)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a64      	ldr	r2, [pc, #400]	; (8000448 <GPIO_PCLK_Control+0x1a8>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d106      	bne.n	80002c8 <GPIO_PCLK_Control+0x28>
		{
			GPIOA_PCLK_EN();
 80002ba:	4b64      	ldr	r3, [pc, #400]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002be:	4a63      	ldr	r2, [pc, #396]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002c0:	f043 0301 	orr.w	r3, r3, #1
 80002c4:	6313      	str	r3, [r2, #48]	; 0x30
		}else if(pGPIOx==GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80002c6:	e0b9      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOB)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	4a61      	ldr	r2, [pc, #388]	; (8000450 <GPIO_PCLK_Control+0x1b0>)
 80002cc:	4293      	cmp	r3, r2
 80002ce:	d106      	bne.n	80002de <GPIO_PCLK_Control+0x3e>
			GPIOB_PCLK_EN();
 80002d0:	4b5e      	ldr	r3, [pc, #376]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d4:	4a5d      	ldr	r2, [pc, #372]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002d6:	f043 0302 	orr.w	r3, r3, #2
 80002da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002dc:	e0ae      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOC)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a5c      	ldr	r2, [pc, #368]	; (8000454 <GPIO_PCLK_Control+0x1b4>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PCLK_Control+0x54>
			GPIOC_PCLK_EN();
 80002e6:	4b59      	ldr	r3, [pc, #356]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ea:	4a58      	ldr	r2, [pc, #352]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002ec:	f043 0304 	orr.w	r3, r3, #4
 80002f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f2:	e0a3      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOD)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a58      	ldr	r2, [pc, #352]	; (8000458 <GPIO_PCLK_Control+0x1b8>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PCLK_Control+0x6a>
			GPIOD_PCLK_EN();
 80002fc:	4b53      	ldr	r3, [pc, #332]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80002fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000300:	4a52      	ldr	r2, [pc, #328]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000302:	f043 0308 	orr.w	r3, r3, #8
 8000306:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000308:	e098      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOE)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a53      	ldr	r2, [pc, #332]	; (800045c <GPIO_PCLK_Control+0x1bc>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PCLK_Control+0x80>
			GPIOE_PCLK_EN();
 8000312:	4b4e      	ldr	r3, [pc, #312]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a4d      	ldr	r2, [pc, #308]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000318:	f043 0310 	orr.w	r3, r3, #16
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031e:	e08d      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOF)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a4f      	ldr	r2, [pc, #316]	; (8000460 <GPIO_PCLK_Control+0x1c0>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PCLK_Control+0x96>
			GPIOF_PCLK_EN();
 8000328:	4b48      	ldr	r3, [pc, #288]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a47      	ldr	r2, [pc, #284]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800032e:	f043 0320 	orr.w	r3, r3, #32
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000334:	e082      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOG)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a4a      	ldr	r2, [pc, #296]	; (8000464 <GPIO_PCLK_Control+0x1c4>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PCLK_Control+0xac>
			GPIOG_PCLK_EN();
 800033e:	4b43      	ldr	r3, [pc, #268]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000342:	4a42      	ldr	r2, [pc, #264]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000344:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034a:	e077      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOH)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a46      	ldr	r2, [pc, #280]	; (8000468 <GPIO_PCLK_Control+0x1c8>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PCLK_Control+0xc2>
			GPIOH_PCLK_EN();
 8000354:	4b3d      	ldr	r3, [pc, #244]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a3c      	ldr	r2, [pc, #240]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800035a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	e06c      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOI)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a41      	ldr	r2, [pc, #260]	; (800046c <GPIO_PCLK_Control+0x1cc>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d168      	bne.n	800043c <GPIO_PCLK_Control+0x19c>
			GPIOI_PCLK_EN();
 800036a:	4b38      	ldr	r3, [pc, #224]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036e:	4a37      	ldr	r2, [pc, #220]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000370:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000374:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000376:	e061      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		if(pGPIOx==GPIOA)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a33      	ldr	r2, [pc, #204]	; (8000448 <GPIO_PCLK_Control+0x1a8>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PCLK_Control+0xee>
			GPIOA_PCLK_DI();
 8000380:	4b32      	ldr	r3, [pc, #200]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a31      	ldr	r2, [pc, #196]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000386:	f023 0301 	bic.w	r3, r3, #1
 800038a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038c:	e056      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOB)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a2f      	ldr	r2, [pc, #188]	; (8000450 <GPIO_PCLK_Control+0x1b0>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PCLK_Control+0x104>
			GPIOB_PCLK_DI();
 8000396:	4b2d      	ldr	r3, [pc, #180]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a2c      	ldr	r2, [pc, #176]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800039c:	f023 0302 	bic.w	r3, r3, #2
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a2:	e04b      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOC)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a2b      	ldr	r2, [pc, #172]	; (8000454 <GPIO_PCLK_Control+0x1b4>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PCLK_Control+0x11a>
			GPIOC_PCLK_DI();
 80003ac:	4b27      	ldr	r3, [pc, #156]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a26      	ldr	r2, [pc, #152]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003b2:	f023 0304 	bic.w	r3, r3, #4
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e040      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOD)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a26      	ldr	r2, [pc, #152]	; (8000458 <GPIO_PCLK_Control+0x1b8>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PCLK_Control+0x130>
			GPIOD_PCLK_DI();
 80003c2:	4b22      	ldr	r3, [pc, #136]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a21      	ldr	r2, [pc, #132]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003c8:	f023 0308 	bic.w	r3, r3, #8
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e035      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOE)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a22      	ldr	r2, [pc, #136]	; (800045c <GPIO_PCLK_Control+0x1bc>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_PCLK_Control+0x146>
			GPIOE_PCLK_DI();
 80003d8:	4b1c      	ldr	r3, [pc, #112]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a1b      	ldr	r2, [pc, #108]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003de:	f023 0310 	bic.w	r3, r3, #16
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	e02a      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOF)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a1d      	ldr	r2, [pc, #116]	; (8000460 <GPIO_PCLK_Control+0x1c0>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_PCLK_Control+0x15c>
			GPIOF_PCLK_DI();
 80003ee:	4b17      	ldr	r3, [pc, #92]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f2:	4a16      	ldr	r2, [pc, #88]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 80003f4:	f023 0320 	bic.w	r3, r3, #32
 80003f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fa:	e01f      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOG)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a19      	ldr	r2, [pc, #100]	; (8000464 <GPIO_PCLK_Control+0x1c4>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_PCLK_Control+0x172>
			GPIOG_PCLK_DI();
 8000404:	4b11      	ldr	r3, [pc, #68]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000408:	4a10      	ldr	r2, [pc, #64]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800040a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800040e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000410:	e014      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOH)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a14      	ldr	r2, [pc, #80]	; (8000468 <GPIO_PCLK_Control+0x1c8>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_PCLK_Control+0x188>
			GPIOH_PCLK_DI();
 800041a:	4b0c      	ldr	r3, [pc, #48]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a0b      	ldr	r2, [pc, #44]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000420:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000426:	e009      	b.n	800043c <GPIO_PCLK_Control+0x19c>
		}else if(pGPIOx==GPIOI)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a10      	ldr	r2, [pc, #64]	; (800046c <GPIO_PCLK_Control+0x1cc>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d105      	bne.n	800043c <GPIO_PCLK_Control+0x19c>
			GPIOI_PCLK_DI();
 8000430:	4b06      	ldr	r3, [pc, #24]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000434:	4a05      	ldr	r2, [pc, #20]	; (800044c <GPIO_PCLK_Control+0x1ac>)
 8000436:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800043a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043c:	bf00      	nop
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000446:	4770      	bx	lr
 8000448:	40020000 	.word	0x40020000
 800044c:	40023800 	.word	0x40023800
 8000450:	40020400 	.word	0x40020400
 8000454:	40020800 	.word	0x40020800
 8000458:	40020c00 	.word	0x40020c00
 800045c:	40021000 	.word	0x40021000
 8000460:	40021400 	.word	0x40021400
 8000464:	40021800 	.word	0x40021800
 8000468:	40021c00 	.word	0x40021c00
 800046c:	40022000 	.word	0x40022000

08000470 <GPIO_Init>:


//GPOI Init DeInit

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b084      	sub	sp, #16
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
	//enable peri clk
	GPIO_PCLK_Control(pGPIOHandle->pGPIOx, ENABLE);
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	2101      	movs	r1, #1
 800047e:	4618      	mov	r0, r3
 8000480:	f7ff ff0e 	bl	80002a0 <GPIO_PCLK_Control>
	uint32_t temp=0;
 8000484:	2300      	movs	r3, #0
 8000486:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	795b      	ldrb	r3, [r3, #5]
 800048c:	2b03      	cmp	r3, #3
 800048e:	d822      	bhi.n	80004d6 <GPIO_Init+0x66>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	461a      	mov	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	005b      	lsls	r3, r3, #1
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	681a      	ldr	r2, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	005b      	lsls	r3, r3, #1
 80004ae:	2103      	movs	r1, #3
 80004b0:	fa01 f303 	lsl.w	r3, r1, r3
 80004b4:	43db      	mvns	r3, r3
 80004b6:	4619      	mov	r1, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	400a      	ands	r2, r1
 80004be:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	6819      	ldr	r1, [r3, #0]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	68fa      	ldr	r2, [r7, #12]
 80004cc:	430a      	orrs	r2, r1
 80004ce:	601a      	str	r2, [r3, #0]
		temp = 0;
 80004d0:	2300      	movs	r3, #0
 80004d2:	60fb      	str	r3, [r7, #12]
 80004d4:	e062      	b.n	800059c <GPIO_Init+0x12c>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	795b      	ldrb	r3, [r3, #5]
 80004da:	2b04      	cmp	r3, #4
 80004dc:	d117      	bne.n	800050e <GPIO_Init+0x9e>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004de:	4b7f      	ldr	r3, [pc, #508]	; (80006dc <GPIO_Init+0x26c>)
 80004e0:	68db      	ldr	r3, [r3, #12]
 80004e2:	687a      	ldr	r2, [r7, #4]
 80004e4:	7912      	ldrb	r2, [r2, #4]
 80004e6:	4611      	mov	r1, r2
 80004e8:	2201      	movs	r2, #1
 80004ea:	408a      	lsls	r2, r1
 80004ec:	4611      	mov	r1, r2
 80004ee:	4a7b      	ldr	r2, [pc, #492]	; (80006dc <GPIO_Init+0x26c>)
 80004f0:	430b      	orrs	r3, r1
 80004f2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f4:	4b79      	ldr	r3, [pc, #484]	; (80006dc <GPIO_Init+0x26c>)
 80004f6:	689b      	ldr	r3, [r3, #8]
 80004f8:	687a      	ldr	r2, [r7, #4]
 80004fa:	7912      	ldrb	r2, [r2, #4]
 80004fc:	4611      	mov	r1, r2
 80004fe:	2201      	movs	r2, #1
 8000500:	408a      	lsls	r2, r1
 8000502:	43d2      	mvns	r2, r2
 8000504:	4611      	mov	r1, r2
 8000506:	4a75      	ldr	r2, [pc, #468]	; (80006dc <GPIO_Init+0x26c>)
 8000508:	400b      	ands	r3, r1
 800050a:	6093      	str	r3, [r2, #8]
 800050c:	e035      	b.n	800057a <GPIO_Init+0x10a>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	795b      	ldrb	r3, [r3, #5]
 8000512:	2b05      	cmp	r3, #5
 8000514:	d117      	bne.n	8000546 <GPIO_Init+0xd6>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000516:	4b71      	ldr	r3, [pc, #452]	; (80006dc <GPIO_Init+0x26c>)
 8000518:	689b      	ldr	r3, [r3, #8]
 800051a:	687a      	ldr	r2, [r7, #4]
 800051c:	7912      	ldrb	r2, [r2, #4]
 800051e:	4611      	mov	r1, r2
 8000520:	2201      	movs	r2, #1
 8000522:	408a      	lsls	r2, r1
 8000524:	4611      	mov	r1, r2
 8000526:	4a6d      	ldr	r2, [pc, #436]	; (80006dc <GPIO_Init+0x26c>)
 8000528:	430b      	orrs	r3, r1
 800052a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052c:	4b6b      	ldr	r3, [pc, #428]	; (80006dc <GPIO_Init+0x26c>)
 800052e:	68db      	ldr	r3, [r3, #12]
 8000530:	687a      	ldr	r2, [r7, #4]
 8000532:	7912      	ldrb	r2, [r2, #4]
 8000534:	4611      	mov	r1, r2
 8000536:	2201      	movs	r2, #1
 8000538:	408a      	lsls	r2, r1
 800053a:	43d2      	mvns	r2, r2
 800053c:	4611      	mov	r1, r2
 800053e:	4a67      	ldr	r2, [pc, #412]	; (80006dc <GPIO_Init+0x26c>)
 8000540:	400b      	ands	r3, r1
 8000542:	60d3      	str	r3, [r2, #12]
 8000544:	e019      	b.n	800057a <GPIO_Init+0x10a>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	795b      	ldrb	r3, [r3, #5]
 800054a:	2b06      	cmp	r3, #6
 800054c:	d115      	bne.n	800057a <GPIO_Init+0x10a>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054e:	4b63      	ldr	r3, [pc, #396]	; (80006dc <GPIO_Init+0x26c>)
 8000550:	68db      	ldr	r3, [r3, #12]
 8000552:	687a      	ldr	r2, [r7, #4]
 8000554:	7912      	ldrb	r2, [r2, #4]
 8000556:	4611      	mov	r1, r2
 8000558:	2201      	movs	r2, #1
 800055a:	408a      	lsls	r2, r1
 800055c:	4611      	mov	r1, r2
 800055e:	4a5f      	ldr	r2, [pc, #380]	; (80006dc <GPIO_Init+0x26c>)
 8000560:	430b      	orrs	r3, r1
 8000562:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000564:	4b5d      	ldr	r3, [pc, #372]	; (80006dc <GPIO_Init+0x26c>)
 8000566:	689b      	ldr	r3, [r3, #8]
 8000568:	687a      	ldr	r2, [r7, #4]
 800056a:	7912      	ldrb	r2, [r2, #4]
 800056c:	4611      	mov	r1, r2
 800056e:	2201      	movs	r2, #1
 8000570:	408a      	lsls	r2, r1
 8000572:	4611      	mov	r1, r2
 8000574:	4a59      	ldr	r2, [pc, #356]	; (80006dc <GPIO_Init+0x26c>)
 8000576:	430b      	orrs	r3, r1
 8000578:	6093      	str	r3, [r2, #8]
		}
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	4b58      	ldr	r3, [pc, #352]	; (80006dc <GPIO_Init+0x26c>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	4a54      	ldr	r2, [pc, #336]	; (80006dc <GPIO_Init+0x26c>)
 800058c:	430b      	orrs	r3, r1
 800058e:	6013      	str	r3, [r2, #0]
		SYSCFG_PCLK_EN();
 8000590:	4b53      	ldr	r3, [pc, #332]	; (80006e0 <GPIO_Init+0x270>)
 8000592:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000594:	4a52      	ldr	r2, [pc, #328]	; (80006e0 <GPIO_Init+0x270>)
 8000596:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800059a:	6453      	str	r3, [r2, #68]	; 0x44

	}
	temp = 0;
 800059c:	2300      	movs	r3, #0
 800059e:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	799b      	ldrb	r3, [r3, #6]
 80005a4:	461a      	mov	r2, r3
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	791b      	ldrb	r3, [r3, #4]
 80005aa:	005b      	lsls	r3, r3, #1
 80005ac:	fa02 f303 	lsl.w	r3, r2, r3
 80005b0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	689a      	ldr	r2, [r3, #8]
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	791b      	ldrb	r3, [r3, #4]
 80005bc:	005b      	lsls	r3, r3, #1
 80005be:	2103      	movs	r1, #3
 80005c0:	fa01 f303 	lsl.w	r3, r1, r3
 80005c4:	43db      	mvns	r3, r3
 80005c6:	4619      	mov	r1, r3
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	400a      	ands	r2, r1
 80005ce:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	6899      	ldr	r1, [r3, #8]
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	68fa      	ldr	r2, [r7, #12]
 80005dc:	430a      	orrs	r2, r1
 80005de:	609a      	str	r2, [r3, #8]

	temp = 0;
 80005e0:	2300      	movs	r3, #0
 80005e2:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	79db      	ldrb	r3, [r3, #7]
 80005e8:	461a      	mov	r2, r3
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	791b      	ldrb	r3, [r3, #4]
 80005ee:	005b      	lsls	r3, r3, #1
 80005f0:	fa02 f303 	lsl.w	r3, r2, r3
 80005f4:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	68da      	ldr	r2, [r3, #12]
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	791b      	ldrb	r3, [r3, #4]
 8000600:	005b      	lsls	r3, r3, #1
 8000602:	2103      	movs	r1, #3
 8000604:	fa01 f303 	lsl.w	r3, r1, r3
 8000608:	43db      	mvns	r3, r3
 800060a:	4619      	mov	r1, r3
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	400a      	ands	r2, r1
 8000612:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	68d9      	ldr	r1, [r3, #12]
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	68fa      	ldr	r2, [r7, #12]
 8000620:	430a      	orrs	r2, r1
 8000622:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000624:	2300      	movs	r3, #0
 8000626:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOptType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	7a1b      	ldrb	r3, [r3, #8]
 800062c:	461a      	mov	r2, r3
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	791b      	ldrb	r3, [r3, #4]
 8000632:	fa02 f303 	lsl.w	r3, r2, r3
 8000636:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	685a      	ldr	r2, [r3, #4]
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	791b      	ldrb	r3, [r3, #4]
 8000642:	4619      	mov	r1, r3
 8000644:	2301      	movs	r3, #1
 8000646:	408b      	lsls	r3, r1
 8000648:	43db      	mvns	r3, r3
 800064a:	4619      	mov	r1, r3
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	400a      	ands	r2, r1
 8000652:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	6859      	ldr	r1, [r3, #4]
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	68fa      	ldr	r2, [r7, #12]
 8000660:	430a      	orrs	r2, r1
 8000662:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	795b      	ldrb	r3, [r3, #5]
 8000668:	2b02      	cmp	r3, #2
 800066a:	d132      	bne.n	80006d2 <GPIO_Init+0x262>
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	791b      	ldrb	r3, [r3, #4]
 8000670:	08db      	lsrs	r3, r3, #3
 8000672:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	791b      	ldrb	r3, [r3, #4]
 8000678:	f003 0307 	and.w	r3, r3, #7
 800067c:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	7afa      	ldrb	r2, [r7, #11]
 8000684:	3208      	adds	r2, #8
 8000686:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	791b      	ldrb	r3, [r3, #4]
 800068e:	009b      	lsls	r3, r3, #2
 8000690:	220f      	movs	r2, #15
 8000692:	fa02 f303 	lsl.w	r3, r2, r3
 8000696:	43db      	mvns	r3, r3
 8000698:	4618      	mov	r0, r3
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	7afa      	ldrb	r2, [r7, #11]
 80006a0:	4001      	ands	r1, r0
 80006a2:	3208      	adds	r2, #8
 80006a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	7afa      	ldrb	r2, [r7, #11]
 80006ae:	3208      	adds	r2, #8
 80006b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	7a5b      	ldrb	r3, [r3, #9]
 80006b8:	461a      	mov	r2, r3
 80006ba:	7abb      	ldrb	r3, [r7, #10]
 80006bc:	009b      	lsls	r3, r3, #2
 80006be:	fa02 f303 	lsl.w	r3, r2, r3
 80006c2:	4618      	mov	r0, r3
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	7afa      	ldrb	r2, [r7, #11]
 80006ca:	4301      	orrs	r1, r0
 80006cc:	3208      	adds	r2, #8
 80006ce:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}



}
 80006d2:	bf00      	nop
 80006d4:	3710      	adds	r7, #16
 80006d6:	46bd      	mov	sp, r7
 80006d8:	bd80      	pop	{r7, pc}
 80006da:	bf00      	nop
 80006dc:	40013c00 	.word	0x40013c00
 80006e0:	40023800 	.word	0x40023800

080006e4 <SPI_PCLK_Control>:



// init deinit
void SPI_PCLK_Control(SPI_RegDef_t *pSPIx, uint8_t En_Or_Di)
{
 80006e4:	b480      	push	{r7}
 80006e6:	b083      	sub	sp, #12
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
 80006ec:	460b      	mov	r3, r1
 80006ee:	70fb      	strb	r3, [r7, #3]
	if(En_Or_Di == ENABLE)
 80006f0:	78fb      	ldrb	r3, [r7, #3]
 80006f2:	2b01      	cmp	r3, #1
 80006f4:	d140      	bne.n	8000778 <SPI_PCLK_Control+0x94>
	{
		if(pSPIx	==	SPI1)
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	4a44      	ldr	r2, [pc, #272]	; (800080c <SPI_PCLK_Control+0x128>)
 80006fa:	4293      	cmp	r3, r2
 80006fc:	d106      	bne.n	800070c <SPI_PCLK_Control+0x28>
		{
			SPI1_PCLK_EN();
 80006fe:	4b44      	ldr	r3, [pc, #272]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000700:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000702:	4a43      	ldr	r2, [pc, #268]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000704:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000708:	6453      	str	r3, [r2, #68]	; 0x44
 800070a:	e035      	b.n	8000778 <SPI_PCLK_Control+0x94>
		}
		else if(pSPIx	==	SPI2)
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	4a41      	ldr	r2, [pc, #260]	; (8000814 <SPI_PCLK_Control+0x130>)
 8000710:	4293      	cmp	r3, r2
 8000712:	d106      	bne.n	8000722 <SPI_PCLK_Control+0x3e>
		{
			SPI2_PCLK_EN();
 8000714:	4b3e      	ldr	r3, [pc, #248]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000716:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000718:	4a3d      	ldr	r2, [pc, #244]	; (8000810 <SPI_PCLK_Control+0x12c>)
 800071a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800071e:	6413      	str	r3, [r2, #64]	; 0x40
 8000720:	e02a      	b.n	8000778 <SPI_PCLK_Control+0x94>
		}
		else if(pSPIx	==	SPI3)
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	4a3c      	ldr	r2, [pc, #240]	; (8000818 <SPI_PCLK_Control+0x134>)
 8000726:	4293      	cmp	r3, r2
 8000728:	d106      	bne.n	8000738 <SPI_PCLK_Control+0x54>
		{
			SPI3_PCLK_EN();
 800072a:	4b39      	ldr	r3, [pc, #228]	; (8000810 <SPI_PCLK_Control+0x12c>)
 800072c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800072e:	4a38      	ldr	r2, [pc, #224]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000730:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000734:	6413      	str	r3, [r2, #64]	; 0x40
 8000736:	e01f      	b.n	8000778 <SPI_PCLK_Control+0x94>
		}
		else if(pSPIx	==	SPI4)
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	4a38      	ldr	r2, [pc, #224]	; (800081c <SPI_PCLK_Control+0x138>)
 800073c:	4293      	cmp	r3, r2
 800073e:	d106      	bne.n	800074e <SPI_PCLK_Control+0x6a>
		{
			SPI4_PCLK_EN();
 8000740:	4b33      	ldr	r3, [pc, #204]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000742:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000744:	4a32      	ldr	r2, [pc, #200]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000746:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800074a:	6453      	str	r3, [r2, #68]	; 0x44
 800074c:	e014      	b.n	8000778 <SPI_PCLK_Control+0x94>
		}
		else if(pSPIx	==	SPI5)
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	4a33      	ldr	r2, [pc, #204]	; (8000820 <SPI_PCLK_Control+0x13c>)
 8000752:	4293      	cmp	r3, r2
 8000754:	d106      	bne.n	8000764 <SPI_PCLK_Control+0x80>
		{
			SPI5_PCLK_EN();
 8000756:	4b2e      	ldr	r3, [pc, #184]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000758:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800075a:	4a2d      	ldr	r2, [pc, #180]	; (8000810 <SPI_PCLK_Control+0x12c>)
 800075c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000760:	6453      	str	r3, [r2, #68]	; 0x44
 8000762:	e009      	b.n	8000778 <SPI_PCLK_Control+0x94>
		}
		else if(pSPIx	==	SPI6)
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	4a2f      	ldr	r2, [pc, #188]	; (8000824 <SPI_PCLK_Control+0x140>)
 8000768:	4293      	cmp	r3, r2
 800076a:	d105      	bne.n	8000778 <SPI_PCLK_Control+0x94>
		{
			SPI6_PCLK_EN();
 800076c:	4b28      	ldr	r3, [pc, #160]	; (8000810 <SPI_PCLK_Control+0x12c>)
 800076e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000770:	4a27      	ldr	r2, [pc, #156]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000772:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000776:	6453      	str	r3, [r2, #68]	; 0x44
		}
	}
	if(En_Or_Di == DISABLE)
 8000778:	78fb      	ldrb	r3, [r7, #3]
 800077a:	2b00      	cmp	r3, #0
 800077c:	d140      	bne.n	8000800 <SPI_PCLK_Control+0x11c>
	{
		if(pSPIx	==	SPI1)
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	4a22      	ldr	r2, [pc, #136]	; (800080c <SPI_PCLK_Control+0x128>)
 8000782:	4293      	cmp	r3, r2
 8000784:	d106      	bne.n	8000794 <SPI_PCLK_Control+0xb0>
		{
			SPI1_PCLK_DI();
 8000786:	4b22      	ldr	r3, [pc, #136]	; (8000810 <SPI_PCLK_Control+0x12c>)
 8000788:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800078a:	4a21      	ldr	r2, [pc, #132]	; (8000810 <SPI_PCLK_Control+0x12c>)
 800078c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000790:	6453      	str	r3, [r2, #68]	; 0x44
		else if(pSPIx	==	SPI6)
		{
			SPI6_PCLK_DI();
		}
	}
}
 8000792:	e035      	b.n	8000800 <SPI_PCLK_Control+0x11c>
		else if(pSPIx	==	SPI2)
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	4a1f      	ldr	r2, [pc, #124]	; (8000814 <SPI_PCLK_Control+0x130>)
 8000798:	4293      	cmp	r3, r2
 800079a:	d106      	bne.n	80007aa <SPI_PCLK_Control+0xc6>
			SPI2_PCLK_DI();
 800079c:	4b1c      	ldr	r3, [pc, #112]	; (8000810 <SPI_PCLK_Control+0x12c>)
 800079e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007a0:	4a1b      	ldr	r2, [pc, #108]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007a2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80007a6:	6413      	str	r3, [r2, #64]	; 0x40
}
 80007a8:	e02a      	b.n	8000800 <SPI_PCLK_Control+0x11c>
		else if(pSPIx	==	SPI3)
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	4a1a      	ldr	r2, [pc, #104]	; (8000818 <SPI_PCLK_Control+0x134>)
 80007ae:	4293      	cmp	r3, r2
 80007b0:	d106      	bne.n	80007c0 <SPI_PCLK_Control+0xdc>
			SPI3_PCLK_DI();
 80007b2:	4b17      	ldr	r3, [pc, #92]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007b6:	4a16      	ldr	r2, [pc, #88]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007b8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80007bc:	6413      	str	r3, [r2, #64]	; 0x40
}
 80007be:	e01f      	b.n	8000800 <SPI_PCLK_Control+0x11c>
		else if(pSPIx	==	SPI4)
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	4a16      	ldr	r2, [pc, #88]	; (800081c <SPI_PCLK_Control+0x138>)
 80007c4:	4293      	cmp	r3, r2
 80007c6:	d106      	bne.n	80007d6 <SPI_PCLK_Control+0xf2>
			SPI4_PCLK_DI();
 80007c8:	4b11      	ldr	r3, [pc, #68]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007cc:	4a10      	ldr	r2, [pc, #64]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007ce:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80007d2:	6453      	str	r3, [r2, #68]	; 0x44
}
 80007d4:	e014      	b.n	8000800 <SPI_PCLK_Control+0x11c>
		else if(pSPIx	==	SPI5)
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	4a11      	ldr	r2, [pc, #68]	; (8000820 <SPI_PCLK_Control+0x13c>)
 80007da:	4293      	cmp	r3, r2
 80007dc:	d106      	bne.n	80007ec <SPI_PCLK_Control+0x108>
			SPI5_PCLK_DI();
 80007de:	4b0c      	ldr	r3, [pc, #48]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007e2:	4a0b      	ldr	r2, [pc, #44]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007e4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80007e8:	6453      	str	r3, [r2, #68]	; 0x44
}
 80007ea:	e009      	b.n	8000800 <SPI_PCLK_Control+0x11c>
		else if(pSPIx	==	SPI6)
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	4a0d      	ldr	r2, [pc, #52]	; (8000824 <SPI_PCLK_Control+0x140>)
 80007f0:	4293      	cmp	r3, r2
 80007f2:	d105      	bne.n	8000800 <SPI_PCLK_Control+0x11c>
			SPI6_PCLK_DI();
 80007f4:	4b06      	ldr	r3, [pc, #24]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007f8:	4a05      	ldr	r2, [pc, #20]	; (8000810 <SPI_PCLK_Control+0x12c>)
 80007fa:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80007fe:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000800:	bf00      	nop
 8000802:	370c      	adds	r7, #12
 8000804:	46bd      	mov	sp, r7
 8000806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800080a:	4770      	bx	lr
 800080c:	40013000 	.word	0x40013000
 8000810:	40023800 	.word	0x40023800
 8000814:	40003800 	.word	0x40003800
 8000818:	40003c00 	.word	0x40003c00
 800081c:	40013400 	.word	0x40013400
 8000820:	40015000 	.word	0x40015000
 8000824:	40015400 	.word	0x40015400

08000828 <SPI_Init>:
void SPI_Init(SPI_Handle_t *pSPIHandle)
{
 8000828:	b580      	push	{r7, lr}
 800082a:	b084      	sub	sp, #16
 800082c:	af00      	add	r7, sp, #0
 800082e:	6078      	str	r0, [r7, #4]
	SPI_PCLK_Control(pSPIHandle->pSPIx, ENABLE);
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	2101      	movs	r1, #1
 8000836:	4618      	mov	r0, r3
 8000838:	f7ff ff54 	bl	80006e4 <SPI_PCLK_Control>
	uint32_t temp =0;
 800083c:	2300      	movs	r3, #0
 800083e:	60fb      	str	r3, [r7, #12]
	//device mode
	temp |= pSPIHandle->SPI_Config.SPI_DviceMode << SPI_CR1_MSTR;
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	791b      	ldrb	r3, [r3, #4]
 8000844:	009b      	lsls	r3, r3, #2
 8000846:	461a      	mov	r2, r3
 8000848:	68fb      	ldr	r3, [r7, #12]
 800084a:	4313      	orrs	r3, r2
 800084c:	60fb      	str	r3, [r7, #12]
	//bus config
	if(pSPIHandle->SPI_Config.SPI_BusConfig == SPI_BUS_CONFIG_FD)
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	795b      	ldrb	r3, [r3, #5]
 8000852:	2b01      	cmp	r3, #1
 8000854:	d104      	bne.n	8000860 <SPI_Init+0x38>
	{
		temp &= ~(1<<SPI_CR1_BIDIMODE);
 8000856:	68fb      	ldr	r3, [r7, #12]
 8000858:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800085c:	60fb      	str	r3, [r7, #12]
 800085e:	e021      	b.n	80008a4 <SPI_Init+0x7c>
	}
	else if(pSPIHandle->SPI_Config.SPI_BusConfig == SPI_BUS_CONFIG_HD)
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	795b      	ldrb	r3, [r3, #5]
 8000864:	2b02      	cmp	r3, #2
 8000866:	d104      	bne.n	8000872 <SPI_Init+0x4a>
	{
		temp |= (1<<SPI_CR1_BIDIMODE);
 8000868:	68fb      	ldr	r3, [r7, #12]
 800086a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800086e:	60fb      	str	r3, [r7, #12]
 8000870:	e018      	b.n	80008a4 <SPI_Init+0x7c>
	}
	else if(pSPIHandle->SPI_Config.SPI_BusConfig == SPI_BUS_CONFIG_SIPLEX_RX_ONLY)
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	795b      	ldrb	r3, [r3, #5]
 8000876:	2b03      	cmp	r3, #3
 8000878:	d108      	bne.n	800088c <SPI_Init+0x64>
	{
		temp &= (1<<SPI_CR1_BIDIMODE);
 800087a:	68fb      	ldr	r3, [r7, #12]
 800087c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000880:	60fb      	str	r3, [r7, #12]
		temp &= ~(1<<SPI_CR1_BIDIOE);
 8000882:	68fb      	ldr	r3, [r7, #12]
 8000884:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000888:	60fb      	str	r3, [r7, #12]
 800088a:	e00b      	b.n	80008a4 <SPI_Init+0x7c>
	}
	else if(pSPIHandle->SPI_Config.SPI_BusConfig == SPI_BUS_CONFIG_SIPLEX_TX_ONLY)
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	795b      	ldrb	r3, [r3, #5]
 8000890:	2b04      	cmp	r3, #4
 8000892:	d107      	bne.n	80008a4 <SPI_Init+0x7c>
	{
		temp &= (~1<<SPI_CR1_BIDIMODE);
 8000894:	68fb      	ldr	r3, [r7, #12]
 8000896:	0c1b      	lsrs	r3, r3, #16
 8000898:	041b      	lsls	r3, r3, #16
 800089a:	60fb      	str	r3, [r7, #12]
		temp &= (1<<SPI_CR1_BIDIOE);
 800089c:	68fb      	ldr	r3, [r7, #12]
 800089e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80008a2:	60fb      	str	r3, [r7, #12]
	}

	temp |= pSPIHandle->SPI_Config.SPI_SclkSpeed <<SPI_CR1_BR;
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	799b      	ldrb	r3, [r3, #6]
 80008a8:	00db      	lsls	r3, r3, #3
 80008aa:	461a      	mov	r2, r3
 80008ac:	68fb      	ldr	r3, [r7, #12]
 80008ae:	4313      	orrs	r3, r2
 80008b0:	60fb      	str	r3, [r7, #12]

	temp |= pSPIHandle->SPI_Config.SPI_DFF <<SPI_CR1_DFF;
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	79db      	ldrb	r3, [r3, #7]
 80008b6:	02db      	lsls	r3, r3, #11
 80008b8:	461a      	mov	r2, r3
 80008ba:	68fb      	ldr	r3, [r7, #12]
 80008bc:	4313      	orrs	r3, r2
 80008be:	60fb      	str	r3, [r7, #12]

	temp |= pSPIHandle->SPI_Config.SPI_CPOL <<SPI_CR1_CPOL;
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	7a5b      	ldrb	r3, [r3, #9]
 80008c4:	005b      	lsls	r3, r3, #1
 80008c6:	461a      	mov	r2, r3
 80008c8:	68fb      	ldr	r3, [r7, #12]
 80008ca:	4313      	orrs	r3, r2
 80008cc:	60fb      	str	r3, [r7, #12]

	temp |= pSPIHandle->SPI_Config.SPI_CPHA <<SPI_CR1_CPHA;
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	7a1b      	ldrb	r3, [r3, #8]
 80008d2:	461a      	mov	r2, r3
 80008d4:	68fb      	ldr	r3, [r7, #12]
 80008d6:	4313      	orrs	r3, r2
 80008d8:	60fb      	str	r3, [r7, #12]

	temp |= pSPIHandle->SPI_Config.SPI_SSM <<SPI_CR1_SSM;
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	7a9b      	ldrb	r3, [r3, #10]
 80008de:	025b      	lsls	r3, r3, #9
 80008e0:	461a      	mov	r2, r3
 80008e2:	68fb      	ldr	r3, [r7, #12]
 80008e4:	4313      	orrs	r3, r2
 80008e6:	60fb      	str	r3, [r7, #12]


	pSPIHandle->pSPIx->CR1 |= temp;
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	6819      	ldr	r1, [r3, #0]
 80008ee:	687b      	ldr	r3, [r7, #4]
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	68fa      	ldr	r2, [r7, #12]
 80008f4:	430a      	orrs	r2, r1
 80008f6:	601a      	str	r2, [r3, #0]



}
 80008f8:	bf00      	nop
 80008fa:	3710      	adds	r7, #16
 80008fc:	46bd      	mov	sp, r7
 80008fe:	bd80      	pop	{r7, pc}

08000900 <SPI_GetFlagStatus>:
void 		SPI_DeInit(SPI_RegDef_t *pSPIx);


uint8_t  SPI_GetFlagStatus(SPI_RegDef_t *pSPIx, uint32_t flagName)
{
 8000900:	b480      	push	{r7}
 8000902:	b083      	sub	sp, #12
 8000904:	af00      	add	r7, sp, #0
 8000906:	6078      	str	r0, [r7, #4]
 8000908:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & flagName)
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	689a      	ldr	r2, [r3, #8]
 800090e:	683b      	ldr	r3, [r7, #0]
 8000910:	4013      	ands	r3, r2
 8000912:	2b00      	cmp	r3, #0
 8000914:	d001      	beq.n	800091a <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8000916:	2301      	movs	r3, #1
 8000918:	e000      	b.n	800091c <SPI_GetFlagStatus+0x1c>
	}

	return FLAG_RESET;
 800091a:	2300      	movs	r3, #0
}
 800091c:	4618      	mov	r0, r3
 800091e:	370c      	adds	r7, #12
 8000920:	46bd      	mov	sp, r7
 8000922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000926:	4770      	bx	lr

08000928 <SPI_SendData>:

//data RX TX

//this is blocking blocking// polling
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t Len)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	b084      	sub	sp, #16
 800092c:	af00      	add	r7, sp, #0
 800092e:	60f8      	str	r0, [r7, #12]
 8000930:	60b9      	str	r1, [r7, #8]
 8000932:	607a      	str	r2, [r7, #4]
	while(Len >0)
 8000934:	e027      	b.n	8000986 <SPI_SendData+0x5e>
	{
		while(SPI_GetFlagStatus(pSPIx, SPI_TXE_FLAG) == FLAG_RESET);
 8000936:	bf00      	nop
 8000938:	2102      	movs	r1, #2
 800093a:	68f8      	ldr	r0, [r7, #12]
 800093c:	f7ff ffe0 	bl	8000900 <SPI_GetFlagStatus>
 8000940:	4603      	mov	r3, r0
 8000942:	2b00      	cmp	r3, #0
 8000944:	d0f8      	beq.n	8000938 <SPI_SendData+0x10>

		if((pSPIx->CR1 & (1<<SPI_CR1_DFF)))
 8000946:	68fb      	ldr	r3, [r7, #12]
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800094e:	2b00      	cmp	r3, #0
 8000950:	d00e      	beq.n	8000970 <SPI_SendData+0x48>
		{
			pSPIx->DR = *((uint16_t*)(pTxBuffer));
 8000952:	68bb      	ldr	r3, [r7, #8]
 8000954:	881b      	ldrh	r3, [r3, #0]
 8000956:	461a      	mov	r2, r3
 8000958:	68fb      	ldr	r3, [r7, #12]
 800095a:	60da      	str	r2, [r3, #12]
			Len--;
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	3b01      	subs	r3, #1
 8000960:	607b      	str	r3, [r7, #4]
			Len--;
 8000962:	687b      	ldr	r3, [r7, #4]
 8000964:	3b01      	subs	r3, #1
 8000966:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTxBuffer++;
 8000968:	68bb      	ldr	r3, [r7, #8]
 800096a:	3301      	adds	r3, #1
 800096c:	60bb      	str	r3, [r7, #8]
 800096e:	e00a      	b.n	8000986 <SPI_SendData+0x5e>
		}else
		{
			pSPIx->DR = *pTxBuffer;
 8000970:	68bb      	ldr	r3, [r7, #8]
 8000972:	781b      	ldrb	r3, [r3, #0]
 8000974:	461a      	mov	r2, r3
 8000976:	68fb      	ldr	r3, [r7, #12]
 8000978:	60da      	str	r2, [r3, #12]
			Len--;
 800097a:	687b      	ldr	r3, [r7, #4]
 800097c:	3b01      	subs	r3, #1
 800097e:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000980:	68bb      	ldr	r3, [r7, #8]
 8000982:	3301      	adds	r3, #1
 8000984:	60bb      	str	r3, [r7, #8]
	while(Len >0)
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	2b00      	cmp	r3, #0
 800098a:	d1d4      	bne.n	8000936 <SPI_SendData+0xe>
		}
	}
}
 800098c:	bf00      	nop
 800098e:	bf00      	nop
 8000990:	3710      	adds	r7, #16
 8000992:	46bd      	mov	sp, r7
 8000994:	bd80      	pop	{r7, pc}

08000996 <SPI_Peri_Control>:
		}
	}
}

void SPI_Peri_Control(SPI_RegDef_t *pSPIx, uint8_t En_Or_Di)
{
 8000996:	b480      	push	{r7}
 8000998:	b083      	sub	sp, #12
 800099a:	af00      	add	r7, sp, #0
 800099c:	6078      	str	r0, [r7, #4]
 800099e:	460b      	mov	r3, r1
 80009a0:	70fb      	strb	r3, [r7, #3]
	if(En_Or_Di == ENABLE)
 80009a2:	78fb      	ldrb	r3, [r7, #3]
 80009a4:	2b01      	cmp	r3, #1
 80009a6:	d106      	bne.n	80009b6 <SPI_Peri_Control+0x20>
	{
		pSPIx->CR1 |= (1 << SPI_CR1_SPE);
 80009a8:	687b      	ldr	r3, [r7, #4]
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	601a      	str	r2, [r3, #0]
	}else
	{
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
	}
}
 80009b4:	e005      	b.n	80009c2 <SPI_Peri_Control+0x2c>
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
 80009b6:	687b      	ldr	r3, [r7, #4]
 80009b8:	681b      	ldr	r3, [r3, #0]
 80009ba:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 80009be:	687b      	ldr	r3, [r7, #4]
 80009c0:	601a      	str	r2, [r3, #0]
}
 80009c2:	bf00      	nop
 80009c4:	370c      	adds	r7, #12
 80009c6:	46bd      	mov	sp, r7
 80009c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009cc:	4770      	bx	lr

080009ce <SPI_SSOE_Control>:
		pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
	}
}

void SPI_SSOE_Control(SPI_RegDef_t *pSPIx, uint8_t En_Or_Di)
{
 80009ce:	b480      	push	{r7}
 80009d0:	b083      	sub	sp, #12
 80009d2:	af00      	add	r7, sp, #0
 80009d4:	6078      	str	r0, [r7, #4]
 80009d6:	460b      	mov	r3, r1
 80009d8:	70fb      	strb	r3, [r7, #3]
	if(En_Or_Di == ENABLE)
 80009da:	78fb      	ldrb	r3, [r7, #3]
 80009dc:	2b01      	cmp	r3, #1
 80009de:	d106      	bne.n	80009ee <SPI_SSOE_Control+0x20>
	{
		pSPIx->CR2 |= (1 << SPI_CR2_SSOE);
 80009e0:	687b      	ldr	r3, [r7, #4]
 80009e2:	685b      	ldr	r3, [r3, #4]
 80009e4:	f043 0204 	orr.w	r2, r3, #4
 80009e8:	687b      	ldr	r3, [r7, #4]
 80009ea:	605a      	str	r2, [r3, #4]
	}else
	{
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
	}
}
 80009ec:	e005      	b.n	80009fa <SPI_SSOE_Control+0x2c>
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	685b      	ldr	r3, [r3, #4]
 80009f2:	f023 0204 	bic.w	r2, r3, #4
 80009f6:	687b      	ldr	r3, [r7, #4]
 80009f8:	605a      	str	r2, [r3, #4]
}
 80009fa:	bf00      	nop
 80009fc:	370c      	adds	r7, #12
 80009fe:	46bd      	mov	sp, r7
 8000a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a04:	4770      	bx	lr
	...

08000a08 <SPI1_GPIOInit>:
#include "stm32f407xx_spi_driver.h"

extern void initialise_monitor_handles(void);

void SPI1_GPIOInit(void)
{
 8000a08:	b580      	push	{r7, lr}
 8000a0a:	b084      	sub	sp, #16
 8000a0c:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOA;
 8000a0e:	4b13      	ldr	r3, [pc, #76]	; (8000a5c <SPI1_GPIOInit+0x54>)
 8000a10:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000a12:	2302      	movs	r3, #2
 8000a14:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode= 5;
 8000a16:	2305      	movs	r3, #5
 8000a18:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000a1e:	2302      	movs	r3, #2
 8000a20:	72bb      	strb	r3, [r7, #10]

	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_4;
 8000a22:	2304      	movs	r3, #4
 8000a24:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a26:	1d3b      	adds	r3, r7, #4
 8000a28:	4618      	mov	r0, r3
 8000a2a:	f7ff fd21 	bl	8000470 <GPIO_Init>
	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_5;
 8000a2e:	2305      	movs	r3, #5
 8000a30:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a32:	1d3b      	adds	r3, r7, #4
 8000a34:	4618      	mov	r0, r3
 8000a36:	f7ff fd1b 	bl	8000470 <GPIO_Init>
	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_6;
 8000a3a:	2306      	movs	r3, #6
 8000a3c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a3e:	1d3b      	adds	r3, r7, #4
 8000a40:	4618      	mov	r0, r3
 8000a42:	f7ff fd15 	bl	8000470 <GPIO_Init>
	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_7;
 8000a46:	2307      	movs	r3, #7
 8000a48:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a4a:	1d3b      	adds	r3, r7, #4
 8000a4c:	4618      	mov	r0, r3
 8000a4e:	f7ff fd0f 	bl	8000470 <GPIO_Init>

	//comment
	//more comments.
	//more and more comments

}
 8000a52:	bf00      	nop
 8000a54:	3710      	adds	r7, #16
 8000a56:	46bd      	mov	sp, r7
 8000a58:	bd80      	pop	{r7, pc}
 8000a5a:	bf00      	nop
 8000a5c:	40020000 	.word	0x40020000

08000a60 <SPI1_Inits>:

void SPI1_Inits(void)
{
 8000a60:	b580      	push	{r7, lr}
 8000a62:	b084      	sub	sp, #16
 8000a64:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2Handle;
	SPI2Handle.pSPIx = SPI1;
 8000a66:	4b0c      	ldr	r3, [pc, #48]	; (8000a98 <SPI1_Inits+0x38>)
 8000a68:	607b      	str	r3, [r7, #4]
	SPI2Handle.SPI_Config.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000a6a:	2301      	movs	r3, #1
 8000a6c:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPI_Config.SPI_DviceMode = SPI_DEVICE_MODE_MASTER;
 8000a6e:	2301      	movs	r3, #1
 8000a70:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPI_Config.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV8;
 8000a72:	2302      	movs	r3, #2
 8000a74:	72bb      	strb	r3, [r7, #10]
	SPI2Handle.SPI_Config.SPI_DFF = SPI_DFF_8BITS;
 8000a76:	2300      	movs	r3, #0
 8000a78:	72fb      	strb	r3, [r7, #11]
	SPI2Handle.SPI_Config.SPI_CPHA = SPI_CPOL_LOW;
 8000a7a:	2300      	movs	r3, #0
 8000a7c:	733b      	strb	r3, [r7, #12]
	SPI2Handle.SPI_Config.SPI_CPOL= SPI_CPOL_LOW;
 8000a7e:	2300      	movs	r3, #0
 8000a80:	737b      	strb	r3, [r7, #13]
	SPI2Handle.SPI_Config.SPI_SSM = SPI_SSM_DI;
 8000a82:	2300      	movs	r3, #0
 8000a84:	73bb      	strb	r3, [r7, #14]

	SPI_Init(&SPI2Handle);
 8000a86:	1d3b      	adds	r3, r7, #4
 8000a88:	4618      	mov	r0, r3
 8000a8a:	f7ff fecd 	bl	8000828 <SPI_Init>
}
 8000a8e:	bf00      	nop
 8000a90:	3710      	adds	r7, #16
 8000a92:	46bd      	mov	sp, r7
 8000a94:	bd80      	pop	{r7, pc}
 8000a96:	bf00      	nop
 8000a98:	40013000 	.word	0x40013000

08000a9c <SPI2_GPIOInit>:




void SPI2_GPIOInit(void)
{
 8000a9c:	b580      	push	{r7, lr}
 8000a9e:	b084      	sub	sp, #16
 8000aa0:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
 8000aa2:	4b14      	ldr	r3, [pc, #80]	; (8000af4 <SPI2_GPIOInit+0x58>)
 8000aa4:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000aa6:	2302      	movs	r3, #2
 8000aa8:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode= 5;
 8000aaa:	2305      	movs	r3, #5
 8000aac:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000aae:	2300      	movs	r3, #0
 8000ab0:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000ab2:	2302      	movs	r3, #2
 8000ab4:	72bb      	strb	r3, [r7, #10]

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_13;
 8000ab6:	230d      	movs	r3, #13
 8000ab8:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000aba:	1d3b      	adds	r3, r7, #4
 8000abc:	4618      	mov	r0, r3
 8000abe:	f7ff fcd7 	bl	8000470 <GPIO_Init>
	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_12;
 8000ac2:	230c      	movs	r3, #12
 8000ac4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000ac6:	1d3b      	adds	r3, r7, #4
 8000ac8:	4618      	mov	r0, r3
 8000aca:	f7ff fcd1 	bl	8000470 <GPIO_Init>


	//From port C

	SPIPins.pGPIOx = GPIOC;
 8000ace:	4b0a      	ldr	r3, [pc, #40]	; (8000af8 <SPI2_GPIOInit+0x5c>)
 8000ad0:	607b      	str	r3, [r7, #4]

	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_2;
 8000ad2:	2302      	movs	r3, #2
 8000ad4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000ad6:	1d3b      	adds	r3, r7, #4
 8000ad8:	4618      	mov	r0, r3
 8000ada:	f7ff fcc9 	bl	8000470 <GPIO_Init>
	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPOIO_PIN_NO_3;
 8000ade:	2303      	movs	r3, #3
 8000ae0:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000ae2:	1d3b      	adds	r3, r7, #4
 8000ae4:	4618      	mov	r0, r3
 8000ae6:	f7ff fcc3 	bl	8000470 <GPIO_Init>


}
 8000aea:	bf00      	nop
 8000aec:	3710      	adds	r7, #16
 8000aee:	46bd      	mov	sp, r7
 8000af0:	bd80      	pop	{r7, pc}
 8000af2:	bf00      	nop
 8000af4:	40020400 	.word	0x40020400
 8000af8:	40020800 	.word	0x40020800

08000afc <SPI2_Inits>:

void SPI2_Inits(void)
{
 8000afc:	b580      	push	{r7, lr}
 8000afe:	b084      	sub	sp, #16
 8000b00:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2Handle;
	SPI2Handle.pSPIx = SPI2;
 8000b02:	4b0c      	ldr	r3, [pc, #48]	; (8000b34 <SPI2_Inits+0x38>)
 8000b04:	607b      	str	r3, [r7, #4]
	SPI2Handle.SPI_Config.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000b06:	2301      	movs	r3, #1
 8000b08:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPI_Config.SPI_DviceMode = SPI_DEVICE_MODE_SLAVE;
 8000b0a:	2302      	movs	r3, #2
 8000b0c:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPI_Config.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV8;
 8000b0e:	2302      	movs	r3, #2
 8000b10:	72bb      	strb	r3, [r7, #10]
	SPI2Handle.SPI_Config.SPI_DFF = SPI_DFF_8BITS;
 8000b12:	2300      	movs	r3, #0
 8000b14:	72fb      	strb	r3, [r7, #11]
	SPI2Handle.SPI_Config.SPI_CPHA = SPI_CPOL_LOW;
 8000b16:	2300      	movs	r3, #0
 8000b18:	733b      	strb	r3, [r7, #12]
	SPI2Handle.SPI_Config.SPI_CPOL= SPI_CPOL_LOW;
 8000b1a:	2300      	movs	r3, #0
 8000b1c:	737b      	strb	r3, [r7, #13]
	SPI2Handle.SPI_Config.SPI_SSM = SPI_SSM_DI;
 8000b1e:	2300      	movs	r3, #0
 8000b20:	73bb      	strb	r3, [r7, #14]
//	SPI2Handle.SPI_Config.

	SPI_Init(&SPI2Handle);
 8000b22:	1d3b      	adds	r3, r7, #4
 8000b24:	4618      	mov	r0, r3
 8000b26:	f7ff fe7f 	bl	8000828 <SPI_Init>
}
 8000b2a:	bf00      	nop
 8000b2c:	3710      	adds	r7, #16
 8000b2e:	46bd      	mov	sp, r7
 8000b30:	bd80      	pop	{r7, pc}
 8000b32:	bf00      	nop
 8000b34:	40003800 	.word	0x40003800

08000b38 <main>:




int main(void){
 8000b38:	b5b0      	push	{r4, r5, r7, lr}
 8000b3a:	b086      	sub	sp, #24
 8000b3c:	af00      	add	r7, sp, #0
	initialise_monitor_handles();	//Using same chip as Master and Slave. SPI1->PortA is Master and SPI2->PortB+C are
 8000b3e:	f000 fac3 	bl	80010c8 <initialise_monitor_handles>

	char usrData[]= "Sending Data over SPI1.";
 8000b42:	4b1d      	ldr	r3, [pc, #116]	; (8000bb8 <main+0x80>)
 8000b44:	463c      	mov	r4, r7
 8000b46:	461d      	mov	r5, r3
 8000b48:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b4c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000b50:	e884 0003 	stmia.w	r4, {r0, r1}
	printf("Demo test\n");
 8000b54:	4819      	ldr	r0, [pc, #100]	; (8000bbc <main+0x84>)
 8000b56:	f000 fd3d 	bl	80015d4 <puts>

	SPI1_GPIOInit();
 8000b5a:	f7ff ff55 	bl	8000a08 <SPI1_GPIOInit>

	SPI1_Inits();
 8000b5e:	f7ff ff7f 	bl	8000a60 <SPI1_Inits>

	SPI2_GPIOInit();
 8000b62:	f7ff ff9b 	bl	8000a9c <SPI2_GPIOInit>

	SPI2_Inits();
 8000b66:	f7ff ffc9 	bl	8000afc <SPI2_Inits>

	//SPI_SSI_Control(SPI1, ENABLE);
	//SPI_SSI_Control(SPI2, ENABLE);

	SPI_SSOE_Control(SPI1, ENABLE);
 8000b6a:	2101      	movs	r1, #1
 8000b6c:	4814      	ldr	r0, [pc, #80]	; (8000bc0 <main+0x88>)
 8000b6e:	f7ff ff2e 	bl	80009ce <SPI_SSOE_Control>

	SPI_Peri_Control(SPI1, ENABLE);
 8000b72:	2101      	movs	r1, #1
 8000b74:	4812      	ldr	r0, [pc, #72]	; (8000bc0 <main+0x88>)
 8000b76:	f7ff ff0e 	bl	8000996 <SPI_Peri_Control>
	SPI_Peri_Control(SPI2, ENABLE);
 8000b7a:	2101      	movs	r1, #1
 8000b7c:	4811      	ldr	r0, [pc, #68]	; (8000bc4 <main+0x8c>)
 8000b7e:	f7ff ff0a 	bl	8000996 <SPI_Peri_Control>



	SPI_SendData(SPI1, (uint8_t*)usrData, strlen(usrData));
 8000b82:	463b      	mov	r3, r7
 8000b84:	4618      	mov	r0, r3
 8000b86:	f7ff fb33 	bl	80001f0 <strlen>
 8000b8a:	4602      	mov	r2, r0
 8000b8c:	463b      	mov	r3, r7
 8000b8e:	4619      	mov	r1, r3
 8000b90:	480b      	ldr	r0, [pc, #44]	; (8000bc0 <main+0x88>)
 8000b92:	f7ff fec9 	bl	8000928 <SPI_SendData>

	while(SPI_GetFlagStatus(SPI1, SPI_SR_BSY));
 8000b96:	bf00      	nop
 8000b98:	2107      	movs	r1, #7
 8000b9a:	4809      	ldr	r0, [pc, #36]	; (8000bc0 <main+0x88>)
 8000b9c:	f7ff feb0 	bl	8000900 <SPI_GetFlagStatus>
 8000ba0:	4603      	mov	r3, r0
 8000ba2:	2b00      	cmp	r3, #0
 8000ba4:	d1f8      	bne.n	8000b98 <main+0x60>
	SPI_Peri_Control(SPI1, DISABLE);
 8000ba6:	2100      	movs	r1, #0
 8000ba8:	4805      	ldr	r0, [pc, #20]	; (8000bc0 <main+0x88>)
 8000baa:	f7ff fef4 	bl	8000996 <SPI_Peri_Control>


	while(1)
	{
		printf("Demo test");
 8000bae:	4803      	ldr	r0, [pc, #12]	; (8000bbc <main+0x84>)
 8000bb0:	f000 fc8a 	bl	80014c8 <iprintf>
 8000bb4:	e7fb      	b.n	8000bae <main+0x76>
 8000bb6:	bf00      	nop
 8000bb8:	080021e0 	.word	0x080021e0
 8000bbc:	080021d4 	.word	0x080021d4
 8000bc0:	40013000 	.word	0x40013000
 8000bc4:	40003800 	.word	0x40003800

08000bc8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000bc8:	480d      	ldr	r0, [pc, #52]	; (8000c00 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000bca:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000bcc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000bd0:	480c      	ldr	r0, [pc, #48]	; (8000c04 <LoopForever+0x6>)
  ldr r1, =_edata
 8000bd2:	490d      	ldr	r1, [pc, #52]	; (8000c08 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000bd4:	4a0d      	ldr	r2, [pc, #52]	; (8000c0c <LoopForever+0xe>)
  movs r3, #0
 8000bd6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000bd8:	e002      	b.n	8000be0 <LoopCopyDataInit>

08000bda <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000bda:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000bdc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000bde:	3304      	adds	r3, #4

08000be0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000be0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000be2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000be4:	d3f9      	bcc.n	8000bda <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000be6:	4a0a      	ldr	r2, [pc, #40]	; (8000c10 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000be8:	4c0a      	ldr	r4, [pc, #40]	; (8000c14 <LoopForever+0x16>)
  movs r3, #0
 8000bea:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000bec:	e001      	b.n	8000bf2 <LoopFillZerobss>

08000bee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000bee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000bf0:	3204      	adds	r2, #4

08000bf2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000bf2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000bf4:	d3fb      	bcc.n	8000bee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000bf6:	f000 fbdd 	bl	80013b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000bfa:	f7ff ff9d 	bl	8000b38 <main>

08000bfe <LoopForever>:

LoopForever:
    b LoopForever
 8000bfe:	e7fe      	b.n	8000bfe <LoopForever>
  ldr   r0, =_estack
 8000c00:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000c04:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000c08:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000c0c:	080022b4 	.word	0x080022b4
  ldr r2, =_sbss
 8000c10:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000c14:	20000154 	.word	0x20000154

08000c18 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000c18:	e7fe      	b.n	8000c18 <ADC_IRQHandler>
	...

08000c1c <findslot>:
 8000c1c:	4b0a      	ldr	r3, [pc, #40]	; (8000c48 <findslot+0x2c>)
 8000c1e:	b510      	push	{r4, lr}
 8000c20:	4604      	mov	r4, r0
 8000c22:	6818      	ldr	r0, [r3, #0]
 8000c24:	b118      	cbz	r0, 8000c2e <findslot+0x12>
 8000c26:	6983      	ldr	r3, [r0, #24]
 8000c28:	b90b      	cbnz	r3, 8000c2e <findslot+0x12>
 8000c2a:	f000 fb25 	bl	8001278 <__sinit>
 8000c2e:	2c13      	cmp	r4, #19
 8000c30:	d807      	bhi.n	8000c42 <findslot+0x26>
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <findslot+0x30>)
 8000c34:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000c38:	3201      	adds	r2, #1
 8000c3a:	d002      	beq.n	8000c42 <findslot+0x26>
 8000c3c:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8000c40:	bd10      	pop	{r4, pc}
 8000c42:	2000      	movs	r0, #0
 8000c44:	e7fc      	b.n	8000c40 <findslot+0x24>
 8000c46:	bf00      	nop
 8000c48:	2000000c 	.word	0x2000000c
 8000c4c:	2000009c 	.word	0x2000009c

08000c50 <checkerror>:
 8000c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c52:	1c43      	adds	r3, r0, #1
 8000c54:	4604      	mov	r4, r0
 8000c56:	d109      	bne.n	8000c6c <checkerror+0x1c>
 8000c58:	f000 fab0 	bl	80011bc <__errno>
 8000c5c:	2613      	movs	r6, #19
 8000c5e:	4605      	mov	r5, r0
 8000c60:	2700      	movs	r7, #0
 8000c62:	4630      	mov	r0, r6
 8000c64:	4639      	mov	r1, r7
 8000c66:	beab      	bkpt	0x00ab
 8000c68:	4606      	mov	r6, r0
 8000c6a:	602e      	str	r6, [r5, #0]
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000c70 <error>:
 8000c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c72:	4604      	mov	r4, r0
 8000c74:	f000 faa2 	bl	80011bc <__errno>
 8000c78:	2613      	movs	r6, #19
 8000c7a:	4605      	mov	r5, r0
 8000c7c:	2700      	movs	r7, #0
 8000c7e:	4630      	mov	r0, r6
 8000c80:	4639      	mov	r1, r7
 8000c82:	beab      	bkpt	0x00ab
 8000c84:	4606      	mov	r6, r0
 8000c86:	602e      	str	r6, [r5, #0]
 8000c88:	4620      	mov	r0, r4
 8000c8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000c8c <_swiread>:
 8000c8c:	b530      	push	{r4, r5, lr}
 8000c8e:	b085      	sub	sp, #20
 8000c90:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000c94:	9203      	str	r2, [sp, #12]
 8000c96:	2406      	movs	r4, #6
 8000c98:	ad01      	add	r5, sp, #4
 8000c9a:	4620      	mov	r0, r4
 8000c9c:	4629      	mov	r1, r5
 8000c9e:	beab      	bkpt	0x00ab
 8000ca0:	4604      	mov	r4, r0
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	f7ff ffd4 	bl	8000c50 <checkerror>
 8000ca8:	b005      	add	sp, #20
 8000caa:	bd30      	pop	{r4, r5, pc}

08000cac <_read>:
 8000cac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000cae:	4615      	mov	r5, r2
 8000cb0:	9101      	str	r1, [sp, #4]
 8000cb2:	f7ff ffb3 	bl	8000c1c <findslot>
 8000cb6:	9901      	ldr	r1, [sp, #4]
 8000cb8:	4604      	mov	r4, r0
 8000cba:	b938      	cbnz	r0, 8000ccc <_read+0x20>
 8000cbc:	f000 fa7e 	bl	80011bc <__errno>
 8000cc0:	2309      	movs	r3, #9
 8000cc2:	6003      	str	r3, [r0, #0]
 8000cc4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cc8:	b003      	add	sp, #12
 8000cca:	bd30      	pop	{r4, r5, pc}
 8000ccc:	6800      	ldr	r0, [r0, #0]
 8000cce:	462a      	mov	r2, r5
 8000cd0:	f7ff ffdc 	bl	8000c8c <_swiread>
 8000cd4:	1c43      	adds	r3, r0, #1
 8000cd6:	d0f7      	beq.n	8000cc8 <_read+0x1c>
 8000cd8:	6863      	ldr	r3, [r4, #4]
 8000cda:	1a2a      	subs	r2, r5, r0
 8000cdc:	4413      	add	r3, r2
 8000cde:	6063      	str	r3, [r4, #4]
 8000ce0:	4610      	mov	r0, r2
 8000ce2:	e7f1      	b.n	8000cc8 <_read+0x1c>

08000ce4 <_swilseek>:
 8000ce4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000ce6:	460c      	mov	r4, r1
 8000ce8:	4616      	mov	r6, r2
 8000cea:	f7ff ff97 	bl	8000c1c <findslot>
 8000cee:	4605      	mov	r5, r0
 8000cf0:	b940      	cbnz	r0, 8000d04 <_swilseek+0x20>
 8000cf2:	f000 fa63 	bl	80011bc <__errno>
 8000cf6:	2309      	movs	r3, #9
 8000cf8:	6003      	str	r3, [r0, #0]
 8000cfa:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000cfe:	4620      	mov	r0, r4
 8000d00:	b003      	add	sp, #12
 8000d02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d04:	2e02      	cmp	r6, #2
 8000d06:	d903      	bls.n	8000d10 <_swilseek+0x2c>
 8000d08:	f000 fa58 	bl	80011bc <__errno>
 8000d0c:	2316      	movs	r3, #22
 8000d0e:	e7f3      	b.n	8000cf8 <_swilseek+0x14>
 8000d10:	2e01      	cmp	r6, #1
 8000d12:	d112      	bne.n	8000d3a <_swilseek+0x56>
 8000d14:	6843      	ldr	r3, [r0, #4]
 8000d16:	18e4      	adds	r4, r4, r3
 8000d18:	d4f6      	bmi.n	8000d08 <_swilseek+0x24>
 8000d1a:	682b      	ldr	r3, [r5, #0]
 8000d1c:	260a      	movs	r6, #10
 8000d1e:	e9cd 3400 	strd	r3, r4, [sp]
 8000d22:	466f      	mov	r7, sp
 8000d24:	4630      	mov	r0, r6
 8000d26:	4639      	mov	r1, r7
 8000d28:	beab      	bkpt	0x00ab
 8000d2a:	4606      	mov	r6, r0
 8000d2c:	4630      	mov	r0, r6
 8000d2e:	f7ff ff8f 	bl	8000c50 <checkerror>
 8000d32:	2800      	cmp	r0, #0
 8000d34:	dbe1      	blt.n	8000cfa <_swilseek+0x16>
 8000d36:	606c      	str	r4, [r5, #4]
 8000d38:	e7e1      	b.n	8000cfe <_swilseek+0x1a>
 8000d3a:	2e02      	cmp	r6, #2
 8000d3c:	d1ed      	bne.n	8000d1a <_swilseek+0x36>
 8000d3e:	6803      	ldr	r3, [r0, #0]
 8000d40:	9300      	str	r3, [sp, #0]
 8000d42:	260c      	movs	r6, #12
 8000d44:	466f      	mov	r7, sp
 8000d46:	4630      	mov	r0, r6
 8000d48:	4639      	mov	r1, r7
 8000d4a:	beab      	bkpt	0x00ab
 8000d4c:	4606      	mov	r6, r0
 8000d4e:	4630      	mov	r0, r6
 8000d50:	f7ff ff7e 	bl	8000c50 <checkerror>
 8000d54:	1c43      	adds	r3, r0, #1
 8000d56:	d0d0      	beq.n	8000cfa <_swilseek+0x16>
 8000d58:	4404      	add	r4, r0
 8000d5a:	e7de      	b.n	8000d1a <_swilseek+0x36>

08000d5c <_lseek>:
 8000d5c:	f7ff bfc2 	b.w	8000ce4 <_swilseek>

08000d60 <_swiwrite>:
 8000d60:	b530      	push	{r4, r5, lr}
 8000d62:	b085      	sub	sp, #20
 8000d64:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000d68:	9203      	str	r2, [sp, #12]
 8000d6a:	2405      	movs	r4, #5
 8000d6c:	ad01      	add	r5, sp, #4
 8000d6e:	4620      	mov	r0, r4
 8000d70:	4629      	mov	r1, r5
 8000d72:	beab      	bkpt	0x00ab
 8000d74:	4604      	mov	r4, r0
 8000d76:	4620      	mov	r0, r4
 8000d78:	f7ff ff6a 	bl	8000c50 <checkerror>
 8000d7c:	b005      	add	sp, #20
 8000d7e:	bd30      	pop	{r4, r5, pc}

08000d80 <_write>:
 8000d80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000d82:	4615      	mov	r5, r2
 8000d84:	9101      	str	r1, [sp, #4]
 8000d86:	f7ff ff49 	bl	8000c1c <findslot>
 8000d8a:	9901      	ldr	r1, [sp, #4]
 8000d8c:	4604      	mov	r4, r0
 8000d8e:	b930      	cbnz	r0, 8000d9e <_write+0x1e>
 8000d90:	f000 fa14 	bl	80011bc <__errno>
 8000d94:	2309      	movs	r3, #9
 8000d96:	6003      	str	r3, [r0, #0]
 8000d98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d9c:	e012      	b.n	8000dc4 <_write+0x44>
 8000d9e:	6800      	ldr	r0, [r0, #0]
 8000da0:	462a      	mov	r2, r5
 8000da2:	f7ff ffdd 	bl	8000d60 <_swiwrite>
 8000da6:	2800      	cmp	r0, #0
 8000da8:	dbf6      	blt.n	8000d98 <_write+0x18>
 8000daa:	6862      	ldr	r2, [r4, #4]
 8000dac:	1a2b      	subs	r3, r5, r0
 8000dae:	441a      	add	r2, r3
 8000db0:	42a8      	cmp	r0, r5
 8000db2:	6062      	str	r2, [r4, #4]
 8000db4:	d105      	bne.n	8000dc2 <_write+0x42>
 8000db6:	2000      	movs	r0, #0
 8000db8:	b003      	add	sp, #12
 8000dba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000dbe:	f7ff bf57 	b.w	8000c70 <error>
 8000dc2:	4618      	mov	r0, r3
 8000dc4:	b003      	add	sp, #12
 8000dc6:	bd30      	pop	{r4, r5, pc}

08000dc8 <_swiclose>:
 8000dc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000dca:	2402      	movs	r4, #2
 8000dcc:	9001      	str	r0, [sp, #4]
 8000dce:	ad01      	add	r5, sp, #4
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	4629      	mov	r1, r5
 8000dd4:	beab      	bkpt	0x00ab
 8000dd6:	4604      	mov	r4, r0
 8000dd8:	4620      	mov	r0, r4
 8000dda:	f7ff ff39 	bl	8000c50 <checkerror>
 8000dde:	b003      	add	sp, #12
 8000de0:	bd30      	pop	{r4, r5, pc}
	...

08000de4 <_close>:
 8000de4:	b538      	push	{r3, r4, r5, lr}
 8000de6:	4605      	mov	r5, r0
 8000de8:	f7ff ff18 	bl	8000c1c <findslot>
 8000dec:	4604      	mov	r4, r0
 8000dee:	b930      	cbnz	r0, 8000dfe <_close+0x1a>
 8000df0:	f000 f9e4 	bl	80011bc <__errno>
 8000df4:	2309      	movs	r3, #9
 8000df6:	6003      	str	r3, [r0, #0]
 8000df8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dfc:	bd38      	pop	{r3, r4, r5, pc}
 8000dfe:	3d01      	subs	r5, #1
 8000e00:	2d01      	cmp	r5, #1
 8000e02:	d809      	bhi.n	8000e18 <_close+0x34>
 8000e04:	4b09      	ldr	r3, [pc, #36]	; (8000e2c <_close+0x48>)
 8000e06:	689a      	ldr	r2, [r3, #8]
 8000e08:	691b      	ldr	r3, [r3, #16]
 8000e0a:	429a      	cmp	r2, r3
 8000e0c:	d104      	bne.n	8000e18 <_close+0x34>
 8000e0e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000e12:	6003      	str	r3, [r0, #0]
 8000e14:	2000      	movs	r0, #0
 8000e16:	e7f1      	b.n	8000dfc <_close+0x18>
 8000e18:	6820      	ldr	r0, [r4, #0]
 8000e1a:	f7ff ffd5 	bl	8000dc8 <_swiclose>
 8000e1e:	2800      	cmp	r0, #0
 8000e20:	d1ec      	bne.n	8000dfc <_close+0x18>
 8000e22:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000e26:	6023      	str	r3, [r4, #0]
 8000e28:	e7e8      	b.n	8000dfc <_close+0x18>
 8000e2a:	bf00      	nop
 8000e2c:	2000009c 	.word	0x2000009c

08000e30 <_sbrk>:
 8000e30:	4a0d      	ldr	r2, [pc, #52]	; (8000e68 <_sbrk+0x38>)
 8000e32:	6811      	ldr	r1, [r2, #0]
 8000e34:	b510      	push	{r4, lr}
 8000e36:	4603      	mov	r3, r0
 8000e38:	b909      	cbnz	r1, 8000e3e <_sbrk+0xe>
 8000e3a:	490c      	ldr	r1, [pc, #48]	; (8000e6c <_sbrk+0x3c>)
 8000e3c:	6011      	str	r1, [r2, #0]
 8000e3e:	6810      	ldr	r0, [r2, #0]
 8000e40:	4669      	mov	r1, sp
 8000e42:	4403      	add	r3, r0
 8000e44:	428b      	cmp	r3, r1
 8000e46:	d806      	bhi.n	8000e56 <_sbrk+0x26>
 8000e48:	4909      	ldr	r1, [pc, #36]	; (8000e70 <_sbrk+0x40>)
 8000e4a:	4c0a      	ldr	r4, [pc, #40]	; (8000e74 <_sbrk+0x44>)
 8000e4c:	6809      	ldr	r1, [r1, #0]
 8000e4e:	42a1      	cmp	r1, r4
 8000e50:	d008      	beq.n	8000e64 <_sbrk+0x34>
 8000e52:	428b      	cmp	r3, r1
 8000e54:	d906      	bls.n	8000e64 <_sbrk+0x34>
 8000e56:	f000 f9b1 	bl	80011bc <__errno>
 8000e5a:	230c      	movs	r3, #12
 8000e5c:	6003      	str	r3, [r0, #0]
 8000e5e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e62:	bd10      	pop	{r4, pc}
 8000e64:	6013      	str	r3, [r2, #0]
 8000e66:	e7fc      	b.n	8000e62 <_sbrk+0x32>
 8000e68:	2000008c 	.word	0x2000008c
 8000e6c:	20000158 	.word	0x20000158
 8000e70:	20000000 	.word	0x20000000
 8000e74:	cafedead 	.word	0xcafedead

08000e78 <_swistat>:
 8000e78:	b570      	push	{r4, r5, r6, lr}
 8000e7a:	460c      	mov	r4, r1
 8000e7c:	f7ff fece 	bl	8000c1c <findslot>
 8000e80:	4605      	mov	r5, r0
 8000e82:	b930      	cbnz	r0, 8000e92 <_swistat+0x1a>
 8000e84:	f000 f99a 	bl	80011bc <__errno>
 8000e88:	2309      	movs	r3, #9
 8000e8a:	6003      	str	r3, [r0, #0]
 8000e8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e90:	bd70      	pop	{r4, r5, r6, pc}
 8000e92:	6863      	ldr	r3, [r4, #4]
 8000e94:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000e98:	6063      	str	r3, [r4, #4]
 8000e9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e9e:	64a3      	str	r3, [r4, #72]	; 0x48
 8000ea0:	260c      	movs	r6, #12
 8000ea2:	4630      	mov	r0, r6
 8000ea4:	4629      	mov	r1, r5
 8000ea6:	beab      	bkpt	0x00ab
 8000ea8:	4605      	mov	r5, r0
 8000eaa:	4628      	mov	r0, r5
 8000eac:	f7ff fed0 	bl	8000c50 <checkerror>
 8000eb0:	1c43      	adds	r3, r0, #1
 8000eb2:	bf1c      	itt	ne
 8000eb4:	6120      	strne	r0, [r4, #16]
 8000eb6:	2000      	movne	r0, #0
 8000eb8:	e7ea      	b.n	8000e90 <_swistat+0x18>

08000eba <_fstat>:
 8000eba:	460b      	mov	r3, r1
 8000ebc:	b510      	push	{r4, lr}
 8000ebe:	2100      	movs	r1, #0
 8000ec0:	4604      	mov	r4, r0
 8000ec2:	2258      	movs	r2, #88	; 0x58
 8000ec4:	4618      	mov	r0, r3
 8000ec6:	f000 fa9c 	bl	8001402 <memset>
 8000eca:	4601      	mov	r1, r0
 8000ecc:	4620      	mov	r0, r4
 8000ece:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ed2:	f7ff bfd1 	b.w	8000e78 <_swistat>

08000ed6 <_stat>:
 8000ed6:	b538      	push	{r3, r4, r5, lr}
 8000ed8:	460d      	mov	r5, r1
 8000eda:	4604      	mov	r4, r0
 8000edc:	2258      	movs	r2, #88	; 0x58
 8000ede:	2100      	movs	r1, #0
 8000ee0:	4628      	mov	r0, r5
 8000ee2:	f000 fa8e 	bl	8001402 <memset>
 8000ee6:	4620      	mov	r0, r4
 8000ee8:	2100      	movs	r1, #0
 8000eea:	f000 f811 	bl	8000f10 <_swiopen>
 8000eee:	1c43      	adds	r3, r0, #1
 8000ef0:	4604      	mov	r4, r0
 8000ef2:	d00b      	beq.n	8000f0c <_stat+0x36>
 8000ef4:	686b      	ldr	r3, [r5, #4]
 8000ef6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8000efa:	606b      	str	r3, [r5, #4]
 8000efc:	4629      	mov	r1, r5
 8000efe:	f7ff ffbb 	bl	8000e78 <_swistat>
 8000f02:	4605      	mov	r5, r0
 8000f04:	4620      	mov	r0, r4
 8000f06:	f7ff ff6d 	bl	8000de4 <_close>
 8000f0a:	462c      	mov	r4, r5
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	bd38      	pop	{r3, r4, r5, pc}

08000f10 <_swiopen>:
 8000f10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000f14:	4b2a      	ldr	r3, [pc, #168]	; (8000fc0 <_swiopen+0xb0>)
 8000f16:	b097      	sub	sp, #92	; 0x5c
 8000f18:	4681      	mov	r9, r0
 8000f1a:	460f      	mov	r7, r1
 8000f1c:	2500      	movs	r5, #0
 8000f1e:	461e      	mov	r6, r3
 8000f20:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8000f24:	1c61      	adds	r1, r4, #1
 8000f26:	d037      	beq.n	8000f98 <_swiopen+0x88>
 8000f28:	3501      	adds	r5, #1
 8000f2a:	2d14      	cmp	r5, #20
 8000f2c:	d1f8      	bne.n	8000f20 <_swiopen+0x10>
 8000f2e:	f000 f945 	bl	80011bc <__errno>
 8000f32:	2318      	movs	r3, #24
 8000f34:	6003      	str	r3, [r0, #0]
 8000f36:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000f3a:	e03d      	b.n	8000fb8 <_swiopen+0xa8>
 8000f3c:	f3c7 4400 	ubfx	r4, r7, #16, #1
 8000f40:	f240 6301 	movw	r3, #1537	; 0x601
 8000f44:	07ba      	lsls	r2, r7, #30
 8000f46:	bf48      	it	mi
 8000f48:	f044 0402 	orrmi.w	r4, r4, #2
 8000f4c:	421f      	tst	r7, r3
 8000f4e:	bf18      	it	ne
 8000f50:	f044 0404 	orrne.w	r4, r4, #4
 8000f54:	073b      	lsls	r3, r7, #28
 8000f56:	bf48      	it	mi
 8000f58:	f024 0404 	bicmi.w	r4, r4, #4
 8000f5c:	4648      	mov	r0, r9
 8000f5e:	bf48      	it	mi
 8000f60:	f044 0408 	orrmi.w	r4, r4, #8
 8000f64:	f8cd 9000 	str.w	r9, [sp]
 8000f68:	f7ff f942 	bl	80001f0 <strlen>
 8000f6c:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8000f70:	2401      	movs	r4, #1
 8000f72:	4620      	mov	r0, r4
 8000f74:	4641      	mov	r1, r8
 8000f76:	beab      	bkpt	0x00ab
 8000f78:	4604      	mov	r4, r0
 8000f7a:	2c00      	cmp	r4, #0
 8000f7c:	db07      	blt.n	8000f8e <_swiopen+0x7e>
 8000f7e:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8000f82:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8000f86:	2300      	movs	r3, #0
 8000f88:	6073      	str	r3, [r6, #4]
 8000f8a:	462c      	mov	r4, r5
 8000f8c:	e014      	b.n	8000fb8 <_swiopen+0xa8>
 8000f8e:	4620      	mov	r0, r4
 8000f90:	f7ff fe6e 	bl	8000c70 <error>
 8000f94:	4604      	mov	r4, r0
 8000f96:	e00f      	b.n	8000fb8 <_swiopen+0xa8>
 8000f98:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 8000f9c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8000fa0:	46e8      	mov	r8, sp
 8000fa2:	d1cb      	bne.n	8000f3c <_swiopen+0x2c>
 8000fa4:	4641      	mov	r1, r8
 8000fa6:	4648      	mov	r0, r9
 8000fa8:	f7ff ff95 	bl	8000ed6 <_stat>
 8000fac:	3001      	adds	r0, #1
 8000fae:	d0c5      	beq.n	8000f3c <_swiopen+0x2c>
 8000fb0:	f000 f904 	bl	80011bc <__errno>
 8000fb4:	2311      	movs	r3, #17
 8000fb6:	6003      	str	r3, [r0, #0]
 8000fb8:	4620      	mov	r0, r4
 8000fba:	b017      	add	sp, #92	; 0x5c
 8000fbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000fc0:	2000009c 	.word	0x2000009c

08000fc4 <_get_semihosting_exts>:
 8000fc4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8000fc8:	4606      	mov	r6, r0
 8000fca:	460f      	mov	r7, r1
 8000fcc:	482a      	ldr	r0, [pc, #168]	; (8001078 <_get_semihosting_exts+0xb4>)
 8000fce:	2100      	movs	r1, #0
 8000fd0:	4615      	mov	r5, r2
 8000fd2:	f7ff ff9d 	bl	8000f10 <_swiopen>
 8000fd6:	462a      	mov	r2, r5
 8000fd8:	4604      	mov	r4, r0
 8000fda:	2100      	movs	r1, #0
 8000fdc:	4630      	mov	r0, r6
 8000fde:	f000 fa10 	bl	8001402 <memset>
 8000fe2:	1c63      	adds	r3, r4, #1
 8000fe4:	d016      	beq.n	8001014 <_get_semihosting_exts+0x50>
 8000fe6:	4620      	mov	r0, r4
 8000fe8:	f7ff fe18 	bl	8000c1c <findslot>
 8000fec:	f04f 090c 	mov.w	r9, #12
 8000ff0:	4680      	mov	r8, r0
 8000ff2:	4648      	mov	r0, r9
 8000ff4:	4641      	mov	r1, r8
 8000ff6:	beab      	bkpt	0x00ab
 8000ff8:	4680      	mov	r8, r0
 8000ffa:	4640      	mov	r0, r8
 8000ffc:	f7ff fe28 	bl	8000c50 <checkerror>
 8001000:	2803      	cmp	r0, #3
 8001002:	dd02      	ble.n	800100a <_get_semihosting_exts+0x46>
 8001004:	1ec3      	subs	r3, r0, #3
 8001006:	42ab      	cmp	r3, r5
 8001008:	dc08      	bgt.n	800101c <_get_semihosting_exts+0x58>
 800100a:	4620      	mov	r0, r4
 800100c:	f7ff feea 	bl	8000de4 <_close>
 8001010:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001014:	4620      	mov	r0, r4
 8001016:	b003      	add	sp, #12
 8001018:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800101c:	2204      	movs	r2, #4
 800101e:	eb0d 0102 	add.w	r1, sp, r2
 8001022:	4620      	mov	r0, r4
 8001024:	f7ff fe42 	bl	8000cac <_read>
 8001028:	2803      	cmp	r0, #3
 800102a:	ddee      	ble.n	800100a <_get_semihosting_exts+0x46>
 800102c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001030:	2b53      	cmp	r3, #83	; 0x53
 8001032:	d1ea      	bne.n	800100a <_get_semihosting_exts+0x46>
 8001034:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001038:	2b48      	cmp	r3, #72	; 0x48
 800103a:	d1e6      	bne.n	800100a <_get_semihosting_exts+0x46>
 800103c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001040:	2b46      	cmp	r3, #70	; 0x46
 8001042:	d1e2      	bne.n	800100a <_get_semihosting_exts+0x46>
 8001044:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001048:	2b42      	cmp	r3, #66	; 0x42
 800104a:	d1de      	bne.n	800100a <_get_semihosting_exts+0x46>
 800104c:	2201      	movs	r2, #1
 800104e:	4639      	mov	r1, r7
 8001050:	4620      	mov	r0, r4
 8001052:	f7ff fe47 	bl	8000ce4 <_swilseek>
 8001056:	2800      	cmp	r0, #0
 8001058:	dbd7      	blt.n	800100a <_get_semihosting_exts+0x46>
 800105a:	462a      	mov	r2, r5
 800105c:	4631      	mov	r1, r6
 800105e:	4620      	mov	r0, r4
 8001060:	f7ff fe24 	bl	8000cac <_read>
 8001064:	4605      	mov	r5, r0
 8001066:	4620      	mov	r0, r4
 8001068:	f7ff febc 	bl	8000de4 <_close>
 800106c:	4628      	mov	r0, r5
 800106e:	f7ff fdef 	bl	8000c50 <checkerror>
 8001072:	4604      	mov	r4, r0
 8001074:	e7ce      	b.n	8001014 <_get_semihosting_exts+0x50>
 8001076:	bf00      	nop
 8001078:	080021f8 	.word	0x080021f8

0800107c <initialise_semihosting_exts>:
 800107c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800107e:	4d0a      	ldr	r5, [pc, #40]	; (80010a8 <initialise_semihosting_exts+0x2c>)
 8001080:	4c0a      	ldr	r4, [pc, #40]	; (80010ac <initialise_semihosting_exts+0x30>)
 8001082:	2100      	movs	r1, #0
 8001084:	2201      	movs	r2, #1
 8001086:	a801      	add	r0, sp, #4
 8001088:	6029      	str	r1, [r5, #0]
 800108a:	6022      	str	r2, [r4, #0]
 800108c:	f7ff ff9a 	bl	8000fc4 <_get_semihosting_exts>
 8001090:	2800      	cmp	r0, #0
 8001092:	dd07      	ble.n	80010a4 <initialise_semihosting_exts+0x28>
 8001094:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001098:	f003 0201 	and.w	r2, r3, #1
 800109c:	f003 0302 	and.w	r3, r3, #2
 80010a0:	602a      	str	r2, [r5, #0]
 80010a2:	6023      	str	r3, [r4, #0]
 80010a4:	b003      	add	sp, #12
 80010a6:	bd30      	pop	{r4, r5, pc}
 80010a8:	20000004 	.word	0x20000004
 80010ac:	20000008 	.word	0x20000008

080010b0 <_has_ext_stdout_stderr>:
 80010b0:	b510      	push	{r4, lr}
 80010b2:	4c04      	ldr	r4, [pc, #16]	; (80010c4 <_has_ext_stdout_stderr+0x14>)
 80010b4:	6822      	ldr	r2, [r4, #0]
 80010b6:	2a00      	cmp	r2, #0
 80010b8:	da01      	bge.n	80010be <_has_ext_stdout_stderr+0xe>
 80010ba:	f7ff ffdf 	bl	800107c <initialise_semihosting_exts>
 80010be:	6820      	ldr	r0, [r4, #0]
 80010c0:	bd10      	pop	{r4, pc}
 80010c2:	bf00      	nop
 80010c4:	20000008 	.word	0x20000008

080010c8 <initialise_monitor_handles>:
 80010c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010cc:	b085      	sub	sp, #20
 80010ce:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001180 <initialise_monitor_handles+0xb8>
 80010d2:	f8cd 9004 	str.w	r9, [sp, #4]
 80010d6:	2303      	movs	r3, #3
 80010d8:	2400      	movs	r4, #0
 80010da:	9303      	str	r3, [sp, #12]
 80010dc:	f10d 0804 	add.w	r8, sp, #4
 80010e0:	9402      	str	r4, [sp, #8]
 80010e2:	2501      	movs	r5, #1
 80010e4:	4628      	mov	r0, r5
 80010e6:	4641      	mov	r1, r8
 80010e8:	beab      	bkpt	0x00ab
 80010ea:	4605      	mov	r5, r0
 80010ec:	4e20      	ldr	r6, [pc, #128]	; (8001170 <initialise_monitor_handles+0xa8>)
 80010ee:	4a21      	ldr	r2, [pc, #132]	; (8001174 <initialise_monitor_handles+0xac>)
 80010f0:	6035      	str	r5, [r6, #0]
 80010f2:	4623      	mov	r3, r4
 80010f4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80010f8:	4614      	mov	r4, r2
 80010fa:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 80010fe:	3301      	adds	r3, #1
 8001100:	2b14      	cmp	r3, #20
 8001102:	d1fa      	bne.n	80010fa <initialise_monitor_handles+0x32>
 8001104:	f7ff ffd4 	bl	80010b0 <_has_ext_stdout_stderr>
 8001108:	4d1b      	ldr	r5, [pc, #108]	; (8001178 <initialise_monitor_handles+0xb0>)
 800110a:	b1d0      	cbz	r0, 8001142 <initialise_monitor_handles+0x7a>
 800110c:	f04f 0a03 	mov.w	sl, #3
 8001110:	2304      	movs	r3, #4
 8001112:	f8cd 9004 	str.w	r9, [sp, #4]
 8001116:	2701      	movs	r7, #1
 8001118:	f8cd a00c 	str.w	sl, [sp, #12]
 800111c:	9302      	str	r3, [sp, #8]
 800111e:	4638      	mov	r0, r7
 8001120:	4641      	mov	r1, r8
 8001122:	beab      	bkpt	0x00ab
 8001124:	4683      	mov	fp, r0
 8001126:	4b15      	ldr	r3, [pc, #84]	; (800117c <initialise_monitor_handles+0xb4>)
 8001128:	f8cd 9004 	str.w	r9, [sp, #4]
 800112c:	f8c3 b000 	str.w	fp, [r3]
 8001130:	2308      	movs	r3, #8
 8001132:	f8cd a00c 	str.w	sl, [sp, #12]
 8001136:	9302      	str	r3, [sp, #8]
 8001138:	4638      	mov	r0, r7
 800113a:	4641      	mov	r1, r8
 800113c:	beab      	bkpt	0x00ab
 800113e:	4607      	mov	r7, r0
 8001140:	602f      	str	r7, [r5, #0]
 8001142:	682b      	ldr	r3, [r5, #0]
 8001144:	3301      	adds	r3, #1
 8001146:	bf02      	ittt	eq
 8001148:	4b0c      	ldreq	r3, [pc, #48]	; (800117c <initialise_monitor_handles+0xb4>)
 800114a:	681b      	ldreq	r3, [r3, #0]
 800114c:	602b      	streq	r3, [r5, #0]
 800114e:	6833      	ldr	r3, [r6, #0]
 8001150:	6023      	str	r3, [r4, #0]
 8001152:	2600      	movs	r6, #0
 8001154:	6066      	str	r6, [r4, #4]
 8001156:	f7ff ffab 	bl	80010b0 <_has_ext_stdout_stderr>
 800115a:	b130      	cbz	r0, 800116a <initialise_monitor_handles+0xa2>
 800115c:	4b07      	ldr	r3, [pc, #28]	; (800117c <initialise_monitor_handles+0xb4>)
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001164:	682b      	ldr	r3, [r5, #0]
 8001166:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800116a:	b005      	add	sp, #20
 800116c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001170:	20000094 	.word	0x20000094
 8001174:	2000009c 	.word	0x2000009c
 8001178:	20000090 	.word	0x20000090
 800117c:	20000098 	.word	0x20000098
 8001180:	0800220e 	.word	0x0800220e

08001184 <_isatty>:
 8001184:	b570      	push	{r4, r5, r6, lr}
 8001186:	f7ff fd49 	bl	8000c1c <findslot>
 800118a:	2509      	movs	r5, #9
 800118c:	4604      	mov	r4, r0
 800118e:	b920      	cbnz	r0, 800119a <_isatty+0x16>
 8001190:	f000 f814 	bl	80011bc <__errno>
 8001194:	6005      	str	r5, [r0, #0]
 8001196:	4620      	mov	r0, r4
 8001198:	bd70      	pop	{r4, r5, r6, pc}
 800119a:	4628      	mov	r0, r5
 800119c:	4621      	mov	r1, r4
 800119e:	beab      	bkpt	0x00ab
 80011a0:	4604      	mov	r4, r0
 80011a2:	2c01      	cmp	r4, #1
 80011a4:	d0f7      	beq.n	8001196 <_isatty+0x12>
 80011a6:	f000 f809 	bl	80011bc <__errno>
 80011aa:	2400      	movs	r4, #0
 80011ac:	4605      	mov	r5, r0
 80011ae:	2613      	movs	r6, #19
 80011b0:	4630      	mov	r0, r6
 80011b2:	4621      	mov	r1, r4
 80011b4:	beab      	bkpt	0x00ab
 80011b6:	4606      	mov	r6, r0
 80011b8:	602e      	str	r6, [r5, #0]
 80011ba:	e7ec      	b.n	8001196 <_isatty+0x12>

080011bc <__errno>:
 80011bc:	4b01      	ldr	r3, [pc, #4]	; (80011c4 <__errno+0x8>)
 80011be:	6818      	ldr	r0, [r3, #0]
 80011c0:	4770      	bx	lr
 80011c2:	bf00      	nop
 80011c4:	2000000c 	.word	0x2000000c

080011c8 <std>:
 80011c8:	2300      	movs	r3, #0
 80011ca:	b510      	push	{r4, lr}
 80011cc:	4604      	mov	r4, r0
 80011ce:	e9c0 3300 	strd	r3, r3, [r0]
 80011d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80011d6:	6083      	str	r3, [r0, #8]
 80011d8:	8181      	strh	r1, [r0, #12]
 80011da:	6643      	str	r3, [r0, #100]	; 0x64
 80011dc:	81c2      	strh	r2, [r0, #14]
 80011de:	6183      	str	r3, [r0, #24]
 80011e0:	4619      	mov	r1, r3
 80011e2:	2208      	movs	r2, #8
 80011e4:	305c      	adds	r0, #92	; 0x5c
 80011e6:	f000 f90c 	bl	8001402 <memset>
 80011ea:	4b05      	ldr	r3, [pc, #20]	; (8001200 <std+0x38>)
 80011ec:	6263      	str	r3, [r4, #36]	; 0x24
 80011ee:	4b05      	ldr	r3, [pc, #20]	; (8001204 <std+0x3c>)
 80011f0:	62a3      	str	r3, [r4, #40]	; 0x28
 80011f2:	4b05      	ldr	r3, [pc, #20]	; (8001208 <std+0x40>)
 80011f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80011f6:	4b05      	ldr	r3, [pc, #20]	; (800120c <std+0x44>)
 80011f8:	6224      	str	r4, [r4, #32]
 80011fa:	6323      	str	r3, [r4, #48]	; 0x30
 80011fc:	bd10      	pop	{r4, pc}
 80011fe:	bf00      	nop
 8001200:	08001605 	.word	0x08001605
 8001204:	08001627 	.word	0x08001627
 8001208:	0800165f 	.word	0x0800165f
 800120c:	08001683 	.word	0x08001683

08001210 <_cleanup_r>:
 8001210:	4901      	ldr	r1, [pc, #4]	; (8001218 <_cleanup_r+0x8>)
 8001212:	f000 b8af 	b.w	8001374 <_fwalk_reent>
 8001216:	bf00      	nop
 8001218:	0800195d 	.word	0x0800195d

0800121c <__sfmoreglue>:
 800121c:	b570      	push	{r4, r5, r6, lr}
 800121e:	1e4a      	subs	r2, r1, #1
 8001220:	2568      	movs	r5, #104	; 0x68
 8001222:	4355      	muls	r5, r2
 8001224:	460e      	mov	r6, r1
 8001226:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800122a:	f000 f8f3 	bl	8001414 <_malloc_r>
 800122e:	4604      	mov	r4, r0
 8001230:	b140      	cbz	r0, 8001244 <__sfmoreglue+0x28>
 8001232:	2100      	movs	r1, #0
 8001234:	e9c0 1600 	strd	r1, r6, [r0]
 8001238:	300c      	adds	r0, #12
 800123a:	60a0      	str	r0, [r4, #8]
 800123c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001240:	f000 f8df 	bl	8001402 <memset>
 8001244:	4620      	mov	r0, r4
 8001246:	bd70      	pop	{r4, r5, r6, pc}

08001248 <__sfp_lock_acquire>:
 8001248:	4801      	ldr	r0, [pc, #4]	; (8001250 <__sfp_lock_acquire+0x8>)
 800124a:	f000 b8d8 	b.w	80013fe <__retarget_lock_acquire_recursive>
 800124e:	bf00      	nop
 8001250:	2000014c 	.word	0x2000014c

08001254 <__sfp_lock_release>:
 8001254:	4801      	ldr	r0, [pc, #4]	; (800125c <__sfp_lock_release+0x8>)
 8001256:	f000 b8d3 	b.w	8001400 <__retarget_lock_release_recursive>
 800125a:	bf00      	nop
 800125c:	2000014c 	.word	0x2000014c

08001260 <__sinit_lock_acquire>:
 8001260:	4801      	ldr	r0, [pc, #4]	; (8001268 <__sinit_lock_acquire+0x8>)
 8001262:	f000 b8cc 	b.w	80013fe <__retarget_lock_acquire_recursive>
 8001266:	bf00      	nop
 8001268:	20000147 	.word	0x20000147

0800126c <__sinit_lock_release>:
 800126c:	4801      	ldr	r0, [pc, #4]	; (8001274 <__sinit_lock_release+0x8>)
 800126e:	f000 b8c7 	b.w	8001400 <__retarget_lock_release_recursive>
 8001272:	bf00      	nop
 8001274:	20000147 	.word	0x20000147

08001278 <__sinit>:
 8001278:	b510      	push	{r4, lr}
 800127a:	4604      	mov	r4, r0
 800127c:	f7ff fff0 	bl	8001260 <__sinit_lock_acquire>
 8001280:	69a3      	ldr	r3, [r4, #24]
 8001282:	b11b      	cbz	r3, 800128c <__sinit+0x14>
 8001284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001288:	f7ff bff0 	b.w	800126c <__sinit_lock_release>
 800128c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001290:	6523      	str	r3, [r4, #80]	; 0x50
 8001292:	4b13      	ldr	r3, [pc, #76]	; (80012e0 <__sinit+0x68>)
 8001294:	4a13      	ldr	r2, [pc, #76]	; (80012e4 <__sinit+0x6c>)
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	62a2      	str	r2, [r4, #40]	; 0x28
 800129a:	42a3      	cmp	r3, r4
 800129c:	bf04      	itt	eq
 800129e:	2301      	moveq	r3, #1
 80012a0:	61a3      	streq	r3, [r4, #24]
 80012a2:	4620      	mov	r0, r4
 80012a4:	f000 f820 	bl	80012e8 <__sfp>
 80012a8:	6060      	str	r0, [r4, #4]
 80012aa:	4620      	mov	r0, r4
 80012ac:	f000 f81c 	bl	80012e8 <__sfp>
 80012b0:	60a0      	str	r0, [r4, #8]
 80012b2:	4620      	mov	r0, r4
 80012b4:	f000 f818 	bl	80012e8 <__sfp>
 80012b8:	2200      	movs	r2, #0
 80012ba:	60e0      	str	r0, [r4, #12]
 80012bc:	2104      	movs	r1, #4
 80012be:	6860      	ldr	r0, [r4, #4]
 80012c0:	f7ff ff82 	bl	80011c8 <std>
 80012c4:	68a0      	ldr	r0, [r4, #8]
 80012c6:	2201      	movs	r2, #1
 80012c8:	2109      	movs	r1, #9
 80012ca:	f7ff ff7d 	bl	80011c8 <std>
 80012ce:	68e0      	ldr	r0, [r4, #12]
 80012d0:	2202      	movs	r2, #2
 80012d2:	2112      	movs	r1, #18
 80012d4:	f7ff ff78 	bl	80011c8 <std>
 80012d8:	2301      	movs	r3, #1
 80012da:	61a3      	str	r3, [r4, #24]
 80012dc:	e7d2      	b.n	8001284 <__sinit+0xc>
 80012de:	bf00      	nop
 80012e0:	08002274 	.word	0x08002274
 80012e4:	08001211 	.word	0x08001211

080012e8 <__sfp>:
 80012e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ea:	4607      	mov	r7, r0
 80012ec:	f7ff ffac 	bl	8001248 <__sfp_lock_acquire>
 80012f0:	4b1e      	ldr	r3, [pc, #120]	; (800136c <__sfp+0x84>)
 80012f2:	681e      	ldr	r6, [r3, #0]
 80012f4:	69b3      	ldr	r3, [r6, #24]
 80012f6:	b913      	cbnz	r3, 80012fe <__sfp+0x16>
 80012f8:	4630      	mov	r0, r6
 80012fa:	f7ff ffbd 	bl	8001278 <__sinit>
 80012fe:	3648      	adds	r6, #72	; 0x48
 8001300:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001304:	3b01      	subs	r3, #1
 8001306:	d503      	bpl.n	8001310 <__sfp+0x28>
 8001308:	6833      	ldr	r3, [r6, #0]
 800130a:	b30b      	cbz	r3, 8001350 <__sfp+0x68>
 800130c:	6836      	ldr	r6, [r6, #0]
 800130e:	e7f7      	b.n	8001300 <__sfp+0x18>
 8001310:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001314:	b9d5      	cbnz	r5, 800134c <__sfp+0x64>
 8001316:	4b16      	ldr	r3, [pc, #88]	; (8001370 <__sfp+0x88>)
 8001318:	60e3      	str	r3, [r4, #12]
 800131a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800131e:	6665      	str	r5, [r4, #100]	; 0x64
 8001320:	f000 f86c 	bl	80013fc <__retarget_lock_init_recursive>
 8001324:	f7ff ff96 	bl	8001254 <__sfp_lock_release>
 8001328:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800132c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001330:	6025      	str	r5, [r4, #0]
 8001332:	61a5      	str	r5, [r4, #24]
 8001334:	2208      	movs	r2, #8
 8001336:	4629      	mov	r1, r5
 8001338:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800133c:	f000 f861 	bl	8001402 <memset>
 8001340:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001344:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001348:	4620      	mov	r0, r4
 800134a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800134c:	3468      	adds	r4, #104	; 0x68
 800134e:	e7d9      	b.n	8001304 <__sfp+0x1c>
 8001350:	2104      	movs	r1, #4
 8001352:	4638      	mov	r0, r7
 8001354:	f7ff ff62 	bl	800121c <__sfmoreglue>
 8001358:	4604      	mov	r4, r0
 800135a:	6030      	str	r0, [r6, #0]
 800135c:	2800      	cmp	r0, #0
 800135e:	d1d5      	bne.n	800130c <__sfp+0x24>
 8001360:	f7ff ff78 	bl	8001254 <__sfp_lock_release>
 8001364:	230c      	movs	r3, #12
 8001366:	603b      	str	r3, [r7, #0]
 8001368:	e7ee      	b.n	8001348 <__sfp+0x60>
 800136a:	bf00      	nop
 800136c:	08002274 	.word	0x08002274
 8001370:	ffff0001 	.word	0xffff0001

08001374 <_fwalk_reent>:
 8001374:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001378:	4606      	mov	r6, r0
 800137a:	4688      	mov	r8, r1
 800137c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001380:	2700      	movs	r7, #0
 8001382:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001386:	f1b9 0901 	subs.w	r9, r9, #1
 800138a:	d505      	bpl.n	8001398 <_fwalk_reent+0x24>
 800138c:	6824      	ldr	r4, [r4, #0]
 800138e:	2c00      	cmp	r4, #0
 8001390:	d1f7      	bne.n	8001382 <_fwalk_reent+0xe>
 8001392:	4638      	mov	r0, r7
 8001394:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001398:	89ab      	ldrh	r3, [r5, #12]
 800139a:	2b01      	cmp	r3, #1
 800139c:	d907      	bls.n	80013ae <_fwalk_reent+0x3a>
 800139e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80013a2:	3301      	adds	r3, #1
 80013a4:	d003      	beq.n	80013ae <_fwalk_reent+0x3a>
 80013a6:	4629      	mov	r1, r5
 80013a8:	4630      	mov	r0, r6
 80013aa:	47c0      	blx	r8
 80013ac:	4307      	orrs	r7, r0
 80013ae:	3568      	adds	r5, #104	; 0x68
 80013b0:	e7e9      	b.n	8001386 <_fwalk_reent+0x12>
	...

080013b4 <__libc_init_array>:
 80013b4:	b570      	push	{r4, r5, r6, lr}
 80013b6:	4d0d      	ldr	r5, [pc, #52]	; (80013ec <__libc_init_array+0x38>)
 80013b8:	4c0d      	ldr	r4, [pc, #52]	; (80013f0 <__libc_init_array+0x3c>)
 80013ba:	1b64      	subs	r4, r4, r5
 80013bc:	10a4      	asrs	r4, r4, #2
 80013be:	2600      	movs	r6, #0
 80013c0:	42a6      	cmp	r6, r4
 80013c2:	d109      	bne.n	80013d8 <__libc_init_array+0x24>
 80013c4:	4d0b      	ldr	r5, [pc, #44]	; (80013f4 <__libc_init_array+0x40>)
 80013c6:	4c0c      	ldr	r4, [pc, #48]	; (80013f8 <__libc_init_array+0x44>)
 80013c8:	f000 fef8 	bl	80021bc <_init>
 80013cc:	1b64      	subs	r4, r4, r5
 80013ce:	10a4      	asrs	r4, r4, #2
 80013d0:	2600      	movs	r6, #0
 80013d2:	42a6      	cmp	r6, r4
 80013d4:	d105      	bne.n	80013e2 <__libc_init_array+0x2e>
 80013d6:	bd70      	pop	{r4, r5, r6, pc}
 80013d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80013dc:	4798      	blx	r3
 80013de:	3601      	adds	r6, #1
 80013e0:	e7ee      	b.n	80013c0 <__libc_init_array+0xc>
 80013e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80013e6:	4798      	blx	r3
 80013e8:	3601      	adds	r6, #1
 80013ea:	e7f2      	b.n	80013d2 <__libc_init_array+0x1e>
 80013ec:	080022ac 	.word	0x080022ac
 80013f0:	080022ac 	.word	0x080022ac
 80013f4:	080022ac 	.word	0x080022ac
 80013f8:	080022b0 	.word	0x080022b0

080013fc <__retarget_lock_init_recursive>:
 80013fc:	4770      	bx	lr

080013fe <__retarget_lock_acquire_recursive>:
 80013fe:	4770      	bx	lr

08001400 <__retarget_lock_release_recursive>:
 8001400:	4770      	bx	lr

08001402 <memset>:
 8001402:	4402      	add	r2, r0
 8001404:	4603      	mov	r3, r0
 8001406:	4293      	cmp	r3, r2
 8001408:	d100      	bne.n	800140c <memset+0xa>
 800140a:	4770      	bx	lr
 800140c:	f803 1b01 	strb.w	r1, [r3], #1
 8001410:	e7f9      	b.n	8001406 <memset+0x4>
	...

08001414 <_malloc_r>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	1ccd      	adds	r5, r1, #3
 8001418:	f025 0503 	bic.w	r5, r5, #3
 800141c:	3508      	adds	r5, #8
 800141e:	2d0c      	cmp	r5, #12
 8001420:	bf38      	it	cc
 8001422:	250c      	movcc	r5, #12
 8001424:	2d00      	cmp	r5, #0
 8001426:	4606      	mov	r6, r0
 8001428:	db01      	blt.n	800142e <_malloc_r+0x1a>
 800142a:	42a9      	cmp	r1, r5
 800142c:	d903      	bls.n	8001436 <_malloc_r+0x22>
 800142e:	230c      	movs	r3, #12
 8001430:	6033      	str	r3, [r6, #0]
 8001432:	2000      	movs	r0, #0
 8001434:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001436:	f000 fb43 	bl	8001ac0 <__malloc_lock>
 800143a:	4921      	ldr	r1, [pc, #132]	; (80014c0 <_malloc_r+0xac>)
 800143c:	680a      	ldr	r2, [r1, #0]
 800143e:	4614      	mov	r4, r2
 8001440:	b99c      	cbnz	r4, 800146a <_malloc_r+0x56>
 8001442:	4f20      	ldr	r7, [pc, #128]	; (80014c4 <_malloc_r+0xb0>)
 8001444:	683b      	ldr	r3, [r7, #0]
 8001446:	b923      	cbnz	r3, 8001452 <_malloc_r+0x3e>
 8001448:	4621      	mov	r1, r4
 800144a:	4630      	mov	r0, r6
 800144c:	f000 f8ca 	bl	80015e4 <_sbrk_r>
 8001450:	6038      	str	r0, [r7, #0]
 8001452:	4629      	mov	r1, r5
 8001454:	4630      	mov	r0, r6
 8001456:	f000 f8c5 	bl	80015e4 <_sbrk_r>
 800145a:	1c43      	adds	r3, r0, #1
 800145c:	d123      	bne.n	80014a6 <_malloc_r+0x92>
 800145e:	230c      	movs	r3, #12
 8001460:	6033      	str	r3, [r6, #0]
 8001462:	4630      	mov	r0, r6
 8001464:	f000 fb32 	bl	8001acc <__malloc_unlock>
 8001468:	e7e3      	b.n	8001432 <_malloc_r+0x1e>
 800146a:	6823      	ldr	r3, [r4, #0]
 800146c:	1b5b      	subs	r3, r3, r5
 800146e:	d417      	bmi.n	80014a0 <_malloc_r+0x8c>
 8001470:	2b0b      	cmp	r3, #11
 8001472:	d903      	bls.n	800147c <_malloc_r+0x68>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	441c      	add	r4, r3
 8001478:	6025      	str	r5, [r4, #0]
 800147a:	e004      	b.n	8001486 <_malloc_r+0x72>
 800147c:	6863      	ldr	r3, [r4, #4]
 800147e:	42a2      	cmp	r2, r4
 8001480:	bf0c      	ite	eq
 8001482:	600b      	streq	r3, [r1, #0]
 8001484:	6053      	strne	r3, [r2, #4]
 8001486:	4630      	mov	r0, r6
 8001488:	f000 fb20 	bl	8001acc <__malloc_unlock>
 800148c:	f104 000b 	add.w	r0, r4, #11
 8001490:	1d23      	adds	r3, r4, #4
 8001492:	f020 0007 	bic.w	r0, r0, #7
 8001496:	1ac2      	subs	r2, r0, r3
 8001498:	d0cc      	beq.n	8001434 <_malloc_r+0x20>
 800149a:	1a1b      	subs	r3, r3, r0
 800149c:	50a3      	str	r3, [r4, r2]
 800149e:	e7c9      	b.n	8001434 <_malloc_r+0x20>
 80014a0:	4622      	mov	r2, r4
 80014a2:	6864      	ldr	r4, [r4, #4]
 80014a4:	e7cc      	b.n	8001440 <_malloc_r+0x2c>
 80014a6:	1cc4      	adds	r4, r0, #3
 80014a8:	f024 0403 	bic.w	r4, r4, #3
 80014ac:	42a0      	cmp	r0, r4
 80014ae:	d0e3      	beq.n	8001478 <_malloc_r+0x64>
 80014b0:	1a21      	subs	r1, r4, r0
 80014b2:	4630      	mov	r0, r6
 80014b4:	f000 f896 	bl	80015e4 <_sbrk_r>
 80014b8:	3001      	adds	r0, #1
 80014ba:	d1dd      	bne.n	8001478 <_malloc_r+0x64>
 80014bc:	e7cf      	b.n	800145e <_malloc_r+0x4a>
 80014be:	bf00      	nop
 80014c0:	2000013c 	.word	0x2000013c
 80014c4:	20000140 	.word	0x20000140

080014c8 <iprintf>:
 80014c8:	b40f      	push	{r0, r1, r2, r3}
 80014ca:	4b0a      	ldr	r3, [pc, #40]	; (80014f4 <iprintf+0x2c>)
 80014cc:	b513      	push	{r0, r1, r4, lr}
 80014ce:	681c      	ldr	r4, [r3, #0]
 80014d0:	b124      	cbz	r4, 80014dc <iprintf+0x14>
 80014d2:	69a3      	ldr	r3, [r4, #24]
 80014d4:	b913      	cbnz	r3, 80014dc <iprintf+0x14>
 80014d6:	4620      	mov	r0, r4
 80014d8:	f7ff fece 	bl	8001278 <__sinit>
 80014dc:	ab05      	add	r3, sp, #20
 80014de:	9a04      	ldr	r2, [sp, #16]
 80014e0:	68a1      	ldr	r1, [r4, #8]
 80014e2:	9301      	str	r3, [sp, #4]
 80014e4:	4620      	mov	r0, r4
 80014e6:	f000 fb71 	bl	8001bcc <_vfiprintf_r>
 80014ea:	b002      	add	sp, #8
 80014ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014f0:	b004      	add	sp, #16
 80014f2:	4770      	bx	lr
 80014f4:	2000000c 	.word	0x2000000c

080014f8 <_puts_r>:
 80014f8:	b570      	push	{r4, r5, r6, lr}
 80014fa:	460e      	mov	r6, r1
 80014fc:	4605      	mov	r5, r0
 80014fe:	b118      	cbz	r0, 8001508 <_puts_r+0x10>
 8001500:	6983      	ldr	r3, [r0, #24]
 8001502:	b90b      	cbnz	r3, 8001508 <_puts_r+0x10>
 8001504:	f7ff feb8 	bl	8001278 <__sinit>
 8001508:	69ab      	ldr	r3, [r5, #24]
 800150a:	68ac      	ldr	r4, [r5, #8]
 800150c:	b913      	cbnz	r3, 8001514 <_puts_r+0x1c>
 800150e:	4628      	mov	r0, r5
 8001510:	f7ff feb2 	bl	8001278 <__sinit>
 8001514:	4b2c      	ldr	r3, [pc, #176]	; (80015c8 <_puts_r+0xd0>)
 8001516:	429c      	cmp	r4, r3
 8001518:	d120      	bne.n	800155c <_puts_r+0x64>
 800151a:	686c      	ldr	r4, [r5, #4]
 800151c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800151e:	07db      	lsls	r3, r3, #31
 8001520:	d405      	bmi.n	800152e <_puts_r+0x36>
 8001522:	89a3      	ldrh	r3, [r4, #12]
 8001524:	0598      	lsls	r0, r3, #22
 8001526:	d402      	bmi.n	800152e <_puts_r+0x36>
 8001528:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800152a:	f7ff ff68 	bl	80013fe <__retarget_lock_acquire_recursive>
 800152e:	89a3      	ldrh	r3, [r4, #12]
 8001530:	0719      	lsls	r1, r3, #28
 8001532:	d51d      	bpl.n	8001570 <_puts_r+0x78>
 8001534:	6923      	ldr	r3, [r4, #16]
 8001536:	b1db      	cbz	r3, 8001570 <_puts_r+0x78>
 8001538:	3e01      	subs	r6, #1
 800153a:	68a3      	ldr	r3, [r4, #8]
 800153c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001540:	3b01      	subs	r3, #1
 8001542:	60a3      	str	r3, [r4, #8]
 8001544:	bb39      	cbnz	r1, 8001596 <_puts_r+0x9e>
 8001546:	2b00      	cmp	r3, #0
 8001548:	da38      	bge.n	80015bc <_puts_r+0xc4>
 800154a:	4622      	mov	r2, r4
 800154c:	210a      	movs	r1, #10
 800154e:	4628      	mov	r0, r5
 8001550:	f000 f89c 	bl	800168c <__swbuf_r>
 8001554:	3001      	adds	r0, #1
 8001556:	d011      	beq.n	800157c <_puts_r+0x84>
 8001558:	250a      	movs	r5, #10
 800155a:	e011      	b.n	8001580 <_puts_r+0x88>
 800155c:	4b1b      	ldr	r3, [pc, #108]	; (80015cc <_puts_r+0xd4>)
 800155e:	429c      	cmp	r4, r3
 8001560:	d101      	bne.n	8001566 <_puts_r+0x6e>
 8001562:	68ac      	ldr	r4, [r5, #8]
 8001564:	e7da      	b.n	800151c <_puts_r+0x24>
 8001566:	4b1a      	ldr	r3, [pc, #104]	; (80015d0 <_puts_r+0xd8>)
 8001568:	429c      	cmp	r4, r3
 800156a:	bf08      	it	eq
 800156c:	68ec      	ldreq	r4, [r5, #12]
 800156e:	e7d5      	b.n	800151c <_puts_r+0x24>
 8001570:	4621      	mov	r1, r4
 8001572:	4628      	mov	r0, r5
 8001574:	f000 f8ee 	bl	8001754 <__swsetup_r>
 8001578:	2800      	cmp	r0, #0
 800157a:	d0dd      	beq.n	8001538 <_puts_r+0x40>
 800157c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001580:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001582:	07da      	lsls	r2, r3, #31
 8001584:	d405      	bmi.n	8001592 <_puts_r+0x9a>
 8001586:	89a3      	ldrh	r3, [r4, #12]
 8001588:	059b      	lsls	r3, r3, #22
 800158a:	d402      	bmi.n	8001592 <_puts_r+0x9a>
 800158c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800158e:	f7ff ff37 	bl	8001400 <__retarget_lock_release_recursive>
 8001592:	4628      	mov	r0, r5
 8001594:	bd70      	pop	{r4, r5, r6, pc}
 8001596:	2b00      	cmp	r3, #0
 8001598:	da04      	bge.n	80015a4 <_puts_r+0xac>
 800159a:	69a2      	ldr	r2, [r4, #24]
 800159c:	429a      	cmp	r2, r3
 800159e:	dc06      	bgt.n	80015ae <_puts_r+0xb6>
 80015a0:	290a      	cmp	r1, #10
 80015a2:	d004      	beq.n	80015ae <_puts_r+0xb6>
 80015a4:	6823      	ldr	r3, [r4, #0]
 80015a6:	1c5a      	adds	r2, r3, #1
 80015a8:	6022      	str	r2, [r4, #0]
 80015aa:	7019      	strb	r1, [r3, #0]
 80015ac:	e7c5      	b.n	800153a <_puts_r+0x42>
 80015ae:	4622      	mov	r2, r4
 80015b0:	4628      	mov	r0, r5
 80015b2:	f000 f86b 	bl	800168c <__swbuf_r>
 80015b6:	3001      	adds	r0, #1
 80015b8:	d1bf      	bne.n	800153a <_puts_r+0x42>
 80015ba:	e7df      	b.n	800157c <_puts_r+0x84>
 80015bc:	6823      	ldr	r3, [r4, #0]
 80015be:	250a      	movs	r5, #10
 80015c0:	1c5a      	adds	r2, r3, #1
 80015c2:	6022      	str	r2, [r4, #0]
 80015c4:	701d      	strb	r5, [r3, #0]
 80015c6:	e7db      	b.n	8001580 <_puts_r+0x88>
 80015c8:	08002234 	.word	0x08002234
 80015cc:	08002254 	.word	0x08002254
 80015d0:	08002214 	.word	0x08002214

080015d4 <puts>:
 80015d4:	4b02      	ldr	r3, [pc, #8]	; (80015e0 <puts+0xc>)
 80015d6:	4601      	mov	r1, r0
 80015d8:	6818      	ldr	r0, [r3, #0]
 80015da:	f7ff bf8d 	b.w	80014f8 <_puts_r>
 80015de:	bf00      	nop
 80015e0:	2000000c 	.word	0x2000000c

080015e4 <_sbrk_r>:
 80015e4:	b538      	push	{r3, r4, r5, lr}
 80015e6:	4d06      	ldr	r5, [pc, #24]	; (8001600 <_sbrk_r+0x1c>)
 80015e8:	2300      	movs	r3, #0
 80015ea:	4604      	mov	r4, r0
 80015ec:	4608      	mov	r0, r1
 80015ee:	602b      	str	r3, [r5, #0]
 80015f0:	f7ff fc1e 	bl	8000e30 <_sbrk>
 80015f4:	1c43      	adds	r3, r0, #1
 80015f6:	d102      	bne.n	80015fe <_sbrk_r+0x1a>
 80015f8:	682b      	ldr	r3, [r5, #0]
 80015fa:	b103      	cbz	r3, 80015fe <_sbrk_r+0x1a>
 80015fc:	6023      	str	r3, [r4, #0]
 80015fe:	bd38      	pop	{r3, r4, r5, pc}
 8001600:	20000150 	.word	0x20000150

08001604 <__sread>:
 8001604:	b510      	push	{r4, lr}
 8001606:	460c      	mov	r4, r1
 8001608:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800160c:	f000 fda2 	bl	8002154 <_read_r>
 8001610:	2800      	cmp	r0, #0
 8001612:	bfab      	itete	ge
 8001614:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001616:	89a3      	ldrhlt	r3, [r4, #12]
 8001618:	181b      	addge	r3, r3, r0
 800161a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800161e:	bfac      	ite	ge
 8001620:	6563      	strge	r3, [r4, #84]	; 0x54
 8001622:	81a3      	strhlt	r3, [r4, #12]
 8001624:	bd10      	pop	{r4, pc}

08001626 <__swrite>:
 8001626:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800162a:	461f      	mov	r7, r3
 800162c:	898b      	ldrh	r3, [r1, #12]
 800162e:	05db      	lsls	r3, r3, #23
 8001630:	4605      	mov	r5, r0
 8001632:	460c      	mov	r4, r1
 8001634:	4616      	mov	r6, r2
 8001636:	d505      	bpl.n	8001644 <__swrite+0x1e>
 8001638:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800163c:	2302      	movs	r3, #2
 800163e:	2200      	movs	r2, #0
 8001640:	f000 f9c8 	bl	80019d4 <_lseek_r>
 8001644:	89a3      	ldrh	r3, [r4, #12]
 8001646:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800164a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800164e:	81a3      	strh	r3, [r4, #12]
 8001650:	4632      	mov	r2, r6
 8001652:	463b      	mov	r3, r7
 8001654:	4628      	mov	r0, r5
 8001656:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800165a:	f000 b869 	b.w	8001730 <_write_r>

0800165e <__sseek>:
 800165e:	b510      	push	{r4, lr}
 8001660:	460c      	mov	r4, r1
 8001662:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001666:	f000 f9b5 	bl	80019d4 <_lseek_r>
 800166a:	1c43      	adds	r3, r0, #1
 800166c:	89a3      	ldrh	r3, [r4, #12]
 800166e:	bf15      	itete	ne
 8001670:	6560      	strne	r0, [r4, #84]	; 0x54
 8001672:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001676:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800167a:	81a3      	strheq	r3, [r4, #12]
 800167c:	bf18      	it	ne
 800167e:	81a3      	strhne	r3, [r4, #12]
 8001680:	bd10      	pop	{r4, pc}

08001682 <__sclose>:
 8001682:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001686:	f000 b8d3 	b.w	8001830 <_close_r>
	...

0800168c <__swbuf_r>:
 800168c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800168e:	460e      	mov	r6, r1
 8001690:	4614      	mov	r4, r2
 8001692:	4605      	mov	r5, r0
 8001694:	b118      	cbz	r0, 800169e <__swbuf_r+0x12>
 8001696:	6983      	ldr	r3, [r0, #24]
 8001698:	b90b      	cbnz	r3, 800169e <__swbuf_r+0x12>
 800169a:	f7ff fded 	bl	8001278 <__sinit>
 800169e:	4b21      	ldr	r3, [pc, #132]	; (8001724 <__swbuf_r+0x98>)
 80016a0:	429c      	cmp	r4, r3
 80016a2:	d12b      	bne.n	80016fc <__swbuf_r+0x70>
 80016a4:	686c      	ldr	r4, [r5, #4]
 80016a6:	69a3      	ldr	r3, [r4, #24]
 80016a8:	60a3      	str	r3, [r4, #8]
 80016aa:	89a3      	ldrh	r3, [r4, #12]
 80016ac:	071a      	lsls	r2, r3, #28
 80016ae:	d52f      	bpl.n	8001710 <__swbuf_r+0x84>
 80016b0:	6923      	ldr	r3, [r4, #16]
 80016b2:	b36b      	cbz	r3, 8001710 <__swbuf_r+0x84>
 80016b4:	6923      	ldr	r3, [r4, #16]
 80016b6:	6820      	ldr	r0, [r4, #0]
 80016b8:	1ac0      	subs	r0, r0, r3
 80016ba:	6963      	ldr	r3, [r4, #20]
 80016bc:	b2f6      	uxtb	r6, r6
 80016be:	4283      	cmp	r3, r0
 80016c0:	4637      	mov	r7, r6
 80016c2:	dc04      	bgt.n	80016ce <__swbuf_r+0x42>
 80016c4:	4621      	mov	r1, r4
 80016c6:	4628      	mov	r0, r5
 80016c8:	f000 f948 	bl	800195c <_fflush_r>
 80016cc:	bb30      	cbnz	r0, 800171c <__swbuf_r+0x90>
 80016ce:	68a3      	ldr	r3, [r4, #8]
 80016d0:	3b01      	subs	r3, #1
 80016d2:	60a3      	str	r3, [r4, #8]
 80016d4:	6823      	ldr	r3, [r4, #0]
 80016d6:	1c5a      	adds	r2, r3, #1
 80016d8:	6022      	str	r2, [r4, #0]
 80016da:	701e      	strb	r6, [r3, #0]
 80016dc:	6963      	ldr	r3, [r4, #20]
 80016de:	3001      	adds	r0, #1
 80016e0:	4283      	cmp	r3, r0
 80016e2:	d004      	beq.n	80016ee <__swbuf_r+0x62>
 80016e4:	89a3      	ldrh	r3, [r4, #12]
 80016e6:	07db      	lsls	r3, r3, #31
 80016e8:	d506      	bpl.n	80016f8 <__swbuf_r+0x6c>
 80016ea:	2e0a      	cmp	r6, #10
 80016ec:	d104      	bne.n	80016f8 <__swbuf_r+0x6c>
 80016ee:	4621      	mov	r1, r4
 80016f0:	4628      	mov	r0, r5
 80016f2:	f000 f933 	bl	800195c <_fflush_r>
 80016f6:	b988      	cbnz	r0, 800171c <__swbuf_r+0x90>
 80016f8:	4638      	mov	r0, r7
 80016fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016fc:	4b0a      	ldr	r3, [pc, #40]	; (8001728 <__swbuf_r+0x9c>)
 80016fe:	429c      	cmp	r4, r3
 8001700:	d101      	bne.n	8001706 <__swbuf_r+0x7a>
 8001702:	68ac      	ldr	r4, [r5, #8]
 8001704:	e7cf      	b.n	80016a6 <__swbuf_r+0x1a>
 8001706:	4b09      	ldr	r3, [pc, #36]	; (800172c <__swbuf_r+0xa0>)
 8001708:	429c      	cmp	r4, r3
 800170a:	bf08      	it	eq
 800170c:	68ec      	ldreq	r4, [r5, #12]
 800170e:	e7ca      	b.n	80016a6 <__swbuf_r+0x1a>
 8001710:	4621      	mov	r1, r4
 8001712:	4628      	mov	r0, r5
 8001714:	f000 f81e 	bl	8001754 <__swsetup_r>
 8001718:	2800      	cmp	r0, #0
 800171a:	d0cb      	beq.n	80016b4 <__swbuf_r+0x28>
 800171c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8001720:	e7ea      	b.n	80016f8 <__swbuf_r+0x6c>
 8001722:	bf00      	nop
 8001724:	08002234 	.word	0x08002234
 8001728:	08002254 	.word	0x08002254
 800172c:	08002214 	.word	0x08002214

08001730 <_write_r>:
 8001730:	b538      	push	{r3, r4, r5, lr}
 8001732:	4d07      	ldr	r5, [pc, #28]	; (8001750 <_write_r+0x20>)
 8001734:	4604      	mov	r4, r0
 8001736:	4608      	mov	r0, r1
 8001738:	4611      	mov	r1, r2
 800173a:	2200      	movs	r2, #0
 800173c:	602a      	str	r2, [r5, #0]
 800173e:	461a      	mov	r2, r3
 8001740:	f7ff fb1e 	bl	8000d80 <_write>
 8001744:	1c43      	adds	r3, r0, #1
 8001746:	d102      	bne.n	800174e <_write_r+0x1e>
 8001748:	682b      	ldr	r3, [r5, #0]
 800174a:	b103      	cbz	r3, 800174e <_write_r+0x1e>
 800174c:	6023      	str	r3, [r4, #0]
 800174e:	bd38      	pop	{r3, r4, r5, pc}
 8001750:	20000150 	.word	0x20000150

08001754 <__swsetup_r>:
 8001754:	4b32      	ldr	r3, [pc, #200]	; (8001820 <__swsetup_r+0xcc>)
 8001756:	b570      	push	{r4, r5, r6, lr}
 8001758:	681d      	ldr	r5, [r3, #0]
 800175a:	4606      	mov	r6, r0
 800175c:	460c      	mov	r4, r1
 800175e:	b125      	cbz	r5, 800176a <__swsetup_r+0x16>
 8001760:	69ab      	ldr	r3, [r5, #24]
 8001762:	b913      	cbnz	r3, 800176a <__swsetup_r+0x16>
 8001764:	4628      	mov	r0, r5
 8001766:	f7ff fd87 	bl	8001278 <__sinit>
 800176a:	4b2e      	ldr	r3, [pc, #184]	; (8001824 <__swsetup_r+0xd0>)
 800176c:	429c      	cmp	r4, r3
 800176e:	d10f      	bne.n	8001790 <__swsetup_r+0x3c>
 8001770:	686c      	ldr	r4, [r5, #4]
 8001772:	89a3      	ldrh	r3, [r4, #12]
 8001774:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001778:	0719      	lsls	r1, r3, #28
 800177a:	d42c      	bmi.n	80017d6 <__swsetup_r+0x82>
 800177c:	06dd      	lsls	r5, r3, #27
 800177e:	d411      	bmi.n	80017a4 <__swsetup_r+0x50>
 8001780:	2309      	movs	r3, #9
 8001782:	6033      	str	r3, [r6, #0]
 8001784:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001788:	81a3      	strh	r3, [r4, #12]
 800178a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800178e:	e03e      	b.n	800180e <__swsetup_r+0xba>
 8001790:	4b25      	ldr	r3, [pc, #148]	; (8001828 <__swsetup_r+0xd4>)
 8001792:	429c      	cmp	r4, r3
 8001794:	d101      	bne.n	800179a <__swsetup_r+0x46>
 8001796:	68ac      	ldr	r4, [r5, #8]
 8001798:	e7eb      	b.n	8001772 <__swsetup_r+0x1e>
 800179a:	4b24      	ldr	r3, [pc, #144]	; (800182c <__swsetup_r+0xd8>)
 800179c:	429c      	cmp	r4, r3
 800179e:	bf08      	it	eq
 80017a0:	68ec      	ldreq	r4, [r5, #12]
 80017a2:	e7e6      	b.n	8001772 <__swsetup_r+0x1e>
 80017a4:	0758      	lsls	r0, r3, #29
 80017a6:	d512      	bpl.n	80017ce <__swsetup_r+0x7a>
 80017a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80017aa:	b141      	cbz	r1, 80017be <__swsetup_r+0x6a>
 80017ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80017b0:	4299      	cmp	r1, r3
 80017b2:	d002      	beq.n	80017ba <__swsetup_r+0x66>
 80017b4:	4630      	mov	r0, r6
 80017b6:	f000 f98f 	bl	8001ad8 <_free_r>
 80017ba:	2300      	movs	r3, #0
 80017bc:	6363      	str	r3, [r4, #52]	; 0x34
 80017be:	89a3      	ldrh	r3, [r4, #12]
 80017c0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80017c4:	81a3      	strh	r3, [r4, #12]
 80017c6:	2300      	movs	r3, #0
 80017c8:	6063      	str	r3, [r4, #4]
 80017ca:	6923      	ldr	r3, [r4, #16]
 80017cc:	6023      	str	r3, [r4, #0]
 80017ce:	89a3      	ldrh	r3, [r4, #12]
 80017d0:	f043 0308 	orr.w	r3, r3, #8
 80017d4:	81a3      	strh	r3, [r4, #12]
 80017d6:	6923      	ldr	r3, [r4, #16]
 80017d8:	b94b      	cbnz	r3, 80017ee <__swsetup_r+0x9a>
 80017da:	89a3      	ldrh	r3, [r4, #12]
 80017dc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80017e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80017e4:	d003      	beq.n	80017ee <__swsetup_r+0x9a>
 80017e6:	4621      	mov	r1, r4
 80017e8:	4630      	mov	r0, r6
 80017ea:	f000 f929 	bl	8001a40 <__smakebuf_r>
 80017ee:	89a0      	ldrh	r0, [r4, #12]
 80017f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80017f4:	f010 0301 	ands.w	r3, r0, #1
 80017f8:	d00a      	beq.n	8001810 <__swsetup_r+0xbc>
 80017fa:	2300      	movs	r3, #0
 80017fc:	60a3      	str	r3, [r4, #8]
 80017fe:	6963      	ldr	r3, [r4, #20]
 8001800:	425b      	negs	r3, r3
 8001802:	61a3      	str	r3, [r4, #24]
 8001804:	6923      	ldr	r3, [r4, #16]
 8001806:	b943      	cbnz	r3, 800181a <__swsetup_r+0xc6>
 8001808:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800180c:	d1ba      	bne.n	8001784 <__swsetup_r+0x30>
 800180e:	bd70      	pop	{r4, r5, r6, pc}
 8001810:	0781      	lsls	r1, r0, #30
 8001812:	bf58      	it	pl
 8001814:	6963      	ldrpl	r3, [r4, #20]
 8001816:	60a3      	str	r3, [r4, #8]
 8001818:	e7f4      	b.n	8001804 <__swsetup_r+0xb0>
 800181a:	2000      	movs	r0, #0
 800181c:	e7f7      	b.n	800180e <__swsetup_r+0xba>
 800181e:	bf00      	nop
 8001820:	2000000c 	.word	0x2000000c
 8001824:	08002234 	.word	0x08002234
 8001828:	08002254 	.word	0x08002254
 800182c:	08002214 	.word	0x08002214

08001830 <_close_r>:
 8001830:	b538      	push	{r3, r4, r5, lr}
 8001832:	4d06      	ldr	r5, [pc, #24]	; (800184c <_close_r+0x1c>)
 8001834:	2300      	movs	r3, #0
 8001836:	4604      	mov	r4, r0
 8001838:	4608      	mov	r0, r1
 800183a:	602b      	str	r3, [r5, #0]
 800183c:	f7ff fad2 	bl	8000de4 <_close>
 8001840:	1c43      	adds	r3, r0, #1
 8001842:	d102      	bne.n	800184a <_close_r+0x1a>
 8001844:	682b      	ldr	r3, [r5, #0]
 8001846:	b103      	cbz	r3, 800184a <_close_r+0x1a>
 8001848:	6023      	str	r3, [r4, #0]
 800184a:	bd38      	pop	{r3, r4, r5, pc}
 800184c:	20000150 	.word	0x20000150

08001850 <__sflush_r>:
 8001850:	898a      	ldrh	r2, [r1, #12]
 8001852:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001856:	4605      	mov	r5, r0
 8001858:	0710      	lsls	r0, r2, #28
 800185a:	460c      	mov	r4, r1
 800185c:	d458      	bmi.n	8001910 <__sflush_r+0xc0>
 800185e:	684b      	ldr	r3, [r1, #4]
 8001860:	2b00      	cmp	r3, #0
 8001862:	dc05      	bgt.n	8001870 <__sflush_r+0x20>
 8001864:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001866:	2b00      	cmp	r3, #0
 8001868:	dc02      	bgt.n	8001870 <__sflush_r+0x20>
 800186a:	2000      	movs	r0, #0
 800186c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001870:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001872:	2e00      	cmp	r6, #0
 8001874:	d0f9      	beq.n	800186a <__sflush_r+0x1a>
 8001876:	2300      	movs	r3, #0
 8001878:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800187c:	682f      	ldr	r7, [r5, #0]
 800187e:	602b      	str	r3, [r5, #0]
 8001880:	d032      	beq.n	80018e8 <__sflush_r+0x98>
 8001882:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001884:	89a3      	ldrh	r3, [r4, #12]
 8001886:	075a      	lsls	r2, r3, #29
 8001888:	d505      	bpl.n	8001896 <__sflush_r+0x46>
 800188a:	6863      	ldr	r3, [r4, #4]
 800188c:	1ac0      	subs	r0, r0, r3
 800188e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001890:	b10b      	cbz	r3, 8001896 <__sflush_r+0x46>
 8001892:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001894:	1ac0      	subs	r0, r0, r3
 8001896:	2300      	movs	r3, #0
 8001898:	4602      	mov	r2, r0
 800189a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800189c:	6a21      	ldr	r1, [r4, #32]
 800189e:	4628      	mov	r0, r5
 80018a0:	47b0      	blx	r6
 80018a2:	1c43      	adds	r3, r0, #1
 80018a4:	89a3      	ldrh	r3, [r4, #12]
 80018a6:	d106      	bne.n	80018b6 <__sflush_r+0x66>
 80018a8:	6829      	ldr	r1, [r5, #0]
 80018aa:	291d      	cmp	r1, #29
 80018ac:	d82c      	bhi.n	8001908 <__sflush_r+0xb8>
 80018ae:	4a2a      	ldr	r2, [pc, #168]	; (8001958 <__sflush_r+0x108>)
 80018b0:	40ca      	lsrs	r2, r1
 80018b2:	07d6      	lsls	r6, r2, #31
 80018b4:	d528      	bpl.n	8001908 <__sflush_r+0xb8>
 80018b6:	2200      	movs	r2, #0
 80018b8:	6062      	str	r2, [r4, #4]
 80018ba:	04d9      	lsls	r1, r3, #19
 80018bc:	6922      	ldr	r2, [r4, #16]
 80018be:	6022      	str	r2, [r4, #0]
 80018c0:	d504      	bpl.n	80018cc <__sflush_r+0x7c>
 80018c2:	1c42      	adds	r2, r0, #1
 80018c4:	d101      	bne.n	80018ca <__sflush_r+0x7a>
 80018c6:	682b      	ldr	r3, [r5, #0]
 80018c8:	b903      	cbnz	r3, 80018cc <__sflush_r+0x7c>
 80018ca:	6560      	str	r0, [r4, #84]	; 0x54
 80018cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80018ce:	602f      	str	r7, [r5, #0]
 80018d0:	2900      	cmp	r1, #0
 80018d2:	d0ca      	beq.n	800186a <__sflush_r+0x1a>
 80018d4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80018d8:	4299      	cmp	r1, r3
 80018da:	d002      	beq.n	80018e2 <__sflush_r+0x92>
 80018dc:	4628      	mov	r0, r5
 80018de:	f000 f8fb 	bl	8001ad8 <_free_r>
 80018e2:	2000      	movs	r0, #0
 80018e4:	6360      	str	r0, [r4, #52]	; 0x34
 80018e6:	e7c1      	b.n	800186c <__sflush_r+0x1c>
 80018e8:	6a21      	ldr	r1, [r4, #32]
 80018ea:	2301      	movs	r3, #1
 80018ec:	4628      	mov	r0, r5
 80018ee:	47b0      	blx	r6
 80018f0:	1c41      	adds	r1, r0, #1
 80018f2:	d1c7      	bne.n	8001884 <__sflush_r+0x34>
 80018f4:	682b      	ldr	r3, [r5, #0]
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d0c4      	beq.n	8001884 <__sflush_r+0x34>
 80018fa:	2b1d      	cmp	r3, #29
 80018fc:	d001      	beq.n	8001902 <__sflush_r+0xb2>
 80018fe:	2b16      	cmp	r3, #22
 8001900:	d101      	bne.n	8001906 <__sflush_r+0xb6>
 8001902:	602f      	str	r7, [r5, #0]
 8001904:	e7b1      	b.n	800186a <__sflush_r+0x1a>
 8001906:	89a3      	ldrh	r3, [r4, #12]
 8001908:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800190c:	81a3      	strh	r3, [r4, #12]
 800190e:	e7ad      	b.n	800186c <__sflush_r+0x1c>
 8001910:	690f      	ldr	r7, [r1, #16]
 8001912:	2f00      	cmp	r7, #0
 8001914:	d0a9      	beq.n	800186a <__sflush_r+0x1a>
 8001916:	0793      	lsls	r3, r2, #30
 8001918:	680e      	ldr	r6, [r1, #0]
 800191a:	bf08      	it	eq
 800191c:	694b      	ldreq	r3, [r1, #20]
 800191e:	600f      	str	r7, [r1, #0]
 8001920:	bf18      	it	ne
 8001922:	2300      	movne	r3, #0
 8001924:	eba6 0807 	sub.w	r8, r6, r7
 8001928:	608b      	str	r3, [r1, #8]
 800192a:	f1b8 0f00 	cmp.w	r8, #0
 800192e:	dd9c      	ble.n	800186a <__sflush_r+0x1a>
 8001930:	6a21      	ldr	r1, [r4, #32]
 8001932:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001934:	4643      	mov	r3, r8
 8001936:	463a      	mov	r2, r7
 8001938:	4628      	mov	r0, r5
 800193a:	47b0      	blx	r6
 800193c:	2800      	cmp	r0, #0
 800193e:	dc06      	bgt.n	800194e <__sflush_r+0xfe>
 8001940:	89a3      	ldrh	r3, [r4, #12]
 8001942:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001946:	81a3      	strh	r3, [r4, #12]
 8001948:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800194c:	e78e      	b.n	800186c <__sflush_r+0x1c>
 800194e:	4407      	add	r7, r0
 8001950:	eba8 0800 	sub.w	r8, r8, r0
 8001954:	e7e9      	b.n	800192a <__sflush_r+0xda>
 8001956:	bf00      	nop
 8001958:	20400001 	.word	0x20400001

0800195c <_fflush_r>:
 800195c:	b538      	push	{r3, r4, r5, lr}
 800195e:	690b      	ldr	r3, [r1, #16]
 8001960:	4605      	mov	r5, r0
 8001962:	460c      	mov	r4, r1
 8001964:	b913      	cbnz	r3, 800196c <_fflush_r+0x10>
 8001966:	2500      	movs	r5, #0
 8001968:	4628      	mov	r0, r5
 800196a:	bd38      	pop	{r3, r4, r5, pc}
 800196c:	b118      	cbz	r0, 8001976 <_fflush_r+0x1a>
 800196e:	6983      	ldr	r3, [r0, #24]
 8001970:	b90b      	cbnz	r3, 8001976 <_fflush_r+0x1a>
 8001972:	f7ff fc81 	bl	8001278 <__sinit>
 8001976:	4b14      	ldr	r3, [pc, #80]	; (80019c8 <_fflush_r+0x6c>)
 8001978:	429c      	cmp	r4, r3
 800197a:	d11b      	bne.n	80019b4 <_fflush_r+0x58>
 800197c:	686c      	ldr	r4, [r5, #4]
 800197e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001982:	2b00      	cmp	r3, #0
 8001984:	d0ef      	beq.n	8001966 <_fflush_r+0xa>
 8001986:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001988:	07d0      	lsls	r0, r2, #31
 800198a:	d404      	bmi.n	8001996 <_fflush_r+0x3a>
 800198c:	0599      	lsls	r1, r3, #22
 800198e:	d402      	bmi.n	8001996 <_fflush_r+0x3a>
 8001990:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001992:	f7ff fd34 	bl	80013fe <__retarget_lock_acquire_recursive>
 8001996:	4628      	mov	r0, r5
 8001998:	4621      	mov	r1, r4
 800199a:	f7ff ff59 	bl	8001850 <__sflush_r>
 800199e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80019a0:	07da      	lsls	r2, r3, #31
 80019a2:	4605      	mov	r5, r0
 80019a4:	d4e0      	bmi.n	8001968 <_fflush_r+0xc>
 80019a6:	89a3      	ldrh	r3, [r4, #12]
 80019a8:	059b      	lsls	r3, r3, #22
 80019aa:	d4dd      	bmi.n	8001968 <_fflush_r+0xc>
 80019ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80019ae:	f7ff fd27 	bl	8001400 <__retarget_lock_release_recursive>
 80019b2:	e7d9      	b.n	8001968 <_fflush_r+0xc>
 80019b4:	4b05      	ldr	r3, [pc, #20]	; (80019cc <_fflush_r+0x70>)
 80019b6:	429c      	cmp	r4, r3
 80019b8:	d101      	bne.n	80019be <_fflush_r+0x62>
 80019ba:	68ac      	ldr	r4, [r5, #8]
 80019bc:	e7df      	b.n	800197e <_fflush_r+0x22>
 80019be:	4b04      	ldr	r3, [pc, #16]	; (80019d0 <_fflush_r+0x74>)
 80019c0:	429c      	cmp	r4, r3
 80019c2:	bf08      	it	eq
 80019c4:	68ec      	ldreq	r4, [r5, #12]
 80019c6:	e7da      	b.n	800197e <_fflush_r+0x22>
 80019c8:	08002234 	.word	0x08002234
 80019cc:	08002254 	.word	0x08002254
 80019d0:	08002214 	.word	0x08002214

080019d4 <_lseek_r>:
 80019d4:	b538      	push	{r3, r4, r5, lr}
 80019d6:	4d07      	ldr	r5, [pc, #28]	; (80019f4 <_lseek_r+0x20>)
 80019d8:	4604      	mov	r4, r0
 80019da:	4608      	mov	r0, r1
 80019dc:	4611      	mov	r1, r2
 80019de:	2200      	movs	r2, #0
 80019e0:	602a      	str	r2, [r5, #0]
 80019e2:	461a      	mov	r2, r3
 80019e4:	f7ff f9ba 	bl	8000d5c <_lseek>
 80019e8:	1c43      	adds	r3, r0, #1
 80019ea:	d102      	bne.n	80019f2 <_lseek_r+0x1e>
 80019ec:	682b      	ldr	r3, [r5, #0]
 80019ee:	b103      	cbz	r3, 80019f2 <_lseek_r+0x1e>
 80019f0:	6023      	str	r3, [r4, #0]
 80019f2:	bd38      	pop	{r3, r4, r5, pc}
 80019f4:	20000150 	.word	0x20000150

080019f8 <__swhatbuf_r>:
 80019f8:	b570      	push	{r4, r5, r6, lr}
 80019fa:	460e      	mov	r6, r1
 80019fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a00:	2900      	cmp	r1, #0
 8001a02:	b096      	sub	sp, #88	; 0x58
 8001a04:	4614      	mov	r4, r2
 8001a06:	461d      	mov	r5, r3
 8001a08:	da07      	bge.n	8001a1a <__swhatbuf_r+0x22>
 8001a0a:	2300      	movs	r3, #0
 8001a0c:	602b      	str	r3, [r5, #0]
 8001a0e:	89b3      	ldrh	r3, [r6, #12]
 8001a10:	061a      	lsls	r2, r3, #24
 8001a12:	d410      	bmi.n	8001a36 <__swhatbuf_r+0x3e>
 8001a14:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a18:	e00e      	b.n	8001a38 <__swhatbuf_r+0x40>
 8001a1a:	466a      	mov	r2, sp
 8001a1c:	f000 fbac 	bl	8002178 <_fstat_r>
 8001a20:	2800      	cmp	r0, #0
 8001a22:	dbf2      	blt.n	8001a0a <__swhatbuf_r+0x12>
 8001a24:	9a01      	ldr	r2, [sp, #4]
 8001a26:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001a2a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001a2e:	425a      	negs	r2, r3
 8001a30:	415a      	adcs	r2, r3
 8001a32:	602a      	str	r2, [r5, #0]
 8001a34:	e7ee      	b.n	8001a14 <__swhatbuf_r+0x1c>
 8001a36:	2340      	movs	r3, #64	; 0x40
 8001a38:	2000      	movs	r0, #0
 8001a3a:	6023      	str	r3, [r4, #0]
 8001a3c:	b016      	add	sp, #88	; 0x58
 8001a3e:	bd70      	pop	{r4, r5, r6, pc}

08001a40 <__smakebuf_r>:
 8001a40:	898b      	ldrh	r3, [r1, #12]
 8001a42:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001a44:	079d      	lsls	r5, r3, #30
 8001a46:	4606      	mov	r6, r0
 8001a48:	460c      	mov	r4, r1
 8001a4a:	d507      	bpl.n	8001a5c <__smakebuf_r+0x1c>
 8001a4c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001a50:	6023      	str	r3, [r4, #0]
 8001a52:	6123      	str	r3, [r4, #16]
 8001a54:	2301      	movs	r3, #1
 8001a56:	6163      	str	r3, [r4, #20]
 8001a58:	b002      	add	sp, #8
 8001a5a:	bd70      	pop	{r4, r5, r6, pc}
 8001a5c:	ab01      	add	r3, sp, #4
 8001a5e:	466a      	mov	r2, sp
 8001a60:	f7ff ffca 	bl	80019f8 <__swhatbuf_r>
 8001a64:	9900      	ldr	r1, [sp, #0]
 8001a66:	4605      	mov	r5, r0
 8001a68:	4630      	mov	r0, r6
 8001a6a:	f7ff fcd3 	bl	8001414 <_malloc_r>
 8001a6e:	b948      	cbnz	r0, 8001a84 <__smakebuf_r+0x44>
 8001a70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001a74:	059a      	lsls	r2, r3, #22
 8001a76:	d4ef      	bmi.n	8001a58 <__smakebuf_r+0x18>
 8001a78:	f023 0303 	bic.w	r3, r3, #3
 8001a7c:	f043 0302 	orr.w	r3, r3, #2
 8001a80:	81a3      	strh	r3, [r4, #12]
 8001a82:	e7e3      	b.n	8001a4c <__smakebuf_r+0xc>
 8001a84:	4b0d      	ldr	r3, [pc, #52]	; (8001abc <__smakebuf_r+0x7c>)
 8001a86:	62b3      	str	r3, [r6, #40]	; 0x28
 8001a88:	89a3      	ldrh	r3, [r4, #12]
 8001a8a:	6020      	str	r0, [r4, #0]
 8001a8c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001a90:	81a3      	strh	r3, [r4, #12]
 8001a92:	9b00      	ldr	r3, [sp, #0]
 8001a94:	6163      	str	r3, [r4, #20]
 8001a96:	9b01      	ldr	r3, [sp, #4]
 8001a98:	6120      	str	r0, [r4, #16]
 8001a9a:	b15b      	cbz	r3, 8001ab4 <__smakebuf_r+0x74>
 8001a9c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001aa0:	4630      	mov	r0, r6
 8001aa2:	f000 fb7b 	bl	800219c <_isatty_r>
 8001aa6:	b128      	cbz	r0, 8001ab4 <__smakebuf_r+0x74>
 8001aa8:	89a3      	ldrh	r3, [r4, #12]
 8001aaa:	f023 0303 	bic.w	r3, r3, #3
 8001aae:	f043 0301 	orr.w	r3, r3, #1
 8001ab2:	81a3      	strh	r3, [r4, #12]
 8001ab4:	89a0      	ldrh	r0, [r4, #12]
 8001ab6:	4305      	orrs	r5, r0
 8001ab8:	81a5      	strh	r5, [r4, #12]
 8001aba:	e7cd      	b.n	8001a58 <__smakebuf_r+0x18>
 8001abc:	08001211 	.word	0x08001211

08001ac0 <__malloc_lock>:
 8001ac0:	4801      	ldr	r0, [pc, #4]	; (8001ac8 <__malloc_lock+0x8>)
 8001ac2:	f7ff bc9c 	b.w	80013fe <__retarget_lock_acquire_recursive>
 8001ac6:	bf00      	nop
 8001ac8:	20000148 	.word	0x20000148

08001acc <__malloc_unlock>:
 8001acc:	4801      	ldr	r0, [pc, #4]	; (8001ad4 <__malloc_unlock+0x8>)
 8001ace:	f7ff bc97 	b.w	8001400 <__retarget_lock_release_recursive>
 8001ad2:	bf00      	nop
 8001ad4:	20000148 	.word	0x20000148

08001ad8 <_free_r>:
 8001ad8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001ada:	2900      	cmp	r1, #0
 8001adc:	d048      	beq.n	8001b70 <_free_r+0x98>
 8001ade:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001ae2:	9001      	str	r0, [sp, #4]
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	f1a1 0404 	sub.w	r4, r1, #4
 8001aea:	bfb8      	it	lt
 8001aec:	18e4      	addlt	r4, r4, r3
 8001aee:	f7ff ffe7 	bl	8001ac0 <__malloc_lock>
 8001af2:	4a20      	ldr	r2, [pc, #128]	; (8001b74 <_free_r+0x9c>)
 8001af4:	9801      	ldr	r0, [sp, #4]
 8001af6:	6813      	ldr	r3, [r2, #0]
 8001af8:	4615      	mov	r5, r2
 8001afa:	b933      	cbnz	r3, 8001b0a <_free_r+0x32>
 8001afc:	6063      	str	r3, [r4, #4]
 8001afe:	6014      	str	r4, [r2, #0]
 8001b00:	b003      	add	sp, #12
 8001b02:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001b06:	f7ff bfe1 	b.w	8001acc <__malloc_unlock>
 8001b0a:	42a3      	cmp	r3, r4
 8001b0c:	d90b      	bls.n	8001b26 <_free_r+0x4e>
 8001b0e:	6821      	ldr	r1, [r4, #0]
 8001b10:	1862      	adds	r2, r4, r1
 8001b12:	4293      	cmp	r3, r2
 8001b14:	bf04      	itt	eq
 8001b16:	681a      	ldreq	r2, [r3, #0]
 8001b18:	685b      	ldreq	r3, [r3, #4]
 8001b1a:	6063      	str	r3, [r4, #4]
 8001b1c:	bf04      	itt	eq
 8001b1e:	1852      	addeq	r2, r2, r1
 8001b20:	6022      	streq	r2, [r4, #0]
 8001b22:	602c      	str	r4, [r5, #0]
 8001b24:	e7ec      	b.n	8001b00 <_free_r+0x28>
 8001b26:	461a      	mov	r2, r3
 8001b28:	685b      	ldr	r3, [r3, #4]
 8001b2a:	b10b      	cbz	r3, 8001b30 <_free_r+0x58>
 8001b2c:	42a3      	cmp	r3, r4
 8001b2e:	d9fa      	bls.n	8001b26 <_free_r+0x4e>
 8001b30:	6811      	ldr	r1, [r2, #0]
 8001b32:	1855      	adds	r5, r2, r1
 8001b34:	42a5      	cmp	r5, r4
 8001b36:	d10b      	bne.n	8001b50 <_free_r+0x78>
 8001b38:	6824      	ldr	r4, [r4, #0]
 8001b3a:	4421      	add	r1, r4
 8001b3c:	1854      	adds	r4, r2, r1
 8001b3e:	42a3      	cmp	r3, r4
 8001b40:	6011      	str	r1, [r2, #0]
 8001b42:	d1dd      	bne.n	8001b00 <_free_r+0x28>
 8001b44:	681c      	ldr	r4, [r3, #0]
 8001b46:	685b      	ldr	r3, [r3, #4]
 8001b48:	6053      	str	r3, [r2, #4]
 8001b4a:	4421      	add	r1, r4
 8001b4c:	6011      	str	r1, [r2, #0]
 8001b4e:	e7d7      	b.n	8001b00 <_free_r+0x28>
 8001b50:	d902      	bls.n	8001b58 <_free_r+0x80>
 8001b52:	230c      	movs	r3, #12
 8001b54:	6003      	str	r3, [r0, #0]
 8001b56:	e7d3      	b.n	8001b00 <_free_r+0x28>
 8001b58:	6825      	ldr	r5, [r4, #0]
 8001b5a:	1961      	adds	r1, r4, r5
 8001b5c:	428b      	cmp	r3, r1
 8001b5e:	bf04      	itt	eq
 8001b60:	6819      	ldreq	r1, [r3, #0]
 8001b62:	685b      	ldreq	r3, [r3, #4]
 8001b64:	6063      	str	r3, [r4, #4]
 8001b66:	bf04      	itt	eq
 8001b68:	1949      	addeq	r1, r1, r5
 8001b6a:	6021      	streq	r1, [r4, #0]
 8001b6c:	6054      	str	r4, [r2, #4]
 8001b6e:	e7c7      	b.n	8001b00 <_free_r+0x28>
 8001b70:	b003      	add	sp, #12
 8001b72:	bd30      	pop	{r4, r5, pc}
 8001b74:	2000013c 	.word	0x2000013c

08001b78 <__sfputc_r>:
 8001b78:	6893      	ldr	r3, [r2, #8]
 8001b7a:	3b01      	subs	r3, #1
 8001b7c:	2b00      	cmp	r3, #0
 8001b7e:	b410      	push	{r4}
 8001b80:	6093      	str	r3, [r2, #8]
 8001b82:	da08      	bge.n	8001b96 <__sfputc_r+0x1e>
 8001b84:	6994      	ldr	r4, [r2, #24]
 8001b86:	42a3      	cmp	r3, r4
 8001b88:	db01      	blt.n	8001b8e <__sfputc_r+0x16>
 8001b8a:	290a      	cmp	r1, #10
 8001b8c:	d103      	bne.n	8001b96 <__sfputc_r+0x1e>
 8001b8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b92:	f7ff bd7b 	b.w	800168c <__swbuf_r>
 8001b96:	6813      	ldr	r3, [r2, #0]
 8001b98:	1c58      	adds	r0, r3, #1
 8001b9a:	6010      	str	r0, [r2, #0]
 8001b9c:	7019      	strb	r1, [r3, #0]
 8001b9e:	4608      	mov	r0, r1
 8001ba0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ba4:	4770      	bx	lr

08001ba6 <__sfputs_r>:
 8001ba6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ba8:	4606      	mov	r6, r0
 8001baa:	460f      	mov	r7, r1
 8001bac:	4614      	mov	r4, r2
 8001bae:	18d5      	adds	r5, r2, r3
 8001bb0:	42ac      	cmp	r4, r5
 8001bb2:	d101      	bne.n	8001bb8 <__sfputs_r+0x12>
 8001bb4:	2000      	movs	r0, #0
 8001bb6:	e007      	b.n	8001bc8 <__sfputs_r+0x22>
 8001bb8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001bbc:	463a      	mov	r2, r7
 8001bbe:	4630      	mov	r0, r6
 8001bc0:	f7ff ffda 	bl	8001b78 <__sfputc_r>
 8001bc4:	1c43      	adds	r3, r0, #1
 8001bc6:	d1f3      	bne.n	8001bb0 <__sfputs_r+0xa>
 8001bc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001bcc <_vfiprintf_r>:
 8001bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bd0:	460d      	mov	r5, r1
 8001bd2:	b09d      	sub	sp, #116	; 0x74
 8001bd4:	4614      	mov	r4, r2
 8001bd6:	4698      	mov	r8, r3
 8001bd8:	4606      	mov	r6, r0
 8001bda:	b118      	cbz	r0, 8001be4 <_vfiprintf_r+0x18>
 8001bdc:	6983      	ldr	r3, [r0, #24]
 8001bde:	b90b      	cbnz	r3, 8001be4 <_vfiprintf_r+0x18>
 8001be0:	f7ff fb4a 	bl	8001278 <__sinit>
 8001be4:	4b89      	ldr	r3, [pc, #548]	; (8001e0c <_vfiprintf_r+0x240>)
 8001be6:	429d      	cmp	r5, r3
 8001be8:	d11b      	bne.n	8001c22 <_vfiprintf_r+0x56>
 8001bea:	6875      	ldr	r5, [r6, #4]
 8001bec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001bee:	07d9      	lsls	r1, r3, #31
 8001bf0:	d405      	bmi.n	8001bfe <_vfiprintf_r+0x32>
 8001bf2:	89ab      	ldrh	r3, [r5, #12]
 8001bf4:	059a      	lsls	r2, r3, #22
 8001bf6:	d402      	bmi.n	8001bfe <_vfiprintf_r+0x32>
 8001bf8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001bfa:	f7ff fc00 	bl	80013fe <__retarget_lock_acquire_recursive>
 8001bfe:	89ab      	ldrh	r3, [r5, #12]
 8001c00:	071b      	lsls	r3, r3, #28
 8001c02:	d501      	bpl.n	8001c08 <_vfiprintf_r+0x3c>
 8001c04:	692b      	ldr	r3, [r5, #16]
 8001c06:	b9eb      	cbnz	r3, 8001c44 <_vfiprintf_r+0x78>
 8001c08:	4629      	mov	r1, r5
 8001c0a:	4630      	mov	r0, r6
 8001c0c:	f7ff fda2 	bl	8001754 <__swsetup_r>
 8001c10:	b1c0      	cbz	r0, 8001c44 <_vfiprintf_r+0x78>
 8001c12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001c14:	07dc      	lsls	r4, r3, #31
 8001c16:	d50e      	bpl.n	8001c36 <_vfiprintf_r+0x6a>
 8001c18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c1c:	b01d      	add	sp, #116	; 0x74
 8001c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c22:	4b7b      	ldr	r3, [pc, #492]	; (8001e10 <_vfiprintf_r+0x244>)
 8001c24:	429d      	cmp	r5, r3
 8001c26:	d101      	bne.n	8001c2c <_vfiprintf_r+0x60>
 8001c28:	68b5      	ldr	r5, [r6, #8]
 8001c2a:	e7df      	b.n	8001bec <_vfiprintf_r+0x20>
 8001c2c:	4b79      	ldr	r3, [pc, #484]	; (8001e14 <_vfiprintf_r+0x248>)
 8001c2e:	429d      	cmp	r5, r3
 8001c30:	bf08      	it	eq
 8001c32:	68f5      	ldreq	r5, [r6, #12]
 8001c34:	e7da      	b.n	8001bec <_vfiprintf_r+0x20>
 8001c36:	89ab      	ldrh	r3, [r5, #12]
 8001c38:	0598      	lsls	r0, r3, #22
 8001c3a:	d4ed      	bmi.n	8001c18 <_vfiprintf_r+0x4c>
 8001c3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001c3e:	f7ff fbdf 	bl	8001400 <__retarget_lock_release_recursive>
 8001c42:	e7e9      	b.n	8001c18 <_vfiprintf_r+0x4c>
 8001c44:	2300      	movs	r3, #0
 8001c46:	9309      	str	r3, [sp, #36]	; 0x24
 8001c48:	2320      	movs	r3, #32
 8001c4a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001c4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8001c52:	2330      	movs	r3, #48	; 0x30
 8001c54:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001e18 <_vfiprintf_r+0x24c>
 8001c58:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001c5c:	f04f 0901 	mov.w	r9, #1
 8001c60:	4623      	mov	r3, r4
 8001c62:	469a      	mov	sl, r3
 8001c64:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001c68:	b10a      	cbz	r2, 8001c6e <_vfiprintf_r+0xa2>
 8001c6a:	2a25      	cmp	r2, #37	; 0x25
 8001c6c:	d1f9      	bne.n	8001c62 <_vfiprintf_r+0x96>
 8001c6e:	ebba 0b04 	subs.w	fp, sl, r4
 8001c72:	d00b      	beq.n	8001c8c <_vfiprintf_r+0xc0>
 8001c74:	465b      	mov	r3, fp
 8001c76:	4622      	mov	r2, r4
 8001c78:	4629      	mov	r1, r5
 8001c7a:	4630      	mov	r0, r6
 8001c7c:	f7ff ff93 	bl	8001ba6 <__sfputs_r>
 8001c80:	3001      	adds	r0, #1
 8001c82:	f000 80aa 	beq.w	8001dda <_vfiprintf_r+0x20e>
 8001c86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001c88:	445a      	add	r2, fp
 8001c8a:	9209      	str	r2, [sp, #36]	; 0x24
 8001c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8001c90:	2b00      	cmp	r3, #0
 8001c92:	f000 80a2 	beq.w	8001dda <_vfiprintf_r+0x20e>
 8001c96:	2300      	movs	r3, #0
 8001c98:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001c9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001ca0:	f10a 0a01 	add.w	sl, sl, #1
 8001ca4:	9304      	str	r3, [sp, #16]
 8001ca6:	9307      	str	r3, [sp, #28]
 8001ca8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001cac:	931a      	str	r3, [sp, #104]	; 0x68
 8001cae:	4654      	mov	r4, sl
 8001cb0:	2205      	movs	r2, #5
 8001cb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001cb6:	4858      	ldr	r0, [pc, #352]	; (8001e18 <_vfiprintf_r+0x24c>)
 8001cb8:	f7fe faa2 	bl	8000200 <memchr>
 8001cbc:	9a04      	ldr	r2, [sp, #16]
 8001cbe:	b9d8      	cbnz	r0, 8001cf8 <_vfiprintf_r+0x12c>
 8001cc0:	06d1      	lsls	r1, r2, #27
 8001cc2:	bf44      	itt	mi
 8001cc4:	2320      	movmi	r3, #32
 8001cc6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001cca:	0713      	lsls	r3, r2, #28
 8001ccc:	bf44      	itt	mi
 8001cce:	232b      	movmi	r3, #43	; 0x2b
 8001cd0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001cd4:	f89a 3000 	ldrb.w	r3, [sl]
 8001cd8:	2b2a      	cmp	r3, #42	; 0x2a
 8001cda:	d015      	beq.n	8001d08 <_vfiprintf_r+0x13c>
 8001cdc:	9a07      	ldr	r2, [sp, #28]
 8001cde:	4654      	mov	r4, sl
 8001ce0:	2000      	movs	r0, #0
 8001ce2:	f04f 0c0a 	mov.w	ip, #10
 8001ce6:	4621      	mov	r1, r4
 8001ce8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001cec:	3b30      	subs	r3, #48	; 0x30
 8001cee:	2b09      	cmp	r3, #9
 8001cf0:	d94e      	bls.n	8001d90 <_vfiprintf_r+0x1c4>
 8001cf2:	b1b0      	cbz	r0, 8001d22 <_vfiprintf_r+0x156>
 8001cf4:	9207      	str	r2, [sp, #28]
 8001cf6:	e014      	b.n	8001d22 <_vfiprintf_r+0x156>
 8001cf8:	eba0 0308 	sub.w	r3, r0, r8
 8001cfc:	fa09 f303 	lsl.w	r3, r9, r3
 8001d00:	4313      	orrs	r3, r2
 8001d02:	9304      	str	r3, [sp, #16]
 8001d04:	46a2      	mov	sl, r4
 8001d06:	e7d2      	b.n	8001cae <_vfiprintf_r+0xe2>
 8001d08:	9b03      	ldr	r3, [sp, #12]
 8001d0a:	1d19      	adds	r1, r3, #4
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	9103      	str	r1, [sp, #12]
 8001d10:	2b00      	cmp	r3, #0
 8001d12:	bfbb      	ittet	lt
 8001d14:	425b      	neglt	r3, r3
 8001d16:	f042 0202 	orrlt.w	r2, r2, #2
 8001d1a:	9307      	strge	r3, [sp, #28]
 8001d1c:	9307      	strlt	r3, [sp, #28]
 8001d1e:	bfb8      	it	lt
 8001d20:	9204      	strlt	r2, [sp, #16]
 8001d22:	7823      	ldrb	r3, [r4, #0]
 8001d24:	2b2e      	cmp	r3, #46	; 0x2e
 8001d26:	d10c      	bne.n	8001d42 <_vfiprintf_r+0x176>
 8001d28:	7863      	ldrb	r3, [r4, #1]
 8001d2a:	2b2a      	cmp	r3, #42	; 0x2a
 8001d2c:	d135      	bne.n	8001d9a <_vfiprintf_r+0x1ce>
 8001d2e:	9b03      	ldr	r3, [sp, #12]
 8001d30:	1d1a      	adds	r2, r3, #4
 8001d32:	681b      	ldr	r3, [r3, #0]
 8001d34:	9203      	str	r2, [sp, #12]
 8001d36:	2b00      	cmp	r3, #0
 8001d38:	bfb8      	it	lt
 8001d3a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8001d3e:	3402      	adds	r4, #2
 8001d40:	9305      	str	r3, [sp, #20]
 8001d42:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001e28 <_vfiprintf_r+0x25c>
 8001d46:	7821      	ldrb	r1, [r4, #0]
 8001d48:	2203      	movs	r2, #3
 8001d4a:	4650      	mov	r0, sl
 8001d4c:	f7fe fa58 	bl	8000200 <memchr>
 8001d50:	b140      	cbz	r0, 8001d64 <_vfiprintf_r+0x198>
 8001d52:	2340      	movs	r3, #64	; 0x40
 8001d54:	eba0 000a 	sub.w	r0, r0, sl
 8001d58:	fa03 f000 	lsl.w	r0, r3, r0
 8001d5c:	9b04      	ldr	r3, [sp, #16]
 8001d5e:	4303      	orrs	r3, r0
 8001d60:	3401      	adds	r4, #1
 8001d62:	9304      	str	r3, [sp, #16]
 8001d64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001d68:	482c      	ldr	r0, [pc, #176]	; (8001e1c <_vfiprintf_r+0x250>)
 8001d6a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001d6e:	2206      	movs	r2, #6
 8001d70:	f7fe fa46 	bl	8000200 <memchr>
 8001d74:	2800      	cmp	r0, #0
 8001d76:	d03f      	beq.n	8001df8 <_vfiprintf_r+0x22c>
 8001d78:	4b29      	ldr	r3, [pc, #164]	; (8001e20 <_vfiprintf_r+0x254>)
 8001d7a:	bb1b      	cbnz	r3, 8001dc4 <_vfiprintf_r+0x1f8>
 8001d7c:	9b03      	ldr	r3, [sp, #12]
 8001d7e:	3307      	adds	r3, #7
 8001d80:	f023 0307 	bic.w	r3, r3, #7
 8001d84:	3308      	adds	r3, #8
 8001d86:	9303      	str	r3, [sp, #12]
 8001d88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001d8a:	443b      	add	r3, r7
 8001d8c:	9309      	str	r3, [sp, #36]	; 0x24
 8001d8e:	e767      	b.n	8001c60 <_vfiprintf_r+0x94>
 8001d90:	fb0c 3202 	mla	r2, ip, r2, r3
 8001d94:	460c      	mov	r4, r1
 8001d96:	2001      	movs	r0, #1
 8001d98:	e7a5      	b.n	8001ce6 <_vfiprintf_r+0x11a>
 8001d9a:	2300      	movs	r3, #0
 8001d9c:	3401      	adds	r4, #1
 8001d9e:	9305      	str	r3, [sp, #20]
 8001da0:	4619      	mov	r1, r3
 8001da2:	f04f 0c0a 	mov.w	ip, #10
 8001da6:	4620      	mov	r0, r4
 8001da8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001dac:	3a30      	subs	r2, #48	; 0x30
 8001dae:	2a09      	cmp	r2, #9
 8001db0:	d903      	bls.n	8001dba <_vfiprintf_r+0x1ee>
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d0c5      	beq.n	8001d42 <_vfiprintf_r+0x176>
 8001db6:	9105      	str	r1, [sp, #20]
 8001db8:	e7c3      	b.n	8001d42 <_vfiprintf_r+0x176>
 8001dba:	fb0c 2101 	mla	r1, ip, r1, r2
 8001dbe:	4604      	mov	r4, r0
 8001dc0:	2301      	movs	r3, #1
 8001dc2:	e7f0      	b.n	8001da6 <_vfiprintf_r+0x1da>
 8001dc4:	ab03      	add	r3, sp, #12
 8001dc6:	9300      	str	r3, [sp, #0]
 8001dc8:	462a      	mov	r2, r5
 8001dca:	4b16      	ldr	r3, [pc, #88]	; (8001e24 <_vfiprintf_r+0x258>)
 8001dcc:	a904      	add	r1, sp, #16
 8001dce:	4630      	mov	r0, r6
 8001dd0:	f3af 8000 	nop.w
 8001dd4:	4607      	mov	r7, r0
 8001dd6:	1c78      	adds	r0, r7, #1
 8001dd8:	d1d6      	bne.n	8001d88 <_vfiprintf_r+0x1bc>
 8001dda:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001ddc:	07d9      	lsls	r1, r3, #31
 8001dde:	d405      	bmi.n	8001dec <_vfiprintf_r+0x220>
 8001de0:	89ab      	ldrh	r3, [r5, #12]
 8001de2:	059a      	lsls	r2, r3, #22
 8001de4:	d402      	bmi.n	8001dec <_vfiprintf_r+0x220>
 8001de6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001de8:	f7ff fb0a 	bl	8001400 <__retarget_lock_release_recursive>
 8001dec:	89ab      	ldrh	r3, [r5, #12]
 8001dee:	065b      	lsls	r3, r3, #25
 8001df0:	f53f af12 	bmi.w	8001c18 <_vfiprintf_r+0x4c>
 8001df4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001df6:	e711      	b.n	8001c1c <_vfiprintf_r+0x50>
 8001df8:	ab03      	add	r3, sp, #12
 8001dfa:	9300      	str	r3, [sp, #0]
 8001dfc:	462a      	mov	r2, r5
 8001dfe:	4b09      	ldr	r3, [pc, #36]	; (8001e24 <_vfiprintf_r+0x258>)
 8001e00:	a904      	add	r1, sp, #16
 8001e02:	4630      	mov	r0, r6
 8001e04:	f000 f880 	bl	8001f08 <_printf_i>
 8001e08:	e7e4      	b.n	8001dd4 <_vfiprintf_r+0x208>
 8001e0a:	bf00      	nop
 8001e0c:	08002234 	.word	0x08002234
 8001e10:	08002254 	.word	0x08002254
 8001e14:	08002214 	.word	0x08002214
 8001e18:	08002278 	.word	0x08002278
 8001e1c:	08002282 	.word	0x08002282
 8001e20:	00000000 	.word	0x00000000
 8001e24:	08001ba7 	.word	0x08001ba7
 8001e28:	0800227e 	.word	0x0800227e

08001e2c <_printf_common>:
 8001e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e30:	4616      	mov	r6, r2
 8001e32:	4699      	mov	r9, r3
 8001e34:	688a      	ldr	r2, [r1, #8]
 8001e36:	690b      	ldr	r3, [r1, #16]
 8001e38:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001e3c:	4293      	cmp	r3, r2
 8001e3e:	bfb8      	it	lt
 8001e40:	4613      	movlt	r3, r2
 8001e42:	6033      	str	r3, [r6, #0]
 8001e44:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001e48:	4607      	mov	r7, r0
 8001e4a:	460c      	mov	r4, r1
 8001e4c:	b10a      	cbz	r2, 8001e52 <_printf_common+0x26>
 8001e4e:	3301      	adds	r3, #1
 8001e50:	6033      	str	r3, [r6, #0]
 8001e52:	6823      	ldr	r3, [r4, #0]
 8001e54:	0699      	lsls	r1, r3, #26
 8001e56:	bf42      	ittt	mi
 8001e58:	6833      	ldrmi	r3, [r6, #0]
 8001e5a:	3302      	addmi	r3, #2
 8001e5c:	6033      	strmi	r3, [r6, #0]
 8001e5e:	6825      	ldr	r5, [r4, #0]
 8001e60:	f015 0506 	ands.w	r5, r5, #6
 8001e64:	d106      	bne.n	8001e74 <_printf_common+0x48>
 8001e66:	f104 0a19 	add.w	sl, r4, #25
 8001e6a:	68e3      	ldr	r3, [r4, #12]
 8001e6c:	6832      	ldr	r2, [r6, #0]
 8001e6e:	1a9b      	subs	r3, r3, r2
 8001e70:	42ab      	cmp	r3, r5
 8001e72:	dc26      	bgt.n	8001ec2 <_printf_common+0x96>
 8001e74:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001e78:	1e13      	subs	r3, r2, #0
 8001e7a:	6822      	ldr	r2, [r4, #0]
 8001e7c:	bf18      	it	ne
 8001e7e:	2301      	movne	r3, #1
 8001e80:	0692      	lsls	r2, r2, #26
 8001e82:	d42b      	bmi.n	8001edc <_printf_common+0xb0>
 8001e84:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001e88:	4649      	mov	r1, r9
 8001e8a:	4638      	mov	r0, r7
 8001e8c:	47c0      	blx	r8
 8001e8e:	3001      	adds	r0, #1
 8001e90:	d01e      	beq.n	8001ed0 <_printf_common+0xa4>
 8001e92:	6823      	ldr	r3, [r4, #0]
 8001e94:	68e5      	ldr	r5, [r4, #12]
 8001e96:	6832      	ldr	r2, [r6, #0]
 8001e98:	f003 0306 	and.w	r3, r3, #6
 8001e9c:	2b04      	cmp	r3, #4
 8001e9e:	bf08      	it	eq
 8001ea0:	1aad      	subeq	r5, r5, r2
 8001ea2:	68a3      	ldr	r3, [r4, #8]
 8001ea4:	6922      	ldr	r2, [r4, #16]
 8001ea6:	bf0c      	ite	eq
 8001ea8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001eac:	2500      	movne	r5, #0
 8001eae:	4293      	cmp	r3, r2
 8001eb0:	bfc4      	itt	gt
 8001eb2:	1a9b      	subgt	r3, r3, r2
 8001eb4:	18ed      	addgt	r5, r5, r3
 8001eb6:	2600      	movs	r6, #0
 8001eb8:	341a      	adds	r4, #26
 8001eba:	42b5      	cmp	r5, r6
 8001ebc:	d11a      	bne.n	8001ef4 <_printf_common+0xc8>
 8001ebe:	2000      	movs	r0, #0
 8001ec0:	e008      	b.n	8001ed4 <_printf_common+0xa8>
 8001ec2:	2301      	movs	r3, #1
 8001ec4:	4652      	mov	r2, sl
 8001ec6:	4649      	mov	r1, r9
 8001ec8:	4638      	mov	r0, r7
 8001eca:	47c0      	blx	r8
 8001ecc:	3001      	adds	r0, #1
 8001ece:	d103      	bne.n	8001ed8 <_printf_common+0xac>
 8001ed0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ed8:	3501      	adds	r5, #1
 8001eda:	e7c6      	b.n	8001e6a <_printf_common+0x3e>
 8001edc:	18e1      	adds	r1, r4, r3
 8001ede:	1c5a      	adds	r2, r3, #1
 8001ee0:	2030      	movs	r0, #48	; 0x30
 8001ee2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001ee6:	4422      	add	r2, r4
 8001ee8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001eec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001ef0:	3302      	adds	r3, #2
 8001ef2:	e7c7      	b.n	8001e84 <_printf_common+0x58>
 8001ef4:	2301      	movs	r3, #1
 8001ef6:	4622      	mov	r2, r4
 8001ef8:	4649      	mov	r1, r9
 8001efa:	4638      	mov	r0, r7
 8001efc:	47c0      	blx	r8
 8001efe:	3001      	adds	r0, #1
 8001f00:	d0e6      	beq.n	8001ed0 <_printf_common+0xa4>
 8001f02:	3601      	adds	r6, #1
 8001f04:	e7d9      	b.n	8001eba <_printf_common+0x8e>
	...

08001f08 <_printf_i>:
 8001f08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001f0c:	460c      	mov	r4, r1
 8001f0e:	4691      	mov	r9, r2
 8001f10:	7e27      	ldrb	r7, [r4, #24]
 8001f12:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001f14:	2f78      	cmp	r7, #120	; 0x78
 8001f16:	4680      	mov	r8, r0
 8001f18:	469a      	mov	sl, r3
 8001f1a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001f1e:	d807      	bhi.n	8001f30 <_printf_i+0x28>
 8001f20:	2f62      	cmp	r7, #98	; 0x62
 8001f22:	d80a      	bhi.n	8001f3a <_printf_i+0x32>
 8001f24:	2f00      	cmp	r7, #0
 8001f26:	f000 80d8 	beq.w	80020da <_printf_i+0x1d2>
 8001f2a:	2f58      	cmp	r7, #88	; 0x58
 8001f2c:	f000 80a3 	beq.w	8002076 <_printf_i+0x16e>
 8001f30:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001f34:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001f38:	e03a      	b.n	8001fb0 <_printf_i+0xa8>
 8001f3a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001f3e:	2b15      	cmp	r3, #21
 8001f40:	d8f6      	bhi.n	8001f30 <_printf_i+0x28>
 8001f42:	a001      	add	r0, pc, #4	; (adr r0, 8001f48 <_printf_i+0x40>)
 8001f44:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001f48:	08001fa1 	.word	0x08001fa1
 8001f4c:	08001fb5 	.word	0x08001fb5
 8001f50:	08001f31 	.word	0x08001f31
 8001f54:	08001f31 	.word	0x08001f31
 8001f58:	08001f31 	.word	0x08001f31
 8001f5c:	08001f31 	.word	0x08001f31
 8001f60:	08001fb5 	.word	0x08001fb5
 8001f64:	08001f31 	.word	0x08001f31
 8001f68:	08001f31 	.word	0x08001f31
 8001f6c:	08001f31 	.word	0x08001f31
 8001f70:	08001f31 	.word	0x08001f31
 8001f74:	080020c1 	.word	0x080020c1
 8001f78:	08001fe5 	.word	0x08001fe5
 8001f7c:	080020a3 	.word	0x080020a3
 8001f80:	08001f31 	.word	0x08001f31
 8001f84:	08001f31 	.word	0x08001f31
 8001f88:	080020e3 	.word	0x080020e3
 8001f8c:	08001f31 	.word	0x08001f31
 8001f90:	08001fe5 	.word	0x08001fe5
 8001f94:	08001f31 	.word	0x08001f31
 8001f98:	08001f31 	.word	0x08001f31
 8001f9c:	080020ab 	.word	0x080020ab
 8001fa0:	680b      	ldr	r3, [r1, #0]
 8001fa2:	1d1a      	adds	r2, r3, #4
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	600a      	str	r2, [r1, #0]
 8001fa8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001fac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001fb0:	2301      	movs	r3, #1
 8001fb2:	e0a3      	b.n	80020fc <_printf_i+0x1f4>
 8001fb4:	6825      	ldr	r5, [r4, #0]
 8001fb6:	6808      	ldr	r0, [r1, #0]
 8001fb8:	062e      	lsls	r6, r5, #24
 8001fba:	f100 0304 	add.w	r3, r0, #4
 8001fbe:	d50a      	bpl.n	8001fd6 <_printf_i+0xce>
 8001fc0:	6805      	ldr	r5, [r0, #0]
 8001fc2:	600b      	str	r3, [r1, #0]
 8001fc4:	2d00      	cmp	r5, #0
 8001fc6:	da03      	bge.n	8001fd0 <_printf_i+0xc8>
 8001fc8:	232d      	movs	r3, #45	; 0x2d
 8001fca:	426d      	negs	r5, r5
 8001fcc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001fd0:	485e      	ldr	r0, [pc, #376]	; (800214c <_printf_i+0x244>)
 8001fd2:	230a      	movs	r3, #10
 8001fd4:	e019      	b.n	800200a <_printf_i+0x102>
 8001fd6:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001fda:	6805      	ldr	r5, [r0, #0]
 8001fdc:	600b      	str	r3, [r1, #0]
 8001fde:	bf18      	it	ne
 8001fe0:	b22d      	sxthne	r5, r5
 8001fe2:	e7ef      	b.n	8001fc4 <_printf_i+0xbc>
 8001fe4:	680b      	ldr	r3, [r1, #0]
 8001fe6:	6825      	ldr	r5, [r4, #0]
 8001fe8:	1d18      	adds	r0, r3, #4
 8001fea:	6008      	str	r0, [r1, #0]
 8001fec:	0628      	lsls	r0, r5, #24
 8001fee:	d501      	bpl.n	8001ff4 <_printf_i+0xec>
 8001ff0:	681d      	ldr	r5, [r3, #0]
 8001ff2:	e002      	b.n	8001ffa <_printf_i+0xf2>
 8001ff4:	0669      	lsls	r1, r5, #25
 8001ff6:	d5fb      	bpl.n	8001ff0 <_printf_i+0xe8>
 8001ff8:	881d      	ldrh	r5, [r3, #0]
 8001ffa:	4854      	ldr	r0, [pc, #336]	; (800214c <_printf_i+0x244>)
 8001ffc:	2f6f      	cmp	r7, #111	; 0x6f
 8001ffe:	bf0c      	ite	eq
 8002000:	2308      	moveq	r3, #8
 8002002:	230a      	movne	r3, #10
 8002004:	2100      	movs	r1, #0
 8002006:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800200a:	6866      	ldr	r6, [r4, #4]
 800200c:	60a6      	str	r6, [r4, #8]
 800200e:	2e00      	cmp	r6, #0
 8002010:	bfa2      	ittt	ge
 8002012:	6821      	ldrge	r1, [r4, #0]
 8002014:	f021 0104 	bicge.w	r1, r1, #4
 8002018:	6021      	strge	r1, [r4, #0]
 800201a:	b90d      	cbnz	r5, 8002020 <_printf_i+0x118>
 800201c:	2e00      	cmp	r6, #0
 800201e:	d04d      	beq.n	80020bc <_printf_i+0x1b4>
 8002020:	4616      	mov	r6, r2
 8002022:	fbb5 f1f3 	udiv	r1, r5, r3
 8002026:	fb03 5711 	mls	r7, r3, r1, r5
 800202a:	5dc7      	ldrb	r7, [r0, r7]
 800202c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002030:	462f      	mov	r7, r5
 8002032:	42bb      	cmp	r3, r7
 8002034:	460d      	mov	r5, r1
 8002036:	d9f4      	bls.n	8002022 <_printf_i+0x11a>
 8002038:	2b08      	cmp	r3, #8
 800203a:	d10b      	bne.n	8002054 <_printf_i+0x14c>
 800203c:	6823      	ldr	r3, [r4, #0]
 800203e:	07df      	lsls	r7, r3, #31
 8002040:	d508      	bpl.n	8002054 <_printf_i+0x14c>
 8002042:	6923      	ldr	r3, [r4, #16]
 8002044:	6861      	ldr	r1, [r4, #4]
 8002046:	4299      	cmp	r1, r3
 8002048:	bfde      	ittt	le
 800204a:	2330      	movle	r3, #48	; 0x30
 800204c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002050:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8002054:	1b92      	subs	r2, r2, r6
 8002056:	6122      	str	r2, [r4, #16]
 8002058:	f8cd a000 	str.w	sl, [sp]
 800205c:	464b      	mov	r3, r9
 800205e:	aa03      	add	r2, sp, #12
 8002060:	4621      	mov	r1, r4
 8002062:	4640      	mov	r0, r8
 8002064:	f7ff fee2 	bl	8001e2c <_printf_common>
 8002068:	3001      	adds	r0, #1
 800206a:	d14c      	bne.n	8002106 <_printf_i+0x1fe>
 800206c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002070:	b004      	add	sp, #16
 8002072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002076:	4835      	ldr	r0, [pc, #212]	; (800214c <_printf_i+0x244>)
 8002078:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800207c:	6823      	ldr	r3, [r4, #0]
 800207e:	680e      	ldr	r6, [r1, #0]
 8002080:	061f      	lsls	r7, r3, #24
 8002082:	f856 5b04 	ldr.w	r5, [r6], #4
 8002086:	600e      	str	r6, [r1, #0]
 8002088:	d514      	bpl.n	80020b4 <_printf_i+0x1ac>
 800208a:	07d9      	lsls	r1, r3, #31
 800208c:	bf44      	itt	mi
 800208e:	f043 0320 	orrmi.w	r3, r3, #32
 8002092:	6023      	strmi	r3, [r4, #0]
 8002094:	b91d      	cbnz	r5, 800209e <_printf_i+0x196>
 8002096:	6823      	ldr	r3, [r4, #0]
 8002098:	f023 0320 	bic.w	r3, r3, #32
 800209c:	6023      	str	r3, [r4, #0]
 800209e:	2310      	movs	r3, #16
 80020a0:	e7b0      	b.n	8002004 <_printf_i+0xfc>
 80020a2:	6823      	ldr	r3, [r4, #0]
 80020a4:	f043 0320 	orr.w	r3, r3, #32
 80020a8:	6023      	str	r3, [r4, #0]
 80020aa:	2378      	movs	r3, #120	; 0x78
 80020ac:	4828      	ldr	r0, [pc, #160]	; (8002150 <_printf_i+0x248>)
 80020ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80020b2:	e7e3      	b.n	800207c <_printf_i+0x174>
 80020b4:	065e      	lsls	r6, r3, #25
 80020b6:	bf48      	it	mi
 80020b8:	b2ad      	uxthmi	r5, r5
 80020ba:	e7e6      	b.n	800208a <_printf_i+0x182>
 80020bc:	4616      	mov	r6, r2
 80020be:	e7bb      	b.n	8002038 <_printf_i+0x130>
 80020c0:	680b      	ldr	r3, [r1, #0]
 80020c2:	6826      	ldr	r6, [r4, #0]
 80020c4:	6960      	ldr	r0, [r4, #20]
 80020c6:	1d1d      	adds	r5, r3, #4
 80020c8:	600d      	str	r5, [r1, #0]
 80020ca:	0635      	lsls	r5, r6, #24
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	d501      	bpl.n	80020d4 <_printf_i+0x1cc>
 80020d0:	6018      	str	r0, [r3, #0]
 80020d2:	e002      	b.n	80020da <_printf_i+0x1d2>
 80020d4:	0671      	lsls	r1, r6, #25
 80020d6:	d5fb      	bpl.n	80020d0 <_printf_i+0x1c8>
 80020d8:	8018      	strh	r0, [r3, #0]
 80020da:	2300      	movs	r3, #0
 80020dc:	6123      	str	r3, [r4, #16]
 80020de:	4616      	mov	r6, r2
 80020e0:	e7ba      	b.n	8002058 <_printf_i+0x150>
 80020e2:	680b      	ldr	r3, [r1, #0]
 80020e4:	1d1a      	adds	r2, r3, #4
 80020e6:	600a      	str	r2, [r1, #0]
 80020e8:	681e      	ldr	r6, [r3, #0]
 80020ea:	6862      	ldr	r2, [r4, #4]
 80020ec:	2100      	movs	r1, #0
 80020ee:	4630      	mov	r0, r6
 80020f0:	f7fe f886 	bl	8000200 <memchr>
 80020f4:	b108      	cbz	r0, 80020fa <_printf_i+0x1f2>
 80020f6:	1b80      	subs	r0, r0, r6
 80020f8:	6060      	str	r0, [r4, #4]
 80020fa:	6863      	ldr	r3, [r4, #4]
 80020fc:	6123      	str	r3, [r4, #16]
 80020fe:	2300      	movs	r3, #0
 8002100:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002104:	e7a8      	b.n	8002058 <_printf_i+0x150>
 8002106:	6923      	ldr	r3, [r4, #16]
 8002108:	4632      	mov	r2, r6
 800210a:	4649      	mov	r1, r9
 800210c:	4640      	mov	r0, r8
 800210e:	47d0      	blx	sl
 8002110:	3001      	adds	r0, #1
 8002112:	d0ab      	beq.n	800206c <_printf_i+0x164>
 8002114:	6823      	ldr	r3, [r4, #0]
 8002116:	079b      	lsls	r3, r3, #30
 8002118:	d413      	bmi.n	8002142 <_printf_i+0x23a>
 800211a:	68e0      	ldr	r0, [r4, #12]
 800211c:	9b03      	ldr	r3, [sp, #12]
 800211e:	4298      	cmp	r0, r3
 8002120:	bfb8      	it	lt
 8002122:	4618      	movlt	r0, r3
 8002124:	e7a4      	b.n	8002070 <_printf_i+0x168>
 8002126:	2301      	movs	r3, #1
 8002128:	4632      	mov	r2, r6
 800212a:	4649      	mov	r1, r9
 800212c:	4640      	mov	r0, r8
 800212e:	47d0      	blx	sl
 8002130:	3001      	adds	r0, #1
 8002132:	d09b      	beq.n	800206c <_printf_i+0x164>
 8002134:	3501      	adds	r5, #1
 8002136:	68e3      	ldr	r3, [r4, #12]
 8002138:	9903      	ldr	r1, [sp, #12]
 800213a:	1a5b      	subs	r3, r3, r1
 800213c:	42ab      	cmp	r3, r5
 800213e:	dcf2      	bgt.n	8002126 <_printf_i+0x21e>
 8002140:	e7eb      	b.n	800211a <_printf_i+0x212>
 8002142:	2500      	movs	r5, #0
 8002144:	f104 0619 	add.w	r6, r4, #25
 8002148:	e7f5      	b.n	8002136 <_printf_i+0x22e>
 800214a:	bf00      	nop
 800214c:	08002289 	.word	0x08002289
 8002150:	0800229a 	.word	0x0800229a

08002154 <_read_r>:
 8002154:	b538      	push	{r3, r4, r5, lr}
 8002156:	4d07      	ldr	r5, [pc, #28]	; (8002174 <_read_r+0x20>)
 8002158:	4604      	mov	r4, r0
 800215a:	4608      	mov	r0, r1
 800215c:	4611      	mov	r1, r2
 800215e:	2200      	movs	r2, #0
 8002160:	602a      	str	r2, [r5, #0]
 8002162:	461a      	mov	r2, r3
 8002164:	f7fe fda2 	bl	8000cac <_read>
 8002168:	1c43      	adds	r3, r0, #1
 800216a:	d102      	bne.n	8002172 <_read_r+0x1e>
 800216c:	682b      	ldr	r3, [r5, #0]
 800216e:	b103      	cbz	r3, 8002172 <_read_r+0x1e>
 8002170:	6023      	str	r3, [r4, #0]
 8002172:	bd38      	pop	{r3, r4, r5, pc}
 8002174:	20000150 	.word	0x20000150

08002178 <_fstat_r>:
 8002178:	b538      	push	{r3, r4, r5, lr}
 800217a:	4d07      	ldr	r5, [pc, #28]	; (8002198 <_fstat_r+0x20>)
 800217c:	2300      	movs	r3, #0
 800217e:	4604      	mov	r4, r0
 8002180:	4608      	mov	r0, r1
 8002182:	4611      	mov	r1, r2
 8002184:	602b      	str	r3, [r5, #0]
 8002186:	f7fe fe98 	bl	8000eba <_fstat>
 800218a:	1c43      	adds	r3, r0, #1
 800218c:	d102      	bne.n	8002194 <_fstat_r+0x1c>
 800218e:	682b      	ldr	r3, [r5, #0]
 8002190:	b103      	cbz	r3, 8002194 <_fstat_r+0x1c>
 8002192:	6023      	str	r3, [r4, #0]
 8002194:	bd38      	pop	{r3, r4, r5, pc}
 8002196:	bf00      	nop
 8002198:	20000150 	.word	0x20000150

0800219c <_isatty_r>:
 800219c:	b538      	push	{r3, r4, r5, lr}
 800219e:	4d06      	ldr	r5, [pc, #24]	; (80021b8 <_isatty_r+0x1c>)
 80021a0:	2300      	movs	r3, #0
 80021a2:	4604      	mov	r4, r0
 80021a4:	4608      	mov	r0, r1
 80021a6:	602b      	str	r3, [r5, #0]
 80021a8:	f7fe ffec 	bl	8001184 <_isatty>
 80021ac:	1c43      	adds	r3, r0, #1
 80021ae:	d102      	bne.n	80021b6 <_isatty_r+0x1a>
 80021b0:	682b      	ldr	r3, [r5, #0]
 80021b2:	b103      	cbz	r3, 80021b6 <_isatty_r+0x1a>
 80021b4:	6023      	str	r3, [r4, #0]
 80021b6:	bd38      	pop	{r3, r4, r5, pc}
 80021b8:	20000150 	.word	0x20000150

080021bc <_init>:
 80021bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021be:	bf00      	nop
 80021c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80021c2:	bc08      	pop	{r3}
 80021c4:	469e      	mov	lr, r3
 80021c6:	4770      	bx	lr

080021c8 <_fini>:
 80021c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021ca:	bf00      	nop
 80021cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80021ce:	bc08      	pop	{r3}
 80021d0:	469e      	mov	lr, r3
 80021d2:	4770      	bx	lr
